{"version":3,"sources":["webpack:///./src/views/Settings.vue?d42b","webpack:///./src/configs/ringtones.js","webpack:///src/views/Settings.vue","webpack:///./src/views/Settings.vue?91de","webpack:///./src/views/Settings.vue","webpack:///./node_modules/chart.js/dist/Chart.js","webpack:///./src/views/Analytics.vue?46a2","webpack:///./node_modules/vue-chartjs/es/mixins/index.js","webpack:///./node_modules/vue-chartjs/es/BaseCharts.js","webpack:///./src/components/Chart.vue","webpack:///src/components/Chart.vue","webpack:///./src/components/Chart.vue?0609","webpack:///src/views/Analytics.vue","webpack:///./src/views/Analytics.vue?ba7d","webpack:///./src/views/Analytics.vue","webpack:///./src/views/Todos.vue?3b3a","webpack:///src/views/Todos.vue","webpack:///./src/views/Todos.vue?cac2","webpack:///./src/views/Todos.vue","webpack:///./src/views/About.vue?618e","webpack:///src/views/About.vue","webpack:///./src/views/About.vue?f1da","webpack:///./src/views/About.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_m","_l","options","ringtone","index","key","attrs","type","id","name","domProps","value","checked","settingRingtone","working","on","change","$event","changeRingtone","for","_v","_s","resting","class","disabled","allTodos","click","preventDefault","deleteTodos","staticRenderFns","ringtons","Settingsvue_type_script_lang_js_","data","ringtones","computed","_objectSpread","Object","vuex_esm","methods","settingSetRingtone","deleteConfirm","window","confirm","todoDeleteAll","views_Settingsvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__","global","factory","module","exports","__webpack_require__","e","moment","hasOwnProperty","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","hsl2rgb","hsl2hsv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lab2lch","lch2lab","lch2xyz","lch2rgb","rgb","h","s","l","r","g","b","min","Math","max","delta","v","w","c","m","y","k","reverseKeywords","JSON","stringify","pow","x","z","a","xyz","args","hsl","t1","t2","t3","val","i","sv","hsv","hi","floor","f","p","q","t","sl","hwb","n","wh","bl","ratio","cmyk","lab","y2","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","convert","Converter","func","arg","Array","prototype","slice","call","arguments","pair","exec","from","to","undefined","length","round","convs","routeSpace","space","values","getValues","setValues","vals","fspace","forEach","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","getHsl","getHwb","getAlpha","hexString","rgbString","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","string","abbr","hex","rgba","per","match","hexAlpha","parseInt","parseFloat","scale","alpha","isNaN","hsla","hexDouble","reverseNames","num","str","toString","toUpperCase","Color","obj","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","concat","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","yiq","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","color1","w1","w2","toJSON","clone","result","source","target","prop","console","error","spaces","maxes","charAt","capped","chans","sname","svalues","chartjsColor","helpers","noop","uid","isNullOrUndef","isArray","substr","isObject","isFinite","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","apply","each","loopable","reverse","len","keys","arrayEquals","a0","a1","ilen","v0","v1","map","klen","_merger","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","constructor","Surrogate","__super__","helpers_core","callCallback","indexOf","array","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","clear","chart","ctx","clearRect","width","height","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","size","cornerRadius","rad","drawImage","beginPath","lineTo","SQRT1_2","fill","stroke","_isPointInArea","point","area","epsilon","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","defaults","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","toFontString","font","family","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","fontSize","fontFamily","lineHeight","fontStyle","resolve","inputs","context","helpers$1","easing","canvas","interpolate","start","view","model","ease","actual","origin","c0","c1","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","onAnimationProgress","onAnimationComplete","core_animation","defineProperty","get","set","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","push","requestAnimationFrame","cancelAnimation","findIndex","splice","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","configurable","enumerable","method","base","res","object","unlistenArrayEvents","stub","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","dataset","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","datasets","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","update","destroy","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","element","updateElement","buildOrUpdateElements","isExtensible","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","current","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","yRange","mouseY","pointStyle","element_point","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderSkipped","edge","borderSkipped","horizontal","parseBorderWidth","maxW","maxH","boundingRects","bounds","border","outer","inner","skipX","skipY","rectangle","element_rectangle","rects","fillRect","Arc","Line","Point","Rectangle","resolve$1","computeMinSampleSize","pixels","prev","curr","isHorizontal","ticks","getTicks","getPixelForTick","computeFitCategoryTraits","ruler","thickness","barThickness","stackCount","categoryPercentage","barPercentage","chunk","computeFlexCategoryTraits","next","percent","end","hover","mode","offset","gridLines","offsetGridLines","controller_bar","stack","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","label","labels","_updateElementGeometry","vscale","getBasePixel","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","getPixelForValue","imeta","ivalue","getRightValue","minBarLength","controller","range","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","position","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","legend","generateLabels","ds","arcOpts","bw","onClick","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","filter","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","display","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","controller_scatter","controllers","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","handler","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","findMaxPadding","boxes","box","getPadding","boxPadding","addSizeByPosition","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","props","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getMinimumBoxSize","fitBox","finalFitVerticalBox","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBoxSize","findNextWhere","minBox","scaleMargin","platform_basic","acquireContext","getContext","platform_dom","platform_dom$1","freeze","default","getCjsExportFromNamespace","stylesheet","EXPANDO_KEY","CSS_PREFIX","CSS_SIZE_MONITOR","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","property","getStyle","initCanvas","config","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","supportsEventListenerOptions","supports","addEventListener","eventListenerOptions","passive","addListener","node","removeListener","removeEventListener","createEvent","nativeEvent","fromNativeEvent","event","pos","throttled","ticking","createDiv","cls","el","document","createElement","className","createResizer","maxSize","resizer","expand","shrink","appendChild","_reset","scrollLeft","scrollTop","onScroll","bind","watchForRender","expando","proxy","renderProxy","animationName","reflow","offsetParent","classList","add","unwatchForRender","remove","addResizeListener","container","maintainAspectRatio","parentNode","clientWidth","insertBefore","firstChild","removeResizeListener","removeChild","injectCSS","platform","css","_style","setAttribute","getElementsByTagName","createTextNode","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","getElementById","releaseContext","removeAttribute","proxies","addEvent","removeEvent","implementation","plugins","core_plugins","_plugins","_cacheId","register","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","d","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","split","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getTooltipSize","tooltip","body","combinedBodyLength","reduce","bodyItem","before","lines","after","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","determineAlignment","lf","rf","olf","orf","yf","midX","midY","getBackgroundPoint","alignment","paddingAndSize","radiusAndPadding","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","getBeforeBody","getBody","bodyItems","getAfterBody","getFooter","changed","existingModel","active","_active","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","dataPoints","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","initConfig","updateConfig","newOptions","ensureScalesHaveIDs","buildOrUpdateScales","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","Error","resetElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","Controller","types","configMerge","scaleMerge","core_helpers","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","almostEquals","almostWhole","rounded","NEGATIVE_INFINITY","sign","log10","exponent","log","LOG10E","powerOf10","isPowerOf10","toRadians","toDegrees","radians","_decimalPlaces","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","loop","niceNum","niceFraction","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","paddingLeft","paddingTop","paddingRight","paddingBottom","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","longestText","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","textWidth","numberOfLabelLines","numberOfLines","color","CanvasGradient","colorValue","CanvasPattern","abstract","DateAdapter","formats","parse","format","diff","startOf","endOf","_create","override","members","_date","core_adapters","core_ticks","formatters","tickValue","logDelta","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","getPixelForGridLine","lineValue","computeTextSize","tick","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","sinRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","lineSpace","tickPadding","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","defaultConfig","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","generateTicks","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","MIN_SPACING","stepSize","unit","maxNumSpaces","precision","rmin","rmax","spacing","ceil","scale_linearbase","handleTickRangeOptions","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","fixedStepSize","ticksAsNumbers","defaultConfig$1","scale_linear","DEFAULT_MIN","DEFAULT_MAX","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","generateTicks$1","exp","significand","tickVal","endExp","endSignificand","minNotZero","lastTick","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","textSize","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","drawingArea","getIndexAngle","hLimits","vLimits","setReductions","getTextAlignForAngle","adjustPointPositionForLabelHeight","drawPointLabels","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawRadiusLine","numberOrZero","param","scale_radialLinear","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","yCenterOffset","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","buildLookupTable","timestamps","distribution","time","table","lookup","mid","i0","i1","lo","interpolate$1","skey","tkey","span","toTimestamp","input","adapter","_adapter","parser","determineStepSize","capacity","interval","milliseconds","determineUnitForAutoTicks","minUnit","determineUnitForFormatting","determineMajorUnit","generate","timeOpts","unitStepSize","weekday","isoWeekday","majorTicksEnabled","first","computeOffsets","ticksFromTimestamps","majorUnit","defaultConfig$4","adapters","displayFormat","displayFormats","scale_time","date","warn","timestamp","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","_majorUnit","_offsets","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","category","radialLinear","FORMATS","_id","valueOf","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","doFill","mapper","p0","p1","d0","d1","plugin_filler","afterDatasetsUpdate","$filler","beforeDatasetDraw","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","drawLegendBox","SQRT2","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","plugin_title","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","todayTodos","weekTodos","href","setPrevWeek","weekDayTodos","todayInWeek","setNextWeek","chart-data","chartData","dataHandler","newData","oldData","$data","newDatasetLabels","oldDatasetLabels","oldLabels","newLabels","oldDatasetKeys","newDatasetKeys","deletionKeys","attribute","deletionKey","$emit","renderChart","reactiveData","watch","reactiveProp","required","mixins","generateChart","chartId","chartType","styles","cssClasses","ref","addPlugin","Chart_default","$refs","beforeDestroy","Chart_render","Chart_staticRenderFns","Bar","Chartvue_type_script_lang_js_","extends","mounted","components_Chartvue_type_script_lang_js_","components_Chart","Analyticsvue_type_script_lang_js_","components","barChart","weekDayTodosDates","days","moment_default","weekDayTodosAmount","todos","views_Analyticsvue_type_script_lang_js_","Analytics_component","theme","list","activeTodos","show-more","show-date","click-check","doneTodo","click-delete","deleteTodo","finishedTodos","show-delete","Todosvue_type_script_lang_js_","TodoEditor","TodoList","todo","finishedAt","getTime","todoUpdate","todoDeleteOne","views_Todosvue_type_script_lang_js_","Aboutvue_type_script_lang_js_","views_Aboutvue_type_script_lang_js_"],"mappings":"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","file":"js/about.0558150b.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"page page-settings\"},[_c('div',{staticClass:\"setting-group\"},[_vm._m(0),_c('div',{staticClass:\"setting-content\"},[_c('div',{staticClass:\"row\"},_vm._l((_vm.options.ringtones),function(ringtone,index){return _c('div',{key:index,staticClass:\"list-item col-6 col-lg-4\"},[_c('div',{staticClass:\"custom-control custom-radio custom-control-inline\"},[_c('input',{staticClass:\"custom-control-input\",attrs:{\"type\":\"radio\",\"id\":(\"settingWorkingRingtone_\" + index),\"name\":\"settingWorkingRingtone\"},domProps:{\"value\":ringtone.value,\"checked\":ringtone.value === _vm.settingRingtone.working},on:{\"change\":function($event){return _vm.changeRingtone('working', ringtone.value)}}}),_c('label',{staticClass:\"custom-control-label text-uppercase font-weight-bold pl-1\",attrs:{\"for\":(\"settingWorkingRingtone_\" + index)}},[_vm._v(\"\\n              \"+_vm._s(ringtone.name)+\"\\n            \")])])])}),0)])]),_c('div',{staticClass:\"setting-group\"},[_vm._m(1),_c('div',{staticClass:\"setting-content\"},[_c('div',{staticClass:\"row\"},_vm._l((_vm.options.ringtones),function(ringtone,index){return _c('div',{key:index,staticClass:\"list-item col-6 col-lg-4\"},[_c('div',{staticClass:\"custom-control custom-radio custom-control-inline\"},[_c('input',{staticClass:\"custom-control-input\",attrs:{\"type\":\"radio\",\"id\":(\"settingRestingRingtone_\" + index),\"name\":\"settingRestingRingtone\"},domProps:{\"value\":ringtone.value,\"checked\":ringtone.value === _vm.settingRingtone.resting},on:{\"change\":function($event){return _vm.changeRingtone('resting', ringtone.value)}}}),_c('label',{staticClass:\"custom-control-label text-uppercase font-weight-bold pl-1\",attrs:{\"for\":(\"settingRestingRingtone_\" + index)}},[_vm._v(\"\\n              \"+_vm._s(ringtone.name)+\"\\n            \")])])])}),0)])]),_c('div',{staticClass:\"setting-group\"},[_vm._m(2),_c('div',{staticClass:\"setting-content\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-auto\"},[_c('button',{staticClass:\"btn btn-danger\",class:{'disabled': _vm.allTodos === 0},attrs:{\"type\":\"button\",\"disabled\":_vm.allTodos === 0},on:{\"click\":function($event){$event.preventDefault();return _vm.deleteTodos($event)}}},[_vm._v(\"Delete All Todos\")])])])])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"setting-header\"},[_c('h5',[_vm._v(\"Work\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"setting-header\"},[_c('h5',[_vm._v(\"Break\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"setting-header\"},[_c('h5',[_vm._v(\"Settings\")])])}]\n\nexport { render, staticRenderFns }","const ringtons = [\n  {\n    name: 'None',\n    value: 'none',\n  },\n  {\n    name: 'Default',\n    value: 'default',\n  },\n  {\n    name: 'Alarm',\n    value: 'alarm',\n  },\n  {\n    name: 'Alert',\n    value: 'alert',\n  },\n  {\n    name: 'Beep',\n    value: 'beep',\n  },\n  {\n    name: 'Bell',\n    value: 'bell',\n  },\n  {\n    name: 'Bird',\n    value: 'bird',\n  },\n  {\n    name: 'Bugle',\n    value: 'bugle',\n  },\n  {\n    name: 'Digital',\n    value: 'digital',\n  },\n  {\n    name: 'Drop',\n    value: 'drop',\n  },\n  {\n    name: 'Horn',\n    value: 'horn',\n  },\n  {\n    name: 'Music',\n    value: 'music',\n  },\n  {\n    name: 'Ring',\n    value: 'ring',\n  },\n  {\n    name: 'Warning',\n    value: 'warning',\n  },\n  {\n    name: 'Whistle',\n    value: 'whistle',\n  },\n];\n\nexport default ringtons;\n","<template>\n  <div class=\"page page-settings\">\n    <div class=\"setting-group\">\n      <div class=\"setting-header\">\n        <h5>Work</h5>\n      </div>\n      <div class=\"setting-content\">\n        <div class=\"row\">\n          <div\n            class=\"list-item col-6 col-lg-4\"\n            v-for=\"(ringtone, index) in options.ringtones\"\n            :key=\"index\"\n          >\n            <div class=\"custom-control custom-radio custom-control-inline\">\n              <input\n                type=\"radio\"\n                :id=\"`settingWorkingRingtone_${index}`\"\n                name=\"settingWorkingRingtone\"\n                class=\"custom-control-input\"\n                :value=\"ringtone.value\"\n                :checked=\"ringtone.value === settingRingtone.working\"\n                @change=\"changeRingtone('working', ringtone.value)\"\n              >\n              <label\n                class=\"custom-control-label text-uppercase font-weight-bold pl-1\"\n                :for=\"`settingWorkingRingtone_${index}`\"\n              >\n                {{ ringtone.name }}\n              </label>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"setting-group\">\n      <div class=\"setting-header\">\n        <h5>Break</h5>\n      </div>\n      <div class=\"setting-content\">\n        <div class=\"row\">\n          <div\n            class=\"list-item col-6 col-lg-4\"\n            v-for=\"(ringtone, index) in options.ringtones\"\n            :key=\"index\"\n          >\n            <div class=\"custom-control custom-radio custom-control-inline\">\n              <input\n                type=\"radio\"\n                :id=\"`settingRestingRingtone_${index}`\"\n                name=\"settingRestingRingtone\"\n                class=\"custom-control-input\"\n                :value=\"ringtone.value\"\n                :checked=\"ringtone.value === settingRingtone.resting\"\n                @change=\"changeRingtone('resting', ringtone.value)\"\n              >\n              <label\n                class=\"custom-control-label text-uppercase font-weight-bold pl-1\"\n                :for=\"`settingRestingRingtone_${index}`\"\n              >\n                {{ ringtone.name }}\n              </label>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"setting-group\">\n      <div class=\"setting-header\">\n        <h5>Settings</h5>\n      </div>\n      <div class=\"setting-content\">\n        <div class=\"row\">\n          <div class=\"col-auto\">\n            <button\n              class=\"btn btn-danger\"\n              :class=\"{'disabled': allTodos === 0}\"\n              type=\"button\"\n              @click.prevent=\"deleteTodos\"\n              :disabled=\"allTodos === 0\"\n            >Delete All Todos</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapMutations, mapGetters } from 'vuex';\nimport ringtones from '../configs/ringtones';\n\nexport default {\n  name: 'Settings',\n\n  data() {\n    return {\n      options: {\n        ringtones,\n      },\n    };\n  },\n\n  computed: {\n    ...mapGetters('todos', [\n      'allTodos',\n    ]),\n\n    ...mapState('setting', {\n      settingRingtone: 'rington',\n    }),\n  },\n\n  methods: {\n    changeRingtone(key, value) {\n      this.settingSetRingtone({\n        key,\n        value,\n      });\n    },\n\n    deleteTodos() {\n      // eslint-disable-next-line no-alert\n      const deleteConfirm = window.confirm('Confirm to delete all to-do items? This will not be restored.');\n      if (deleteConfirm === true) {\n        // document.write(\"You pressed OK!\");\n        this.todoDeleteAll();\n      } else {\n        // document.write(\"You pressed Cancel!\");\n      }\n    },\n\n    ...mapMutations('setting', {\n      settingSetRingtone: 'SETTING_SET_RINGTON',\n    }),\n\n    ...mapMutations('todos', {\n      todoDeleteAll: 'TODO_DELETE_ALL',\n    }),\n  },\n};\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Settings.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Settings.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Settings.vue?vue&type=template&id=ea57de80&\"\nimport script from \"./Settings.vue?vue&type=script&lang=js&\"\nexport * from \"./Settings.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function() { try { return require('moment'); } catch(e) { } }()) :\ntypeof define === 'function' && define.amd ? define(['require'], function(require) { return factory(function() { try { return require('moment'); } catch(e) { } }()); }) :\n(global.Chart = factory(global.moment));\n}(this, (function (moment) { 'use strict';\n\nmoment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n\n/* MIT license */\n\nvar conversions = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n};\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n\nvar convert = function() {\n   return new Converter();\n};\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   };\n});\n\nvar colorConvert = convert;\n\nvar colorName = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\n\n/* MIT license */\n\n\nvar colorString = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n};\n\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3,4})$/i,\n       hex =  /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       keyword = /(\\w+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr),\n       hexAlpha = \"\";\n   if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n      if (hexAlpha) {\n         a = Math.round((parseInt(hexAlpha + hexAlpha, 16) / 255) * 100) / 100;\n      }\n   }\n   else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n      if (hexAlpha) {\n         a = Math.round((parseInt(hexAlpha, 16) / 255) * 100) / 100;\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorName[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgba, a) {\n   var a = (a !== undefined && rgba.length === 3) ? a : rgba[3];\n   return \"#\" + hexDouble(rgba[0]) \n              + hexDouble(rgba[1])\n              + hexDouble(rgba[2])\n              + (\n                 (a >= 0 && a < 1)\n                 ? hexDouble(Math.round(a * 255))\n                 : \"\"\n              );\n}\n\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorName) {\n   reverseNames[colorName[name]] = name;\n}\n\n/* MIT license */\n\n\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = colorString.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = colorString.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = colorString.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn colorString.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn colorString.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn colorString.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn colorString.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn colorString.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn colorString.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn colorString.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn colorString.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = colorConvert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nvar chartjsColor = Color;\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n\t/**\n\t * An empty function that can be used, for example, for optional callback.\n\t */\n\tnoop: function() {},\n\n\t/**\n\t * Returns a unique id, sequentially generated from a global variable.\n\t * @returns {number}\n\t * @function\n\t */\n\tuid: (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}()),\n\n\t/**\n\t * Returns true if `value` is neither null nor undefined, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {boolean}\n\t * @since 2.7.0\n\t */\n\tisNullOrUndef: function(value) {\n\t\treturn value === null || typeof value === 'undefined';\n\t},\n\n\t/**\n\t * Returns true if `value` is an array (including typed arrays), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {boolean}\n\t * @function\n\t */\n\tisArray: function(value) {\n\t\tif (Array.isArray && Array.isArray(value)) {\n\t\t\treturn true;\n\t\t}\n\t\tvar type = Object.prototype.toString.call(value);\n\t\tif (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\n\t/**\n\t * Returns true if `value` is an object (excluding null), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {boolean}\n\t * @since 2.7.0\n\t */\n\tisObject: function(value) {\n\t\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\n\t},\n\n\t/**\n\t * Returns true if `value` is a finite number, else returns false\n\t * @param {*} value  - The value to test.\n\t * @returns {boolean}\n\t */\n\tisFinite: function(value) {\n\t\treturn (typeof value === 'number' || value instanceof Number) && isFinite(value);\n\t},\n\n\t/**\n\t * Returns `value` if defined, else returns `defaultValue`.\n\t * @param {*} value - The value to return if defined.\n\t * @param {*} defaultValue - The value to return if `value` is undefined.\n\t * @returns {*}\n\t */\n\tvalueOrDefault: function(value, defaultValue) {\n\t\treturn typeof value === 'undefined' ? defaultValue : value;\n\t},\n\n\t/**\n\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n\t * @param {Array} value - The array to lookup for value at `index`.\n\t * @param {number} index - The index in `value` to lookup for value.\n\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n\t * @returns {*}\n\t */\n\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\n\t\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n\t},\n\n\t/**\n\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n\t * @param {function} fn - The function to call.\n\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n\t * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @returns {*}\n\t */\n\tcallback: function(fn, args, thisArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\treturn fn.apply(thisArg, args);\n\t\t}\n\t},\n\n\t/**\n\t * Note(SB) for performance sake, this method should only be used when loopable type\n\t * is unknown or in none intensive code (not called often and small loopable). Else\n\t * it's preferable to use a regular for() loop and save extra function calls.\n\t * @param {object|Array} loopable - The object or array to be iterated.\n\t * @param {function} fn - The function to call for each item.\n\t * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n\t */\n\teach: function(loopable, fn, thisArg, reverse) {\n\t\tvar i, len, keys;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (helpers.isObject(loopable)) {\n\t\t\tkeys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tfn.call(thisArg, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n\t * @see https://stackoverflow.com/a/14853974\n\t * @param {Array} a0 - The array to compare\n\t * @param {Array} a1 - The array to compare\n\t * @returns {boolean}\n\t */\n\tarrayEquals: function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns a deep copy of `source` without keeping references on objects and arrays.\n\t * @param {*} source - The value to clone.\n\t * @returns {*}\n\t */\n\tclone: function(source) {\n\t\tif (helpers.isArray(source)) {\n\t\t\treturn source.map(helpers.clone);\n\t\t}\n\n\t\tif (helpers.isObject(source)) {\n\t\t\tvar target = {};\n\t\t\tvar keys = Object.keys(source);\n\t\t\tvar klen = keys.length;\n\t\t\tvar k = 0;\n\n\t\t\tfor (; k < klen; ++k) {\n\t\t\t\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\treturn source;\n\t},\n\n\t/**\n\t * The default merger when Chart.helpers.merge is called without merger option.\n\t * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n\t * @private\n\t */\n\t_merger: function(key, target, source, options) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.merge(tval, sval, options);\n\t\t} else {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Merges source[key] in target[key] only if target[key] is undefined.\n\t * @private\n\t */\n\t_mergerIf: function(key, target, source) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.mergeIf(tval, sval);\n\t\t} else if (!target.hasOwnProperty(key)) {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` with the given `options`.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {object} target - The target object in which all sources are merged into.\n\t * @param {object|object[]} source - Object(s) to merge into `target`.\n\t * @param {object} [options] - Merging options:\n\t * @param {function} [options.merger] - The merge method (key, target, source, options)\n\t * @returns {object} The `target` object.\n\t */\n\tmerge: function(target, source, options) {\n\t\tvar sources = helpers.isArray(source) ? source : [source];\n\t\tvar ilen = sources.length;\n\t\tvar merge, i, keys, klen, k;\n\n\t\tif (!helpers.isObject(target)) {\n\t\t\treturn target;\n\t\t}\n\n\t\toptions = options || {};\n\t\tmerge = options.merger || helpers._merger;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!helpers.isObject(source)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeys = Object.keys(source);\n\t\t\tfor (k = 0, klen = keys.length; k < klen; ++k) {\n\t\t\t\tmerge(keys[k], target, source, options);\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {object} target - The target object in which all sources are merged into.\n\t * @param {object|object[]} source - Object(s) to merge into `target`.\n\t * @returns {object} The `target` object.\n\t */\n\tmergeIf: function(target, source) {\n\t\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\n\t},\n\n\t/**\n\t * Applies the contents of two or more objects together into the first object.\n\t * @param {object} target - The target object in which all objects are merged into.\n\t * @param {object} arg1 - Object containing additional properties to merge in target.\n\t * @param {object} argN - Additional objects containing properties to merge in target.\n\t * @returns {object} The `target` object.\n\t */\n\textend: function(target) {\n\t\tvar setFn = function(value, key) {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn target;\n\t},\n\n\t/**\n\t * Basic javascript inheritance based on the model created in Backbone.js\n\t */\n\tinherits: function(extensions) {\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\t\treturn ChartElement;\n\t}\n};\n\nvar helpers_core = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.indexOf = function(array, item, fromIndex) {\n\treturn Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\nvar effects = {\n\tlinear: function(t) {\n\t\treturn t;\n\t},\n\n\teaseInQuad: function(t) {\n\t\treturn t * t;\n\t},\n\n\teaseOutQuad: function(t) {\n\t\treturn -t * (t - 2);\n\t},\n\n\teaseInOutQuad: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t;\n\t\t}\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t},\n\n\teaseInCubic: function(t) {\n\t\treturn t * t * t;\n\t},\n\n\teaseOutCubic: function(t) {\n\t\treturn (t = t - 1) * t * t + 1;\n\t},\n\n\teaseInOutCubic: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t},\n\n\teaseInQuart: function(t) {\n\t\treturn t * t * t * t;\n\t},\n\n\teaseOutQuart: function(t) {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t},\n\n\teaseInOutQuart: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t;\n\t\t}\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t},\n\n\teaseInQuint: function(t) {\n\t\treturn t * t * t * t * t;\n\t},\n\n\teaseOutQuint: function(t) {\n\t\treturn (t = t - 1) * t * t * t * t + 1;\n\t},\n\n\teaseInOutQuint: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t},\n\n\teaseInSine: function(t) {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t},\n\n\teaseOutSine: function(t) {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t},\n\n\teaseInOutSine: function(t) {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t},\n\n\teaseInExpo: function(t) {\n\t\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t},\n\n\teaseOutExpo: function(t) {\n\t\treturn (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n\t},\n\n\teaseInOutExpo: function(t) {\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t}\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t},\n\n\teaseInCirc: function(t) {\n\t\tif (t >= 1) {\n\t\t\treturn t;\n\t\t}\n\t\treturn -(Math.sqrt(1 - t * t) - 1);\n\t},\n\n\teaseOutCirc: function(t) {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t},\n\n\teaseInOutCirc: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t}\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t},\n\n\teaseInElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t},\n\n\teaseOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t},\n\n\teaseInOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ((t /= 0.5) === 2) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.45;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\tif (t < 1) {\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t\t}\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t},\n\teaseInBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn t * t * ((s + 1) * t - s);\n\t},\n\n\teaseOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t},\n\n\teaseInOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t},\n\n\teaseInBounce: function(t) {\n\t\treturn 1 - effects.easeOutBounce(1 - t);\n\t},\n\n\teaseOutBounce: function(t) {\n\t\tif (t < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t}\n\t\tif (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t}\n\t\tif (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t}\n\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t},\n\n\teaseInOutBounce: function(t) {\n\t\tif (t < 0.5) {\n\t\t\treturn effects.easeInBounce(t * 2) * 0.5;\n\t\t}\n\t\treturn effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n};\n\nvar helpers_easing = {\n\teffects: effects\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers_core.easingEffects = effects;\n\nvar PI = Math.PI;\nvar RAD_PER_DEG = PI / 180;\nvar DOUBLE_PI = PI * 2;\nvar HALF_PI = PI / 2;\nvar QUARTER_PI = PI / 4;\nvar TWO_THIRDS_PI = PI * 2 / 3;\n\n/**\n * @namespace Chart.helpers.canvas\n */\nvar exports$1 = {\n\t/**\n\t * Clears the entire canvas associated to the given `chart`.\n\t * @param {Chart} chart - The chart for which to clear the canvas.\n\t */\n\tclear: function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t},\n\n\t/**\n\t * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n\t * given size (width, height) and the same `radius` for all corners.\n\t * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n\t * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n\t * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n\t * @param {number} width - The rectangle's width.\n\t * @param {number} height - The rectangle's height.\n\t * @param {number} radius - The rounded amount (in pixels) for the four corners.\n\t * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n\t */\n\troundedRect: function(ctx, x, y, width, height, radius) {\n\t\tif (radius) {\n\t\t\tvar r = Math.min(radius, height / 2, width / 2);\n\t\t\tvar left = x + r;\n\t\t\tvar top = y + r;\n\t\t\tvar right = x + width - r;\n\t\t\tvar bottom = y + height - r;\n\n\t\t\tctx.moveTo(x, top);\n\t\t\tif (left < right && top < bottom) {\n\t\t\t\tctx.arc(left, top, r, -PI, -HALF_PI);\n\t\t\t\tctx.arc(right, top, r, -HALF_PI, 0);\n\t\t\t\tctx.arc(right, bottom, r, 0, HALF_PI);\n\t\t\t\tctx.arc(left, bottom, r, HALF_PI, PI);\n\t\t\t} else if (left < right) {\n\t\t\t\tctx.moveTo(left, y);\n\t\t\t\tctx.arc(right, top, r, -HALF_PI, HALF_PI);\n\t\t\t\tctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n\t\t\t} else if (top < bottom) {\n\t\t\t\tctx.arc(left, top, r, -PI, 0);\n\t\t\t\tctx.arc(left, bottom, r, 0, PI);\n\t\t\t} else {\n\t\t\t\tctx.arc(left, top, r, -PI, PI);\n\t\t\t}\n\t\t\tctx.closePath();\n\t\t\tctx.moveTo(x, y);\n\t\t} else {\n\t\t\tctx.rect(x, y, width, height);\n\t\t}\n\t},\n\n\tdrawPoint: function(ctx, style, radius, x, y, rotation) {\n\t\tvar type, xOffset, yOffset, size, cornerRadius;\n\t\tvar rad = (rotation || 0) * RAD_PER_DEG;\n\n\t\tif (style && typeof style === 'object') {\n\t\t\ttype = style.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.beginPath();\n\n\t\tswitch (style) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.arc(x, y, radius, 0, DOUBLE_PI);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n\t\t\trad += TWO_THIRDS_PI;\n\t\t\tctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n\t\t\trad += TWO_THIRDS_PI;\n\t\t\tctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\t// NOTE: the rounded rect implementation changed to use `arc` instead of\n\t\t\t// `quadraticCurveTo` since it generates better results when rect is\n\t\t\t// almost a circle. 0.516 (instead of 0.5) produces results with visually\n\t\t\t// closer proportion to the previous impl and it is inscribed in the\n\t\t\t// circle with `radius`. For more details, see the following PRs:\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5597\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5858\n\t\t\tcornerRadius = radius * 0.516;\n\t\t\tsize = radius - cornerRadius;\n\t\t\txOffset = Math.cos(rad + QUARTER_PI) * size;\n\t\t\tyOffset = Math.sin(rad + QUARTER_PI) * size;\n\t\t\tctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n\t\t\tctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n\t\t\tctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n\t\t\tctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tif (!rotation) {\n\t\t\t\tsize = Math.SQRT1_2 * radius;\n\t\t\t\tctx.rect(x - size, y - size, 2 * size, 2 * size);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\trad += QUARTER_PI;\n\t\t\t/* falls through */\n\t\tcase 'rectRot':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\trad += QUARTER_PI;\n\t\t\t/* falls through */\n\t\tcase 'cross':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\trad += QUARTER_PI;\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tctx.moveTo(x + yOffset, y - xOffset);\n\t\t\tctx.lineTo(x - yOffset, y + xOffset);\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\txOffset = Math.cos(rad) * radius;\n\t\t\tyOffset = Math.sin(rad) * radius;\n\t\t\tctx.moveTo(x - xOffset, y - yOffset);\n\t\t\tctx.lineTo(x + xOffset, y + yOffset);\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.moveTo(x, y);\n\t\t\tctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.fill();\n\t\tctx.stroke();\n\t},\n\n\t/**\n\t * Returns true if the point is inside the rectangle\n\t * @param {object} point - The point to test\n\t * @param {object} area - The rectangle\n\t * @returns {boolean}\n\t * @private\n\t */\n\t_isPointInArea: function(point, area) {\n\t\tvar epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n\t\treturn point.x > area.left - epsilon && point.x < area.right + epsilon &&\n\t\t\tpoint.y > area.top - epsilon && point.y < area.bottom + epsilon;\n\t},\n\n\tclipArea: function(ctx, area) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n\t\tctx.clip();\n\t},\n\n\tunclipArea: function(ctx) {\n\t\tctx.restore();\n\t},\n\n\tlineTo: function(ctx, previous, target, flip) {\n\t\tvar stepped = target.steppedLine;\n\t\tif (stepped) {\n\t\t\tif (stepped === 'middle') {\n\t\t\t\tvar midpoint = (previous.x + target.x) / 2.0;\n\t\t\t\tctx.lineTo(midpoint, flip ? target.y : previous.y);\n\t\t\t\tctx.lineTo(midpoint, flip ? previous.y : target.y);\n\t\t\t} else if ((stepped === 'after' && !flip) || (stepped !== 'after' && flip)) {\n\t\t\t\tctx.lineTo(previous.x, target.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(target.x, previous.y);\n\t\t\t}\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.tension) {\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tctx.bezierCurveTo(\n\t\t\tflip ? previous.controlPointPreviousX : previous.controlPointNextX,\n\t\t\tflip ? previous.controlPointPreviousY : previous.controlPointNextY,\n\t\t\tflip ? target.controlPointNextX : target.controlPointPreviousX,\n\t\t\tflip ? target.controlPointNextY : target.controlPointPreviousY,\n\t\t\ttarget.x,\n\t\t\ttarget.y);\n\t}\n};\n\nvar helpers_canvas = exports$1;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers_core.clear = exports$1.clear;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers_core.drawRoundedRectangle = function(ctx) {\n\tctx.beginPath();\n\texports$1.roundedRect.apply(exports$1, arguments);\n};\n\nvar defaults = {\n\t/**\n\t * @private\n\t */\n\t_set: function(scope, values) {\n\t\treturn helpers_core.merge(this[scope] || (this[scope] = {}), values);\n\t}\n};\n\ndefaults._set('global', {\n\tdefaultColor: 'rgba(0,0,0,0.1)',\n\tdefaultFontColor: '#666',\n\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\tdefaultFontSize: 12,\n\tdefaultFontStyle: 'normal',\n\tdefaultLineHeight: 1.2,\n\tshowLines: true\n});\n\nvar core_defaults = defaults;\n\nvar valueOrDefault = helpers_core.valueOrDefault;\n\n/**\n * Converts the given font object into a CSS font string.\n * @param {object} font - A font object.\n * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */\nfunction toFontString(font) {\n\tif (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n\t\treturn null;\n\t}\n\n\treturn (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nvar helpers_options = {\n\t/**\n\t * Converts the given line height `value` in pixels for a specific font `size`.\n\t * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n\t * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n\t * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\t * @since 2.7.0\n\t */\n\ttoLineHeight: function(value, size) {\n\t\tvar matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\t\tif (!matches || matches[1] === 'normal') {\n\t\t\treturn size * 1.2;\n\t\t}\n\n\t\tvalue = +matches[2];\n\n\t\tswitch (matches[3]) {\n\t\tcase 'px':\n\t\t\treturn value;\n\t\tcase '%':\n\t\t\tvalue /= 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\treturn size * value;\n\t},\n\n\t/**\n\t * Converts the given value into a padding object with pre-computed width/height.\n\t * @param {number|object} value - If a number, set the value to all TRBL component,\n\t *  else, if and object, use defined properties and sets undefined ones to 0.\n\t * @returns {object} The padding values (top, right, bottom, left, width, height)\n\t * @since 2.7.0\n\t */\n\ttoPadding: function(value) {\n\t\tvar t, r, b, l;\n\n\t\tif (helpers_core.isObject(value)) {\n\t\t\tt = +value.top || 0;\n\t\t\tr = +value.right || 0;\n\t\t\tb = +value.bottom || 0;\n\t\t\tl = +value.left || 0;\n\t\t} else {\n\t\t\tt = r = b = l = +value || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: t,\n\t\t\tright: r,\n\t\t\tbottom: b,\n\t\t\tleft: l,\n\t\t\theight: t + b,\n\t\t\twidth: l + r\n\t\t};\n\t},\n\n\t/**\n\t * Parses font options and returns the font object.\n\t * @param {object} options - A object that contains font options to be parsed.\n\t * @return {object} The font object.\n\t * @todo Support font.* options and renamed to toFont().\n\t * @private\n\t */\n\t_parseFont: function(options) {\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\t\tvar font = {\n\t\t\tfamily: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n\t\t\tlineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n\t\t\tsize: size,\n\t\t\tstyle: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n\t\t\tweight: null,\n\t\t\tstring: ''\n\t\t};\n\n\t\tfont.string = toFontString(font);\n\t\treturn font;\n\t},\n\n\t/**\n\t * Evaluates the given `inputs` sequentially and returns the first defined value.\n\t * @param {Array} inputs - An array of values, falling back to the last value.\n\t * @param {object} [context] - If defined and the current value is a function, the value\n\t * is called with `context` as first argument and the result becomes the new input.\n\t * @param {number} [index] - If defined and the current value is an array, the value\n\t * at `index` become the new input.\n\t * @since 2.7.0\n\t */\n\tresolve: function(inputs, context, index) {\n\t\tvar i, ilen, value;\n\n\t\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\n\t\t\tvalue = inputs[i];\n\t\t\tif (value === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (context !== undefined && typeof value === 'function') {\n\t\t\t\tvalue = value(context);\n\t\t\t}\n\t\t\tif (index !== undefined && helpers_core.isArray(value)) {\n\t\t\t\tvalue = value[index];\n\t\t\t}\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar helpers$1 = helpers_core;\nvar easing = helpers_easing;\nvar canvas = helpers_canvas;\nvar options = helpers_options;\nhelpers$1.easing = easing;\nhelpers$1.canvas = canvas;\nhelpers$1.options = options;\n\nfunction interpolate(start, view, model, ease) {\n\tvar keys = Object.keys(model);\n\tvar i, ilen, key, actual, origin, target, type, c0, c1;\n\n\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\tkey = keys[i];\n\n\t\ttarget = model[key];\n\n\t\t// if a value is added to the model after pivot() has been called, the view\n\t\t// doesn't contain it, so let's initialize the view to the target value.\n\t\tif (!view.hasOwnProperty(key)) {\n\t\t\tview[key] = target;\n\t\t}\n\n\t\tactual = view[key];\n\n\t\tif (actual === target || key[0] === '_') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!start.hasOwnProperty(key)) {\n\t\t\tstart[key] = actual;\n\t\t}\n\n\t\torigin = start[key];\n\n\t\ttype = typeof target;\n\n\t\tif (type === typeof origin) {\n\t\t\tif (type === 'string') {\n\t\t\t\tc0 = chartjsColor(origin);\n\t\t\t\tif (c0.valid) {\n\t\t\t\t\tc1 = chartjsColor(target);\n\t\t\t\t\tif (c1.valid) {\n\t\t\t\t\t\tview[key] = c1.mix(c0, ease).rgbString();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n\t\t\t\tview[key] = origin + (target - origin) * ease;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tview[key] = target;\n\t}\n}\n\nvar Element = function(configuration) {\n\thelpers$1.extend(this, configuration);\n\tthis.initialize.apply(this, arguments);\n};\n\nhelpers$1.extend(Element.prototype, {\n\n\tinitialize: function() {\n\t\tthis.hidden = false;\n\t},\n\n\tpivot: function() {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\tme._view = helpers$1.clone(me._model);\n\t\t}\n\t\tme._start = {};\n\t\treturn me;\n\t},\n\n\ttransition: function(ease) {\n\t\tvar me = this;\n\t\tvar model = me._model;\n\t\tvar start = me._start;\n\t\tvar view = me._view;\n\n\t\t// No animation -> No Transition\n\t\tif (!model || ease === 1) {\n\t\t\tme._view = model;\n\t\t\tme._start = null;\n\t\t\treturn me;\n\t\t}\n\n\t\tif (!view) {\n\t\t\tview = me._view = {};\n\t\t}\n\n\t\tif (!start) {\n\t\t\tstart = me._start = {};\n\t\t}\n\n\t\tinterpolate(start, view, model, ease);\n\n\t\treturn me;\n\t},\n\n\ttooltipPosition: function() {\n\t\treturn {\n\t\t\tx: this._model.x,\n\t\t\ty: this._model.y\n\t\t};\n\t},\n\n\thasValue: function() {\n\t\treturn helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n\t}\n});\n\nElement.extend = helpers$1.inherits;\n\nvar core_element = Element;\n\nvar exports$2 = core_element.extend({\n\tchart: null, // the animation associated chart instance\n\tcurrentStep: 0, // the current animation step\n\tnumSteps: 60, // default number of steps\n\teasing: '', // the easing to use for this animation\n\trender: null, // render function used by the animation service\n\n\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n});\n\nvar core_animation = exports$2;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.Animation instead\n * @prop Chart.Animation#animationObject\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports$2.prototype, 'animationObject', {\n\tget: function() {\n\t\treturn this;\n\t}\n});\n\n/**\n * Provided for backward compatibility, use Chart.Animation#chart instead\n * @prop Chart.Animation#chartInstance\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports$2.prototype, 'chartInstance', {\n\tget: function() {\n\t\treturn this.chart;\n\t},\n\tset: function(value) {\n\t\tthis.chart = value;\n\t}\n});\n\ncore_defaults._set('global', {\n\tanimation: {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers$1.noop,\n\t\tonComplete: helpers$1.noop\n\t}\n});\n\nvar core_animations = {\n\tanimations: [],\n\trequest: null,\n\n\t/**\n\t * @param {Chart} chart - The chart to animate.\n\t * @param {Chart.Animation} animation - The animation that we will animate.\n\t * @param {number} duration - The animation duration in ms.\n\t * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n\t */\n\taddAnimation: function(chart, animation, duration, lazy) {\n\t\tvar animations = this.animations;\n\t\tvar i, ilen;\n\n\t\tanimation.chart = chart;\n\t\tanimation.startTime = Date.now();\n\t\tanimation.duration = duration;\n\n\t\tif (!lazy) {\n\t\t\tchart.animating = true;\n\t\t}\n\n\t\tfor (i = 0, ilen = animations.length; i < ilen; ++i) {\n\t\t\tif (animations[i].chart === chart) {\n\t\t\t\tanimations[i] = animation;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tanimations.push(animation);\n\n\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\tif (animations.length === 1) {\n\t\t\tthis.requestAnimationFrame();\n\t\t}\n\t},\n\n\tcancelAnimation: function(chart) {\n\t\tvar index = helpers$1.findIndex(this.animations, function(animation) {\n\t\t\treturn animation.chart === chart;\n\t\t});\n\n\t\tif (index !== -1) {\n\t\t\tthis.animations.splice(index, 1);\n\t\t\tchart.animating = false;\n\t\t}\n\t},\n\n\trequestAnimationFrame: function() {\n\t\tvar me = this;\n\t\tif (me.request === null) {\n\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\tme.request = helpers$1.requestAnimFrame.call(window, function() {\n\t\t\t\tme.request = null;\n\t\t\t\tme.startDigest();\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tstartDigest: function() {\n\t\tvar me = this;\n\n\t\tme.advance();\n\n\t\t// Do we have more stuff to animate?\n\t\tif (me.animations.length > 0) {\n\t\t\tme.requestAnimationFrame();\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tadvance: function() {\n\t\tvar animations = this.animations;\n\t\tvar animation, chart, numSteps, nextStep;\n\t\tvar i = 0;\n\n\t\t// 1 animation per chart, so we are looping charts here\n\t\twhile (i < animations.length) {\n\t\t\tanimation = animations[i];\n\t\t\tchart = animation.chart;\n\t\t\tnumSteps = animation.numSteps;\n\n\t\t\t// Make sure that currentStep starts at 1\n\t\t\t// https://github.com/chartjs/Chart.js/issues/6104\n\t\t\tnextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n\t\t\tanimation.currentStep = Math.min(nextStep, numSteps);\n\n\t\t\thelpers$1.callback(animation.render, [chart, animation], chart);\n\t\t\thelpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n\t\t\tif (animation.currentStep >= numSteps) {\n\t\t\t\thelpers$1.callback(animation.onAnimationComplete, [animation], chart);\n\t\t\t\tchart.animating = false;\n\t\t\t\tanimations.splice(i, 1);\n\t\t\t} else {\n\t\t\t\t++i;\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar resolve = helpers$1.options.resolve;\n\nvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n/**\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n */\nfunction listenArrayEvents(array, listener) {\n\tif (array._chartjs) {\n\t\tarray._chartjs.listeners.push(listener);\n\t\treturn;\n\t}\n\n\tObject.defineProperty(array, '_chartjs', {\n\t\tconfigurable: true,\n\t\tenumerable: false,\n\t\tvalue: {\n\t\t\tlisteners: [listener]\n\t\t}\n\t});\n\n\tarrayEvents.forEach(function(key) {\n\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\tvar base = array[key];\n\n\t\tObject.defineProperty(array, key, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: function() {\n\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\thelpers$1.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn res;\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Removes the given array event listener and cleanup extra attached properties (such as\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n */\nfunction unlistenArrayEvents(array, listener) {\n\tvar stub = array._chartjs;\n\tif (!stub) {\n\t\treturn;\n\t}\n\n\tvar listeners = stub.listeners;\n\tvar index = listeners.indexOf(listener);\n\tif (index !== -1) {\n\t\tlisteners.splice(index, 1);\n\t}\n\n\tif (listeners.length > 0) {\n\t\treturn;\n\t}\n\n\tarrayEvents.forEach(function(key) {\n\t\tdelete array[key];\n\t});\n\n\tdelete array._chartjs;\n}\n\n// Base class for all dataset controllers (line, bar, etc)\nvar DatasetController = function(chart, datasetIndex) {\n\tthis.initialize(chart, datasetIndex);\n};\n\nhelpers$1.extend(DatasetController.prototype, {\n\n\t/**\n\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t * @type {Chart.core.element}\n\t */\n\tdatasetElementType: null,\n\n\t/**\n\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t * @type {Chart.core.element}\n\t */\n\tdataElementType: null,\n\n\tinitialize: function(chart, datasetIndex) {\n\t\tvar me = this;\n\t\tme.chart = chart;\n\t\tme.index = datasetIndex;\n\t\tme.linkScales();\n\t\tme.addElements();\n\t},\n\n\tupdateIndex: function(datasetIndex) {\n\t\tthis.index = datasetIndex;\n\t},\n\n\tlinkScales: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar dataset = me.getDataset();\n\n\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t}\n\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t}\n\t},\n\n\tgetDataset: function() {\n\t\treturn this.chart.data.datasets[this.index];\n\t},\n\n\tgetMeta: function() {\n\t\treturn this.chart.getDatasetMeta(this.index);\n\t},\n\n\tgetScaleForId: function(scaleID) {\n\t\treturn this.chart.scales[scaleID];\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getValueScaleId: function() {\n\t\treturn this.getMeta().yAxisID;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getIndexScaleId: function() {\n\t\treturn this.getMeta().xAxisID;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getValueScale: function() {\n\t\treturn this.getScaleForId(this._getValueScaleId());\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getIndexScale: function() {\n\t\treturn this.getScaleForId(this._getIndexScaleId());\n\t},\n\n\treset: function() {\n\t\tthis.update(true);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tdestroy: function() {\n\t\tif (this._data) {\n\t\t\tunlistenArrayEvents(this._data, this);\n\t\t}\n\t},\n\n\tcreateMetaDataset: function() {\n\t\tvar me = this;\n\t\tvar type = me.datasetElementType;\n\t\treturn type && new type({\n\t\t\t_chart: me.chart,\n\t\t\t_datasetIndex: me.index\n\t\t});\n\t},\n\n\tcreateMetaData: function(index) {\n\t\tvar me = this;\n\t\tvar type = me.dataElementType;\n\t\treturn type && new type({\n\t\t\t_chart: me.chart,\n\t\t\t_datasetIndex: me.index,\n\t\t\t_index: index\n\t\t});\n\t},\n\n\taddElements: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar data = me.getDataset().data || [];\n\t\tvar metaData = meta.data;\n\t\tvar i, ilen;\n\n\t\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\n\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t}\n\n\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t},\n\n\taddElementAndReset: function(index) {\n\t\tvar element = this.createMetaData(index);\n\t\tthis.getMeta().data.splice(index, 0, element);\n\t\tthis.updateElement(element, index, true);\n\t},\n\n\tbuildOrUpdateElements: function() {\n\t\tvar me = this;\n\t\tvar dataset = me.getDataset();\n\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t// the internal meta data accordingly.\n\t\tif (me._data !== data) {\n\t\t\tif (me._data) {\n\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t}\n\n\t\t\tif (data && Object.isExtensible(data)) {\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t}\n\t\t\tme._data = data;\n\t\t}\n\n\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\tme.resyncElements();\n\t},\n\n\tupdate: helpers$1.noop,\n\n\ttransition: function(easingValue) {\n\t\tvar meta = this.getMeta();\n\t\tvar elements = meta.data || [];\n\t\tvar ilen = elements.length;\n\t\tvar i = 0;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\telements[i].transition(easingValue);\n\t\t}\n\n\t\tif (meta.dataset) {\n\t\t\tmeta.dataset.transition(easingValue);\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar meta = this.getMeta();\n\t\tvar elements = meta.data || [];\n\t\tvar ilen = elements.length;\n\t\tvar i = 0;\n\n\t\tif (meta.dataset) {\n\t\t\tmeta.dataset.draw();\n\t\t}\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\telements[i].draw();\n\t\t}\n\t},\n\n\tremoveHoverStyle: function(element) {\n\t\thelpers$1.merge(element._model, element.$previousStyle || {});\n\t\tdelete element.$previousStyle;\n\t},\n\n\tsetHoverStyle: function(element) {\n\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\tvar index = element._index;\n\t\tvar custom = element.custom || {};\n\t\tvar model = element._model;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\telement.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth\n\t\t};\n\n\t\tmodel.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n\t\tmodel.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n\t\tmodel.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tresyncElements: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar data = me.getDataset().data;\n\t\tvar numMeta = meta.data.length;\n\t\tvar numData = data.length;\n\n\t\tif (numData < numMeta) {\n\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t} else if (numData > numMeta) {\n\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tinsertElements: function(start, count) {\n\t\tfor (var i = 0; i < count; ++i) {\n\t\t\tthis.addElementAndReset(start + i);\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataPush: function() {\n\t\tvar count = arguments.length;\n\t\tthis.insertElements(this.getDataset().data.length - count, count);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataPop: function() {\n\t\tthis.getMeta().data.pop();\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataShift: function() {\n\t\tthis.getMeta().data.shift();\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataSplice: function(start, count) {\n\t\tthis.getMeta().data.splice(start, count);\n\t\tthis.insertElements(start, arguments.length - 2);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tonDataUnshift: function() {\n\t\tthis.insertElements(0, arguments.length);\n\t}\n});\n\nDatasetController.extend = helpers$1.inherits;\n\nvar core_datasetController = DatasetController;\n\ncore_defaults._set('global', {\n\telements: {\n\t\tarc: {\n\t\t\tbackgroundColor: core_defaults.global.defaultColor,\n\t\t\tborderColor: '#fff',\n\t\t\tborderWidth: 2,\n\t\t\tborderAlign: 'center'\n\t\t}\n\t}\n});\n\nvar element_arc = core_element.extend({\n\tinLabelRange: function(mouseX) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t}\n\t\treturn false;\n\t},\n\n\tinRange: function(chartX, chartY) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\tvar pointRelativePosition = helpers$1.getAngleFromPoint(vm, {x: chartX, y: chartY});\n\t\t\tvar\tangle = pointRelativePosition.angle;\n\t\t\tvar distance = pointRelativePosition.distance;\n\n\t\t\t// Sanitise angle range\n\t\t\tvar startAngle = vm.startAngle;\n\t\t\tvar endAngle = vm.endAngle;\n\t\t\twhile (endAngle < startAngle) {\n\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle > endAngle) {\n\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle < startAngle) {\n\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t}\n\n\t\t\t// Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle);\n\t\t\tvar withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\treturn {\n\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\n\t\tvar rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\n\t\treturn {\n\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar sA = vm.startAngle;\n\t\tvar eA = vm.endAngle;\n\t\tvar pixelMargin = (vm.borderAlign === 'inner') ? 0.33 : 0;\n\t\tvar angleMargin;\n\n\t\tctx.save();\n\n\t\tctx.beginPath();\n\t\tctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\t\tctx.closePath();\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.fill();\n\n\t\tif (vm.borderWidth) {\n\t\t\tif (vm.borderAlign === 'inner') {\n\t\t\t\t// Draw an inner border by cliping the arc and drawing a double-width border\n\t\t\t\t// Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n\t\t\t\tctx.beginPath();\n\t\t\t\tangleMargin = pixelMargin / vm.outerRadius;\n\t\t\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\t\t\t\tif (vm.innerRadius > pixelMargin) {\n\t\t\t\t\tangleMargin = pixelMargin / vm.innerRadius;\n\t\t\t\t\tctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n\t\t\t\t} else {\n\t\t\t\t\tctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n\t\t\t\t}\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.clip();\n\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\t\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\t\t\t\tctx.closePath();\n\n\t\t\t\tctx.lineWidth = vm.borderWidth * 2;\n\t\t\t\tctx.lineJoin = 'round';\n\t\t\t} else {\n\t\t\t\tctx.lineWidth = vm.borderWidth;\n\t\t\t\tctx.lineJoin = 'bevel';\n\t\t\t}\n\n\t\t\tctx.strokeStyle = vm.borderColor;\n\t\t\tctx.stroke();\n\t\t}\n\n\t\tctx.restore();\n\t}\n});\n\nvar valueOrDefault$1 = helpers$1.valueOrDefault;\n\nvar defaultColor = core_defaults.global.defaultColor;\n\ncore_defaults._set('global', {\n\telements: {\n\t\tline: {\n\t\t\ttension: 0.4,\n\t\t\tbackgroundColor: defaultColor,\n\t\t\tborderWidth: 3,\n\t\t\tborderColor: defaultColor,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tcapBezierPoints: true,\n\t\t\tfill: true, // do we fill in the area between the line and its base axis\n\t\t}\n\t}\n});\n\nvar element_line = core_element.extend({\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar vm = me._view;\n\t\tvar ctx = me._chart.ctx;\n\t\tvar spanGaps = vm.spanGaps;\n\t\tvar points = me._children.slice(); // clone array\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\tvar lastDrawnIndex = -1;\n\t\tvar index, current, previous, currentVM;\n\n\t\t// If we are looping, adding the first point again\n\t\tif (me._loop && points.length) {\n\t\t\tpoints.push(points[0]);\n\t\t}\n\n\t\tctx.save();\n\n\t\t// Stroke Line Options\n\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t// IE 9 and 10 do not support line dash\n\t\tif (ctx.setLineDash) {\n\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t}\n\n\t\tctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\tctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t// Stroke Line\n\t\tctx.beginPath();\n\t\tlastDrawnIndex = -1;\n\n\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\tcurrent = points[index];\n\t\t\tprevious = helpers$1.previousItem(points, index);\n\t\t\tcurrentVM = current._view;\n\n\t\t\t// First point moves to it's starting position no matter what\n\t\t\tif (index === 0) {\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\thelpers$1.canvas.lineTo(ctx, previous._view, current._view);\n\t\t\t\t\t}\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n});\n\nvar valueOrDefault$2 = helpers$1.valueOrDefault;\n\nvar defaultColor$1 = core_defaults.global.defaultColor;\n\ncore_defaults._set('global', {\n\telements: {\n\t\tpoint: {\n\t\t\tradius: 3,\n\t\t\tpointStyle: 'circle',\n\t\t\tbackgroundColor: defaultColor$1,\n\t\t\tborderColor: defaultColor$1,\n\t\t\tborderWidth: 1,\n\t\t\t// Hover\n\t\t\thitRadius: 1,\n\t\t\thoverRadius: 4,\n\t\t\thoverBorderWidth: 1\n\t\t}\n\t}\n});\n\nfunction xRange(mouseX) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\n}\n\nfunction yRange(mouseY) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\n}\n\nvar element_point = core_element.extend({\n\tinRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t},\n\n\tinLabelRange: xRange,\n\tinXRange: xRange,\n\tinYRange: yRange,\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y,\n\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t};\n\t},\n\n\tdraw: function(chartArea) {\n\t\tvar vm = this._view;\n\t\tvar ctx = this._chart.ctx;\n\t\tvar pointStyle = vm.pointStyle;\n\t\tvar rotation = vm.rotation;\n\t\tvar radius = vm.radius;\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n\t\tif (vm.skip) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Clipping for Points.\n\t\tif (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n\t\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\t\tctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n\t\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\t\t\thelpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n\t\t}\n\t}\n});\n\nvar defaultColor$2 = core_defaults.global.defaultColor;\n\ncore_defaults._set('global', {\n\telements: {\n\t\trectangle: {\n\t\t\tbackgroundColor: defaultColor$2,\n\t\t\tborderColor: defaultColor$2,\n\t\t\tborderSkipped: 'bottom',\n\t\t\tborderWidth: 0\n\t\t}\n\t}\n});\n\nfunction isVertical(vm) {\n\treturn vm && vm.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\nfunction getBarBounds(vm) {\n\tvar x1, x2, y1, y2, half;\n\n\tif (isVertical(vm)) {\n\t\thalf = vm.width / 2;\n\t\tx1 = vm.x - half;\n\t\tx2 = vm.x + half;\n\t\ty1 = Math.min(vm.y, vm.base);\n\t\ty2 = Math.max(vm.y, vm.base);\n\t} else {\n\t\thalf = vm.height / 2;\n\t\tx1 = Math.min(vm.x, vm.base);\n\t\tx2 = Math.max(vm.x, vm.base);\n\t\ty1 = vm.y - half;\n\t\ty2 = vm.y + half;\n\t}\n\n\treturn {\n\t\tleft: x1,\n\t\ttop: y1,\n\t\tright: x2,\n\t\tbottom: y2\n\t};\n}\n\nfunction swap(orig, v1, v2) {\n\treturn orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction parseBorderSkipped(vm) {\n\tvar edge = vm.borderSkipped;\n\tvar res = {};\n\n\tif (!edge) {\n\t\treturn res;\n\t}\n\n\tif (vm.horizontal) {\n\t\tif (vm.base > vm.x) {\n\t\t\tedge = swap(edge, 'left', 'right');\n\t\t}\n\t} else if (vm.base < vm.y) {\n\t\tedge = swap(edge, 'bottom', 'top');\n\t}\n\n\tres[edge] = true;\n\treturn res;\n}\n\nfunction parseBorderWidth(vm, maxW, maxH) {\n\tvar value = vm.borderWidth;\n\tvar skip = parseBorderSkipped(vm);\n\tvar t, r, b, l;\n\n\tif (helpers$1.isObject(value)) {\n\t\tt = +value.top || 0;\n\t\tr = +value.right || 0;\n\t\tb = +value.bottom || 0;\n\t\tl = +value.left || 0;\n\t} else {\n\t\tt = r = b = l = +value || 0;\n\t}\n\n\treturn {\n\t\tt: skip.top || (t < 0) ? 0 : t > maxH ? maxH : t,\n\t\tr: skip.right || (r < 0) ? 0 : r > maxW ? maxW : r,\n\t\tb: skip.bottom || (b < 0) ? 0 : b > maxH ? maxH : b,\n\t\tl: skip.left || (l < 0) ? 0 : l > maxW ? maxW : l\n\t};\n}\n\nfunction boundingRects(vm) {\n\tvar bounds = getBarBounds(vm);\n\tvar width = bounds.right - bounds.left;\n\tvar height = bounds.bottom - bounds.top;\n\tvar border = parseBorderWidth(vm, width / 2, height / 2);\n\n\treturn {\n\t\touter: {\n\t\t\tx: bounds.left,\n\t\t\ty: bounds.top,\n\t\t\tw: width,\n\t\t\th: height\n\t\t},\n\t\tinner: {\n\t\t\tx: bounds.left + border.l,\n\t\t\ty: bounds.top + border.t,\n\t\t\tw: width - border.l - border.r,\n\t\t\th: height - border.t - border.b\n\t\t}\n\t};\n}\n\nfunction inRange(vm, x, y) {\n\tvar skipX = x === null;\n\tvar skipY = y === null;\n\tvar bounds = !vm || (skipX && skipY) ? false : getBarBounds(vm);\n\n\treturn bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\n\nvar element_rectangle = core_element.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar rects = boundingRects(vm);\n\t\tvar outer = rects.outer;\n\t\tvar inner = rects.inner;\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n\t\tif (outer.w === inner.w && outer.h === inner.h) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(outer.x, outer.y, outer.w, outer.h);\n\t\tctx.clip();\n\t\tctx.fillStyle = vm.borderColor;\n\t\tctx.rect(inner.x, inner.y, inner.w, inner.h);\n\t\tctx.fill('evenodd');\n\t\tctx.restore();\n\t},\n\n\theight: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.base - vm.y;\n\t},\n\n\tinRange: function(mouseX, mouseY) {\n\t\treturn inRange(this._view, mouseX, mouseY);\n\t},\n\n\tinLabelRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn isVertical(vm)\n\t\t\t? inRange(vm, mouseX, null)\n\t\t\t: inRange(vm, null, mouseY);\n\t},\n\n\tinXRange: function(mouseX) {\n\t\treturn inRange(this._view, mouseX, null);\n\t},\n\n\tinYRange: function(mouseY) {\n\t\treturn inRange(this._view, null, mouseY);\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar x, y;\n\t\tif (isVertical(vm)) {\n\t\t\tx = vm.x;\n\t\t\ty = (vm.y + vm.base) / 2;\n\t\t} else {\n\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\ty = vm.y;\n\t\t}\n\n\t\treturn {x: x, y: y};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\n\t\treturn isVertical(vm)\n\t\t\t? vm.width * Math.abs(vm.y - vm.base)\n\t\t\t: vm.height * Math.abs(vm.x - vm.base);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t}\n});\n\nvar elements = {};\nvar Arc = element_arc;\nvar Line = element_line;\nvar Point = element_point;\nvar Rectangle = element_rectangle;\nelements.Arc = Arc;\nelements.Line = Line;\nelements.Point = Point;\nelements.Rectangle = Rectangle;\n\nvar resolve$1 = helpers$1.options.resolve;\n\ncore_defaults._set('bar', {\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\t\t\toffset: true,\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'linear'\n\t\t}]\n\t}\n});\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tvar min = scale.isHorizontal() ? scale.width : scale.height;\n\tvar ticks = scale.getTicks();\n\tvar prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n\t}\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, curr - prev) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options) {\n\tvar thickness = options.barThickness;\n\tvar count = ruler.stackCount;\n\tvar curr = ruler.pixels[index];\n\tvar size, ratio;\n\n\tif (helpers$1.isNullOrUndef(thickness)) {\n\t\tsize = ruler.min * options.categoryPercentage;\n\t\tratio = options.barPercentage;\n\t} else {\n\t\t// When bar thickness is enforced, category and bar percentages are ignored.\n\t\t// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n\t\t// and deprecate barPercentage since this value is ignored when thickness is absolute.\n\t\tsize = thickness * count;\n\t\tratio = 1;\n\t}\n\n\treturn {\n\t\tchunk: size / count,\n\t\tratio: ratio,\n\t\tstart: curr - (size / 2)\n\t};\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options) {\n\tvar pixels = ruler.pixels;\n\tvar curr = pixels[index];\n\tvar prev = index > 0 ? pixels[index - 1] : null;\n\tvar next = index < pixels.length - 1 ? pixels[index + 1] : null;\n\tvar percent = options.categoryPercentage;\n\tvar start, size;\n\n\tif (prev === null) {\n\t\t// first data: its size is double based on the next point or,\n\t\t// if it's also the last data, we use the scale size.\n\t\tprev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n\t}\n\n\tif (next === null) {\n\t\t// last data: its size is also double based on the previous point.\n\t\tnext = curr + curr - prev;\n\t}\n\n\tstart = curr - (curr - Math.min(prev, next)) / 2 * percent;\n\tsize = Math.abs(next - prev) / 2 * percent;\n\n\treturn {\n\t\tchunk: size / ruler.stackCount,\n\t\tratio: options.barPercentage,\n\t\tstart: start\n\t};\n}\n\nvar controller_bar = core_datasetController.extend({\n\n\tdataElementType: elements.Rectangle,\n\n\tinitialize: function() {\n\t\tvar me = this;\n\t\tvar meta;\n\n\t\tcore_datasetController.prototype.initialize.apply(me, arguments);\n\n\t\tmeta = me.getMeta();\n\t\tmeta.stack = me.getDataset().stack;\n\t\tmeta.bar = true;\n\t},\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar rects = me.getMeta().data;\n\t\tvar i, ilen;\n\n\t\tme._ruler = me.getRuler();\n\n\t\tfor (i = 0, ilen = rects.length; i < ilen; ++i) {\n\t\t\tme.updateElement(rects[i], i, reset);\n\t\t}\n\t},\n\n\tupdateElement: function(rectangle, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar dataset = me.getDataset();\n\t\tvar options = me._resolveElementOptions(rectangle, index);\n\n\t\trectangle._xScale = me.getScaleForId(meta.xAxisID);\n\t\trectangle._yScale = me.getScaleForId(meta.yAxisID);\n\t\trectangle._datasetIndex = me.index;\n\t\trectangle._index = index;\n\t\trectangle._model = {\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderSkipped: options.borderSkipped,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\tdatasetLabel: dataset.label,\n\t\t\tlabel: me.chart.data.labels[index]\n\t\t};\n\n\t\tme._updateElementGeometry(rectangle, index, reset);\n\n\t\trectangle.pivot();\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_updateElementGeometry: function(rectangle, index, reset) {\n\t\tvar me = this;\n\t\tvar model = rectangle._model;\n\t\tvar vscale = me._getValueScale();\n\t\tvar base = vscale.getBasePixel();\n\t\tvar horizontal = vscale.isHorizontal();\n\t\tvar ruler = me._ruler || me.getRuler();\n\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\n\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\n\t\tmodel.horizontal = horizontal;\n\t\tmodel.base = reset ? base : vpixels.base;\n\t\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n\t\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n\t\tmodel.height = horizontal ? ipixels.size : undefined;\n\t\tmodel.width = horizontal ? undefined : ipixels.size;\n\t},\n\n\t/**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n\t_getStacks: function(last) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar scale = me._getIndexScale();\n\t\tvar stacked = scale.options.stacked;\n\t\tvar ilen = last === undefined ? chart.data.datasets.length : last + 1;\n\t\tvar stacks = [];\n\t\tvar i, meta;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tif (meta.bar && chart.isDatasetVisible(i) &&\n\t\t\t\t(stacked === false ||\n\t\t\t\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\n\t\t\t\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\n\t\t\t\tstacks.push(meta.stack);\n\t\t\t}\n\t\t}\n\n\t\treturn stacks;\n\t},\n\n\t/**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n\tgetStackCount: function() {\n\t\treturn this._getStacks().length;\n\t},\n\n\t/**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n\t * @returns {number} The stack index\n\t * @private\n\t */\n\tgetStackIndex: function(datasetIndex, name) {\n\t\tvar stacks = this._getStacks(datasetIndex);\n\t\tvar index = (name !== undefined)\n\t\t\t? stacks.indexOf(name)\n\t\t\t: -1; // indexOf returns -1 if element is not present\n\n\t\treturn (index === -1)\n\t\t\t? stacks.length - 1\n\t\t\t: index;\n\t},\n\n\t/**\n\t * @private\n\t */\n\tgetRuler: function() {\n\t\tvar me = this;\n\t\tvar scale = me._getIndexScale();\n\t\tvar stackCount = me.getStackCount();\n\t\tvar datasetIndex = me.index;\n\t\tvar isHorizontal = scale.isHorizontal();\n\t\tvar start = isHorizontal ? scale.left : scale.top;\n\t\tvar end = start + (isHorizontal ? scale.width : scale.height);\n\t\tvar pixels = [];\n\t\tvar i, ilen, min;\n\n\t\tfor (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n\t\t\tpixels.push(scale.getPixelForValue(null, i, datasetIndex));\n\t\t}\n\n\t\tmin = helpers$1.isNullOrUndef(scale.options.barThickness)\n\t\t\t? computeMinSampleSize(scale, pixels)\n\t\t\t: -1;\n\n\t\treturn {\n\t\t\tmin: min,\n\t\t\tpixels: pixels,\n\t\t\tstart: start,\n\t\t\tend: end,\n\t\t\tstackCount: stackCount,\n\t\t\tscale: scale\n\t\t};\n\t},\n\n\t/**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n\tcalculateBarValuePixels: function(datasetIndex, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar scale = me._getValueScale();\n\t\tvar isHorizontal = scale.isHorizontal();\n\t\tvar datasets = chart.data.datasets;\n\t\tvar value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n\t\tvar minBarLength = scale.options.minBarLength;\n\t\tvar stacked = scale.options.stacked;\n\t\tvar stack = meta.stack;\n\t\tvar start = 0;\n\t\tvar i, imeta, ivalue, base, head, size;\n\n\t\tif (stacked || (stacked === undefined && stack !== undefined)) {\n\t\t\tfor (i = 0; i < datasetIndex; ++i) {\n\t\t\t\timeta = chart.getDatasetMeta(i);\n\n\t\t\t\tif (imeta.bar &&\n\t\t\t\t\timeta.stack === stack &&\n\t\t\t\t\timeta.controller._getValueScaleId() === scale.id &&\n\t\t\t\t\tchart.isDatasetVisible(i)) {\n\n\t\t\t\t\tivalue = +scale.getRightValue(datasets[i].data[index]);\n\t\t\t\t\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\n\t\t\t\t\t\tstart += ivalue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tbase = scale.getPixelForValue(start);\n\t\thead = scale.getPixelForValue(start + value);\n\t\tsize = head - base;\n\n\t\tif (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n\t\t\tsize = minBarLength;\n\t\t\tif (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n\t\t\t\thead = base - minBarLength;\n\t\t\t} else {\n\t\t\t\thead = base + minBarLength;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tsize: size,\n\t\t\tbase: base,\n\t\t\thead: head,\n\t\t\tcenter: head + size / 2\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\n\t\tvar me = this;\n\t\tvar options = ruler.scale.options;\n\t\tvar range = options.barThickness === 'flex'\n\t\t\t? computeFlexCategoryTraits(index, ruler, options)\n\t\t\t: computeFitCategoryTraits(index, ruler, options);\n\n\t\tvar stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n\t\tvar center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n\t\tvar size = Math.min(\n\t\t\thelpers$1.valueOrDefault(options.maxBarThickness, Infinity),\n\t\t\trange.chunk * range.ratio);\n\n\t\treturn {\n\t\t\tbase: center - size / 2,\n\t\t\thead: center + size / 2,\n\t\t\tcenter: center,\n\t\t\tsize: size\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar scale = me._getValueScale();\n\t\tvar rects = me.getMeta().data;\n\t\tvar dataset = me.getDataset();\n\t\tvar ilen = rects.length;\n\t\tvar i = 0;\n\n\t\thelpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tif (!isNaN(scale.getRightValue(dataset.data[i]))) {\n\t\t\t\trects[i].draw();\n\t\t\t}\n\t\t}\n\n\t\thelpers$1.canvas.unclipArea(chart.ctx);\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(rectangle, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar datasets = chart.data.datasets;\n\t\tvar dataset = datasets[me.index];\n\t\tvar custom = rectangle.custom || {};\n\t\tvar options = chart.options.elements.rectangle;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderSkipped',\n\t\t\t'borderWidth'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$1([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t}\n});\n\nvar valueOrDefault$3 = helpers$1.valueOrDefault;\nvar resolve$2 = helpers$1.options.resolve;\n\ncore_defaults._set('bubble', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\tposition: 'bottom',\n\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\tvar dataPoint = data.datasets[item.datasetIndex].data[item.index];\n\t\t\t\treturn datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar controller_bubble = core_datasetController.extend({\n\t/**\n\t * @protected\n\t */\n\tdataElementType: elements.Point,\n\n\t/**\n\t * @protected\n\t */\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar points = meta.data;\n\n\t\t// Update Points\n\t\thelpers$1.each(points, function(point, index) {\n\t\t\tme.updateElement(point, index, reset);\n\t\t});\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tupdateElement: function(point, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar custom = point.custom || {};\n\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar options = me._resolveElementOptions(point, index);\n\t\tvar data = me.getDataset().data[index];\n\t\tvar dsIndex = me.index;\n\n\t\tvar x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n\t\tvar y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n\n\t\tpoint._xScale = xScale;\n\t\tpoint._yScale = yScale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = dsIndex;\n\t\tpoint._index = index;\n\t\tpoint._model = {\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\thitRadius: options.hitRadius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tradius: reset ? 0 : options.radius,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\tx: x,\n\t\t\ty: y,\n\t\t};\n\n\t\tpoint.pivot();\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(point) {\n\t\tvar model = point._model;\n\t\tvar options = point._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tpoint.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t\tradius: model.radius\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n\t\tmodel.radius = options.radius + options.hoverRadius;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(point, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar datasets = chart.data.datasets;\n\t\tvar dataset = datasets[me.index];\n\t\tvar custom = point.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar data = dataset.data[index];\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderWidth',\n\t\t\t'hoverBackgroundColor',\n\t\t\t'hoverBorderColor',\n\t\t\t'hoverBorderWidth',\n\t\t\t'hoverRadius',\n\t\t\t'hitRadius',\n\t\t\t'pointStyle',\n\t\t\t'rotation'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$2([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\t// Custom radius resolution\n\t\tvalues.radius = resolve$2([\n\t\t\tcustom.radius,\n\t\t\tdata ? data.r : undefined,\n\t\t\tdataset.radius,\n\t\t\toptions.radius\n\t\t], context, index);\n\n\t\treturn values;\n\t}\n});\n\nvar resolve$3 = helpers$1.options.resolve;\nvar valueOrDefault$4 = helpers$1.valueOrDefault;\n\ncore_defaults._set('doughnut', {\n\tanimation: {\n\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate: true,\n\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale: false\n\t},\n\thover: {\n\t\tmode: 'single'\n\t},\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n\t\t\t\t\t\tvar stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n\t\t\t\t\t\tvar bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t// toggle visibility of index if exists\n\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// The percentage of the chart that we cut out of the middle.\n\tcutoutPercentage: 50,\n\n\t// The rotation of the chart, where the first data arc begins.\n\trotation: Math.PI * -0.5,\n\n\t// The total circumference of the chart.\n\tcircumference: Math.PI * 2.0,\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\tif (helpers$1.isArray(dataLabel)) {\n\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t} else {\n\t\t\t\t\tdataLabel += value;\n\t\t\t\t}\n\n\t\t\t\treturn dataLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar controller_doughnut = core_datasetController.extend({\n\n\tdataElementType: elements.Arc,\n\n\tlinkScales: helpers$1.noop,\n\n\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\tgetRingIndex: function(datasetIndex) {\n\t\tvar ringIndex = 0;\n\n\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t++ringIndex;\n\t\t\t}\n\t\t}\n\n\t\treturn ringIndex;\n\t},\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar chartArea = chart.chartArea;\n\t\tvar opts = chart.options;\n\t\tvar availableWidth = chartArea.right - chartArea.left;\n\t\tvar availableHeight = chartArea.bottom - chartArea.top;\n\t\tvar minSize = Math.min(availableWidth, availableHeight);\n\t\tvar offset = {x: 0, y: 0};\n\t\tvar meta = me.getMeta();\n\t\tvar arcs = meta.data;\n\t\tvar cutoutPercentage = opts.cutoutPercentage;\n\t\tvar circumference = opts.circumference;\n\t\tvar chartWeight = me._getRingWeight(me.index);\n\t\tvar i, ilen;\n\n\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\tif (circumference < Math.PI * 2.0) {\n\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\tvar endAngle = startAngle + circumference;\n\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t}\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tarcs[i]._options = me._resolveElementOptions(arcs[i], i);\n\t\t}\n\n\t\tchart.borderWidth = me.getMaxBorderWidth();\n\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\tmeta.total = me.calculateTotal();\n\n\t\tme.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tme.updateElement(arcs[i], i, reset);\n\t\t}\n\t},\n\n\tupdateElement: function(arc, index, reset) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar chartArea = chart.chartArea;\n\t\tvar opts = chart.options;\n\t\tvar animationOpts = opts.animation;\n\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\n\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\n\t\tvar startAngle = opts.rotation; // non reset case handled later\n\t\tvar endAngle = opts.rotation; // non reset case handled later\n\t\tvar dataset = me.getDataset();\n\t\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n\t\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n\t\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n\t\tvar options = arc._options || {};\n\n\t\thelpers$1.extend(arc, {\n\t\t\t// Utility\n\t\t\t_datasetIndex: me.index,\n\t\t\t_index: index,\n\n\t\t\t// Desired view properties\n\t\t\t_model: {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\tborderAlign: options.borderAlign,\n\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\tstartAngle: startAngle,\n\t\t\t\tendAngle: endAngle,\n\t\t\t\tcircumference: circumference,\n\t\t\t\touterRadius: outerRadius,\n\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\tlabel: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t}\n\t\t});\n\n\t\tvar model = arc._model;\n\n\t\t// Set correct angles if not resetting\n\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\tif (index === 0) {\n\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t} else {\n\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t}\n\n\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t}\n\n\t\tarc.pivot();\n\t},\n\n\tcalculateTotal: function() {\n\t\tvar dataset = this.getDataset();\n\t\tvar meta = this.getMeta();\n\t\tvar total = 0;\n\t\tvar value;\n\n\t\thelpers$1.each(meta.data, function(element, index) {\n\t\t\tvalue = dataset.data[index];\n\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\ttotal += Math.abs(value);\n\t\t\t}\n\t\t});\n\n\t\t/* if (total === 0) {\n\t\t\ttotal = NaN;\n\t\t}*/\n\n\t\treturn total;\n\t},\n\n\tcalculateCircumference: function(value) {\n\t\tvar total = this.getMeta().total;\n\t\tif (total > 0 && !isNaN(value)) {\n\t\t\treturn (Math.PI * 2.0) * (Math.abs(value) / total);\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// gets the max border or hover width to properly scale pie charts\n\tgetMaxBorderWidth: function(arcs) {\n\t\tvar me = this;\n\t\tvar max = 0;\n\t\tvar chart = me.chart;\n\t\tvar i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n\t\tif (!arcs) {\n\t\t\t// Find the outmost visible dataset\n\t\t\tfor (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t\tarcs = meta.data;\n\t\t\t\t\tif (i !== me.index) {\n\t\t\t\t\t\tcontroller = meta.controller;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!arcs) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tarc = arcs[i];\n\t\t\toptions = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\t\t\tif (options.borderAlign !== 'inner') {\n\t\t\t\tborderWidth = options.borderWidth;\n\t\t\t\thoverWidth = options.hoverBorderWidth;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t}\n\t\treturn max;\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(arc) {\n\t\tvar model = arc._model;\n\t\tvar options = arc._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tarc.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(arc, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = me.getDataset();\n\t\tvar custom = arc.custom || {};\n\t\tvar options = chart.options.elements.arc;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderWidth',\n\t\t\t'borderAlign',\n\t\t\t'hoverBackgroundColor',\n\t\t\t'hoverBorderColor',\n\t\t\t'hoverBorderWidth',\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$3([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n\t_getRingWeightOffset: function(datasetIndex) {\n\t\tvar ringWeightOffset = 0;\n\n\t\tfor (var i = 0; i < datasetIndex; ++i) {\n\t\t\tif (this.chart.isDatasetVisible(i)) {\n\t\t\t\tringWeightOffset += this._getRingWeight(i);\n\t\t\t}\n\t\t}\n\n\t\treturn ringWeightOffset;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getRingWeight: function(dataSetIndex) {\n\t\treturn Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n\t},\n\n\t/**\n\t * Returns the sum of all visibile data set weights.  This value can be 0.\n\t * @private\n\t */\n\t_getVisibleDatasetWeightTotal: function() {\n\t\treturn this._getRingWeightOffset(this.chart.data.datasets.length);\n\t}\n});\n\ncore_defaults._set('horizontalBar', {\n\thover: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'bottom'\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'category',\n\t\t\tposition: 'left',\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\t\t\toffset: true,\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}]\n\t},\n\n\telements: {\n\t\trectangle: {\n\t\t\tborderSkipped: 'left'\n\t\t}\n\t},\n\n\ttooltips: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t}\n});\n\nvar controller_horizontalBar = controller_bar.extend({\n\t/**\n\t * @private\n\t */\n\t_getValueScaleId: function() {\n\t\treturn this.getMeta().xAxisID;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getIndexScaleId: function() {\n\t\treturn this.getMeta().yAxisID;\n\t}\n});\n\nvar valueOrDefault$5 = helpers$1.valueOrDefault;\nvar resolve$4 = helpers$1.options.resolve;\nvar isPointInArea = helpers$1.canvas._isPointInArea;\n\ncore_defaults._set('line', {\n\tshowLines: true,\n\tspanGaps: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tid: 'x-axis-0'\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t}\n});\n\nfunction lineEnabled(dataset, options) {\n\treturn valueOrDefault$5(dataset.showLine, options.showLines);\n}\n\nvar controller_line = core_datasetController.extend({\n\n\tdatasetElementType: elements.Line,\n\n\tdataElementType: elements.Point,\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar line = meta.dataset;\n\t\tvar points = meta.data || [];\n\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\tvar dataset = me.getDataset();\n\t\tvar showLine = lineEnabled(dataset, me.chart.options);\n\t\tvar i, ilen;\n\n\t\t// Update Line\n\t\tif (showLine) {\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\t// Utility\n\t\t\tline._scale = scale;\n\t\t\tline._datasetIndex = me.index;\n\t\t\t// Data\n\t\t\tline._children = points;\n\t\t\t// Model\n\t\t\tline._model = me._resolveLineOptions(line);\n\n\t\t\tline.pivot();\n\t\t}\n\n\t\t// Update Points\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tme.updateElement(points[i], i, reset);\n\t\t}\n\n\t\tif (showLine && line._model.tension !== 0) {\n\t\t\tme.updateBezierControlPoints();\n\t\t}\n\n\t\t// Now pivot the point for animation\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tpoints[i].pivot();\n\t\t}\n\t},\n\n\tupdateElement: function(point, index, reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar custom = point.custom || {};\n\t\tvar dataset = me.getDataset();\n\t\tvar datasetIndex = me.index;\n\t\tvar value = dataset.data[index];\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\tvar lineModel = meta.dataset._model;\n\t\tvar x, y;\n\n\t\tvar options = me._resolvePointOptions(point, index);\n\n\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t// Utility\n\t\tpoint._xScale = xScale;\n\t\tpoint._yScale = yScale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = datasetIndex;\n\t\tpoint._index = index;\n\n\t\t// Desired view properties\n\t\tpoint._model = {\n\t\t\tx: x,\n\t\t\ty: y,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t// Appearance\n\t\t\tradius: options.radius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\ttension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n\t\t\tsteppedLine: lineModel ? lineModel.steppedLine : false,\n\t\t\t// Tooltip\n\t\t\thitRadius: options.hitRadius\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolvePointOptions: function(element, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar ELEMENT_OPTIONS = {\n\t\t\tbackgroundColor: 'pointBackgroundColor',\n\t\t\tborderColor: 'pointBorderColor',\n\t\t\tborderWidth: 'pointBorderWidth',\n\t\t\thitRadius: 'pointHitRadius',\n\t\t\thoverBackgroundColor: 'pointHoverBackgroundColor',\n\t\t\thoverBorderColor: 'pointHoverBorderColor',\n\t\t\thoverBorderWidth: 'pointHoverBorderWidth',\n\t\t\thoverRadius: 'pointHoverRadius',\n\t\t\tpointStyle: 'pointStyle',\n\t\t\tradius: 'pointRadius',\n\t\t\trotation: 'pointRotation'\n\t\t};\n\t\tvar keys = Object.keys(ELEMENT_OPTIONS);\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$4([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[ELEMENT_OPTIONS[key]],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveLineOptions: function(element) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options;\n\t\tvar elementOptions = options.elements.line;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderWidth',\n\t\t\t'borderColor',\n\t\t\t'borderCapStyle',\n\t\t\t'borderDash',\n\t\t\t'borderDashOffset',\n\t\t\t'borderJoinStyle',\n\t\t\t'fill',\n\t\t\t'cubicInterpolationMode'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$4([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\telementOptions[key]\n\t\t\t]);\n\t\t}\n\n\t\t// The default behavior of lines is to break at null values, according\n\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t// This option gives lines the ability to span gaps\n\t\tvalues.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n\t\tvalues.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n\t\tvalues.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n\n\t\treturn values;\n\t},\n\n\tcalculatePointY: function(value, index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\tvar sumPos = 0;\n\t\tvar sumNeg = 0;\n\t\tvar i, ds, dsMeta;\n\n\t\tif (yScale.options.stacked) {\n\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\tif (rightValue < 0) {\n\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t}\n\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t}\n\n\t\treturn yScale.getPixelForValue(value);\n\t},\n\n\tupdateBezierControlPoints: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar lineModel = meta.dataset._model;\n\t\tvar area = chart.chartArea;\n\t\tvar points = meta.data || [];\n\t\tvar i, ilen, model, controlPoints;\n\n\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\tif (lineModel.spanGaps) {\n\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\treturn !pt._model.skip;\n\t\t\t});\n\t\t}\n\n\t\tfunction capControlPoint(pt, min, max) {\n\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t}\n\n\t\tif (lineModel.cubicInterpolationMode === 'monotone') {\n\t\t\thelpers$1.splineCurveMonotone(points);\n\t\t} else {\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tmodel = points[i]._model;\n\t\t\t\tcontrolPoints = helpers$1.splineCurve(\n\t\t\t\t\thelpers$1.previousItem(points, i)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers$1.nextItem(points, i)._model,\n\t\t\t\t\tlineModel.tension\n\t\t\t\t);\n\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t}\n\t\t}\n\n\t\tif (chart.options.elements.line.capBezierPoints) {\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tmodel = points[i]._model;\n\t\t\t\tif (isPointInArea(model, area)) {\n\t\t\t\t\tif (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n\t\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\t}\n\t\t\t\t\tif (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n\t\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar meta = me.getMeta();\n\t\tvar points = meta.data || [];\n\t\tvar area = chart.chartArea;\n\t\tvar ilen = points.length;\n\t\tvar halfBorderWidth;\n\t\tvar i = 0;\n\n\t\tif (lineEnabled(me.getDataset(), chart.options)) {\n\t\t\thalfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n\n\t\t\thelpers$1.canvas.clipArea(chart.ctx, {\n\t\t\t\tleft: area.left,\n\t\t\t\tright: area.right,\n\t\t\t\ttop: area.top - halfBorderWidth,\n\t\t\t\tbottom: area.bottom + halfBorderWidth\n\t\t\t});\n\n\t\t\tmeta.dataset.draw();\n\n\t\t\thelpers$1.canvas.unclipArea(chart.ctx);\n\t\t}\n\n\t\t// Draw the points\n\t\tfor (; i < ilen; ++i) {\n\t\t\tpoints[i].draw(area);\n\t\t}\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(point) {\n\t\tvar model = point._model;\n\t\tvar options = point._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tpoint.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t\tradius: model.radius\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n\t\tmodel.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n\t},\n});\n\nvar resolve$5 = helpers$1.options.resolve;\n\ncore_defaults._set('polarArea', {\n\tscale: {\n\t\ttype: 'radialLinear',\n\t\tangleLines: {\n\t\t\tdisplay: false\n\t\t},\n\t\tgridLines: {\n\t\t\tcircular: true\n\t\t},\n\t\tpointLabels: {\n\t\t\tdisplay: false\n\t\t},\n\t\tticks: {\n\t\t\tbeginAtZero: true\n\t\t}\n\t},\n\n\t// Boolean - Whether to animate the rotation of the chart\n\tanimation: {\n\t\tanimateRotate: true,\n\t\tanimateScale: true\n\t},\n\n\tstartAngle: -0.5 * Math.PI,\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n\t\t\t\t\t\tvar stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n\t\t\t\t\t\tvar bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\treturn data.labels[item.index] + ': ' + item.yLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nvar controller_polarArea = core_datasetController.extend({\n\n\tdataElementType: elements.Arc,\n\n\tlinkScales: helpers$1.noop,\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar dataset = me.getDataset();\n\t\tvar meta = me.getMeta();\n\t\tvar start = me.chart.options.startAngle || 0;\n\t\tvar starts = me._starts = [];\n\t\tvar angles = me._angles = [];\n\t\tvar arcs = meta.data;\n\t\tvar i, ilen, angle;\n\n\t\tme._updateRadius();\n\n\t\tmeta.count = me.countVisibleElements();\n\n\t\tfor (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n\t\t\tstarts[i] = start;\n\t\t\tangle = me._computeAngle(i);\n\t\t\tangles[i] = angle;\n\t\t\tstart += angle;\n\t\t}\n\n\t\tfor (i = 0, ilen = arcs.length; i < ilen; ++i) {\n\t\t\tarcs[i]._options = me._resolveElementOptions(arcs[i], i);\n\t\t\tme.updateElement(arcs[i], i, reset);\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_updateRadius: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar chartArea = chart.chartArea;\n\t\tvar opts = chart.options;\n\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n\t\tchart.outerRadius = Math.max(minSize / 2, 0);\n\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\t},\n\n\tupdateElement: function(arc, index, reset) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = me.getDataset();\n\t\tvar opts = chart.options;\n\t\tvar animationOpts = opts.animation;\n\t\tvar scale = chart.scale;\n\t\tvar labels = chart.data.labels;\n\n\t\tvar centerX = scale.xCenter;\n\t\tvar centerY = scale.yCenter;\n\n\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\tvar datasetStartAngle = opts.startAngle;\n\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\tvar startAngle = me._starts[index];\n\t\tvar endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n\n\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\tvar options = arc._options || {};\n\n\t\thelpers$1.extend(arc, {\n\t\t\t// Utility\n\t\t\t_datasetIndex: me.index,\n\t\t\t_index: index,\n\t\t\t_scale: scale,\n\n\t\t\t// Desired view properties\n\t\t\t_model: {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\tborderAlign: options.borderAlign,\n\t\t\t\tx: centerX,\n\t\t\t\ty: centerY,\n\t\t\t\tinnerRadius: 0,\n\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\tlabel: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t}\n\t\t});\n\n\t\tarc.pivot();\n\t},\n\n\tcountVisibleElements: function() {\n\t\tvar dataset = this.getDataset();\n\t\tvar meta = this.getMeta();\n\t\tvar count = 0;\n\n\t\thelpers$1.each(meta.data, function(element, index) {\n\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t});\n\n\t\treturn count;\n\t},\n\n\t/**\n\t * @protected\n\t */\n\tsetHoverStyle: function(arc) {\n\t\tvar model = arc._model;\n\t\tvar options = arc._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\t\tvar valueOrDefault = helpers$1.valueOrDefault;\n\n\t\tarc.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveElementOptions: function(arc, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = me.getDataset();\n\t\tvar custom = arc.custom || {};\n\t\tvar options = chart.options.elements.arc;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderColor',\n\t\t\t'borderWidth',\n\t\t\t'borderAlign',\n\t\t\t'hoverBackgroundColor',\n\t\t\t'hoverBorderColor',\n\t\t\t'hoverBorderWidth',\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$5([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_computeAngle: function(index) {\n\t\tvar me = this;\n\t\tvar count = this.getMeta().count;\n\t\tvar dataset = me.getDataset();\n\t\tvar meta = me.getMeta();\n\n\t\tif (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: me.chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\treturn resolve$5([\n\t\t\tme.chart.options.elements.arc.angle,\n\t\t\t(2 * Math.PI) / count\n\t\t], context, index);\n\t}\n});\n\ncore_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\ncore_defaults._set('pie', {\n\tcutoutPercentage: 0\n});\n\n// Pie charts are Doughnut chart with different defaults\nvar controller_pie = controller_doughnut;\n\nvar valueOrDefault$6 = helpers$1.valueOrDefault;\nvar resolve$6 = helpers$1.options.resolve;\n\ncore_defaults._set('radar', {\n\tscale: {\n\t\ttype: 'radialLinear'\n\t},\n\telements: {\n\t\tline: {\n\t\t\ttension: 0 // no bezier in radar\n\t\t}\n\t}\n});\n\nvar controller_radar = core_datasetController.extend({\n\n\tdatasetElementType: elements.Line,\n\n\tdataElementType: elements.Point,\n\n\tlinkScales: helpers$1.noop,\n\n\tupdate: function(reset) {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar line = meta.dataset;\n\t\tvar points = meta.data || [];\n\t\tvar scale = me.chart.scale;\n\t\tvar dataset = me.getDataset();\n\t\tvar i, ilen;\n\n\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\tdataset.lineTension = dataset.tension;\n\t\t}\n\n\t\t// Utility\n\t\tline._scale = scale;\n\t\tline._datasetIndex = me.index;\n\t\t// Data\n\t\tline._children = points;\n\t\tline._loop = true;\n\t\t// Model\n\t\tline._model = me._resolveLineOptions(line);\n\n\t\tline.pivot();\n\n\t\t// Update Points\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tme.updateElement(points[i], i, reset);\n\t\t}\n\n\t\t// Update bezier control points\n\t\tme.updateBezierControlPoints();\n\n\t\t// Now pivot the point for animation\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tpoints[i].pivot();\n\t\t}\n\t},\n\n\tupdateElement: function(point, index, reset) {\n\t\tvar me = this;\n\t\tvar custom = point.custom || {};\n\t\tvar dataset = me.getDataset();\n\t\tvar scale = me.chart.scale;\n\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\t\tvar options = me._resolvePointOptions(point, index);\n\t\tvar lineModel = me.getMeta().dataset._model;\n\t\tvar x = reset ? scale.xCenter : pointPosition.x;\n\t\tvar y = reset ? scale.yCenter : pointPosition.y;\n\n\t\t// Utility\n\t\tpoint._scale = scale;\n\t\tpoint._options = options;\n\t\tpoint._datasetIndex = me.index;\n\t\tpoint._index = index;\n\n\t\t// Desired view properties\n\t\tpoint._model = {\n\t\t\tx: x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\ty: y,\n\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t// Appearance\n\t\t\tradius: options.radius,\n\t\t\tpointStyle: options.pointStyle,\n\t\t\trotation: options.rotation,\n\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\tborderColor: options.borderColor,\n\t\t\tborderWidth: options.borderWidth,\n\t\t\ttension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n\n\t\t\t// Tooltip\n\t\t\thitRadius: options.hitRadius\n\t\t};\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolvePointOptions: function(element, index) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.point;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\t// Scriptable options\n\t\tvar context = {\n\t\t\tchart: chart,\n\t\t\tdataIndex: index,\n\t\t\tdataset: dataset,\n\t\t\tdatasetIndex: me.index\n\t\t};\n\n\t\tvar ELEMENT_OPTIONS = {\n\t\t\tbackgroundColor: 'pointBackgroundColor',\n\t\t\tborderColor: 'pointBorderColor',\n\t\t\tborderWidth: 'pointBorderWidth',\n\t\t\thitRadius: 'pointHitRadius',\n\t\t\thoverBackgroundColor: 'pointHoverBackgroundColor',\n\t\t\thoverBorderColor: 'pointHoverBorderColor',\n\t\t\thoverBorderWidth: 'pointHoverBorderWidth',\n\t\t\thoverRadius: 'pointHoverRadius',\n\t\t\tpointStyle: 'pointStyle',\n\t\t\tradius: 'pointRadius',\n\t\t\trotation: 'pointRotation'\n\t\t};\n\t\tvar keys = Object.keys(ELEMENT_OPTIONS);\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$6([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[ELEMENT_OPTIONS[key]],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t], context, index);\n\t\t}\n\n\t\treturn values;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_resolveLineOptions: function(element) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar dataset = chart.data.datasets[me.index];\n\t\tvar custom = element.custom || {};\n\t\tvar options = chart.options.elements.line;\n\t\tvar values = {};\n\t\tvar i, ilen, key;\n\n\t\tvar keys = [\n\t\t\t'backgroundColor',\n\t\t\t'borderWidth',\n\t\t\t'borderColor',\n\t\t\t'borderCapStyle',\n\t\t\t'borderDash',\n\t\t\t'borderDashOffset',\n\t\t\t'borderJoinStyle',\n\t\t\t'fill'\n\t\t];\n\n\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\tkey = keys[i];\n\t\t\tvalues[key] = resolve$6([\n\t\t\t\tcustom[key],\n\t\t\t\tdataset[key],\n\t\t\t\toptions[key]\n\t\t\t]);\n\t\t}\n\n\t\tvalues.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n\n\t\treturn values;\n\t},\n\n\tupdateBezierControlPoints: function() {\n\t\tvar me = this;\n\t\tvar meta = me.getMeta();\n\t\tvar area = me.chart.chartArea;\n\t\tvar points = meta.data || [];\n\t\tvar i, ilen, model, controlPoints;\n\n\t\tfunction capControlPoint(pt, min, max) {\n\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t}\n\n\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\tmodel = points[i]._model;\n\t\t\tcontrolPoints = helpers$1.splineCurve(\n\t\t\t\thelpers$1.previousItem(points, i, true)._model,\n\t\t\t\tmodel,\n\t\t\t\thelpers$1.nextItem(points, i, true)._model,\n\t\t\t\tmodel.tension\n\t\t\t);\n\n\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\tmodel.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n\t\t\tmodel.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n\t\t\tmodel.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n\t\t\tmodel.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n\t\t}\n\t},\n\n\tsetHoverStyle: function(point) {\n\t\tvar model = point._model;\n\t\tvar options = point._options;\n\t\tvar getHoverColor = helpers$1.getHoverColor;\n\n\t\tpoint.$previousStyle = {\n\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\tborderColor: model.borderColor,\n\t\t\tborderWidth: model.borderWidth,\n\t\t\tradius: model.radius\n\t\t};\n\n\t\tmodel.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n\t\tmodel.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n\t\tmodel.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n\t\tmodel.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n\t}\n});\n\ncore_defaults._set('scatter', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\tid: 'x-axis-1',    // need an ID so datasets can reference the scale\n\t\t\ttype: 'linear',    // scatter should not use a category axis\n\t\t\tposition: 'bottom'\n\t\t}],\n\t\tyAxes: [{\n\t\t\tid: 'y-axis-1',\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left'\n\t\t}]\n\t},\n\n\tshowLines: false,\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';     // doesn't make sense for scatter since data are formatted as a point\n\t\t\t},\n\t\t\tlabel: function(item) {\n\t\t\t\treturn '(' + item.xLabel + ', ' + item.yLabel + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\n// Scatter charts use line controllers\nvar controller_scatter = controller_line;\n\n// NOTE export a map in which the key represents the controller type, not\n// the class, and so must be CamelCase in order to be correctly retrieved\n// by the controller in core.controller.js (`controllers[meta.type]`).\n\nvar controllers = {\n\tbar: controller_bar,\n\tbubble: controller_bubble,\n\tdoughnut: controller_doughnut,\n\thorizontalBar: controller_horizontalBar,\n\tline: controller_line,\n\tpolarArea: controller_polarArea,\n\tpie: controller_pie,\n\tradar: controller_radar,\n\tscatter: controller_scatter\n};\n\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {object} the event position\n */\nfunction getRelativePosition(e, chart) {\n\tif (e.native) {\n\t\treturn {\n\t\t\tx: e.x,\n\t\t\ty: e.y\n\t\t};\n\t}\n\n\treturn helpers$1.getRelativePosition(e, chart);\n}\n\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param {Chart} chart - the chart\n * @param {function} handler - the callback to execute for each visible item\n */\nfunction parseVisibleItems(chart, handler) {\n\tvar datasets = chart.data.datasets;\n\tvar meta, i, j, ilen, jlen;\n\n\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmeta = chart.getDatasetMeta(i);\n\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\tvar element = meta.data[j];\n\t\t\tif (!element._view.skip) {\n\t\t\t\thandler(element);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {ChartElement[]} items - elements to filter\n * @param {object} position - the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\nfunction getIntersectItems(chart, position) {\n\tvar elements = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (element.inRange(position.x, position.y)) {\n\t\t\telements.push(element);\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {object} position - the point to be nearest to\n * @param {boolean} intersect - if true, only consider items that intersect the position\n * @param {function} distanceMetric - function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\tvar minDistance = Number.POSITIVE_INFINITY;\n\tvar nearestItems = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar center = element.getCenterPoint();\n\t\tvar distance = distanceMetric(position, center);\n\t\tif (distance < minDistance) {\n\t\t\tnearestItems = [element];\n\t\t\tminDistance = distance;\n\t\t} else if (distance === minDistance) {\n\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\tnearestItems.push(element);\n\t\t}\n\t});\n\n\treturn nearestItems;\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy\n */\nfunction getDistanceMetricForAxis(axis) {\n\tvar useX = axis.indexOf('x') !== -1;\n\tvar useY = axis.indexOf('y') !== -1;\n\n\treturn function(pt1, pt2) {\n\t\tvar deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n\t\tvar deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n\t\treturn Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n\t};\n}\n\nfunction indexMode(chart, e, options) {\n\tvar position = getRelativePosition(e, chart);\n\t// Default axis for index mode is 'x' to match old behaviour\n\toptions.axis = options.axis || 'x';\n\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\tvar elements = [];\n\n\tif (!items.length) {\n\t\treturn [];\n\t}\n\n\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\tvar element = meta.data[items[0]._index];\n\n\t\t\t// don't count items that are skipped (null data)\n\t\t\tif (element && !element._view.skip) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * @interface IInteractionOptions\n */\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nvar core_interaction = {\n\t// Helper function for different modes\n\tmodes: {\n\t\tsingle: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar elements = [];\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t\treturn elements;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn elements.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.label\n\t\t * @deprecated since version 2.4.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tlabel: indexMode,\n\n\t\t/**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tindex: indexMode,\n\n\t\t/**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tdataset: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n\t\t\tif (items.length > 0) {\n\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t}\n\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.x-axis\n\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\t'x-axis': function(chart, e) {\n\t\t\treturn indexMode(chart, e, {intersect: false});\n\t\t},\n\n\t\t/**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tpoint: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\treturn getIntersectItems(chart, position);\n\t\t},\n\n\t\t/**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tnearest: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\treturn getNearestItems(chart, position, options.intersect, distanceMetric);\n\t\t},\n\n\t\t/**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tx: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {IInteractionOptions} options - options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\ty: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n};\n\nfunction filterByPosition(array, position) {\n\treturn helpers$1.where(array, function(v) {\n\t\treturn v.position === position;\n\t});\n}\n\nfunction sortByWeight(array, reverse) {\n\tarray.forEach(function(v, i) {\n\t\tv._tmpIndex_ = i;\n\t\treturn v;\n\t});\n\tarray.sort(function(a, b) {\n\t\tvar v0 = reverse ? b : a;\n\t\tvar v1 = reverse ? a : b;\n\t\treturn v0.weight === v1.weight ?\n\t\t\tv0._tmpIndex_ - v1._tmpIndex_ :\n\t\t\tv0.weight - v1.weight;\n\t});\n\tarray.forEach(function(v) {\n\t\tdelete v._tmpIndex_;\n\t});\n}\n\nfunction findMaxPadding(boxes) {\n\tvar top = 0;\n\tvar left = 0;\n\tvar bottom = 0;\n\tvar right = 0;\n\thelpers$1.each(boxes, function(box) {\n\t\tif (box.getPadding) {\n\t\t\tvar boxPadding = box.getPadding();\n\t\t\ttop = Math.max(top, boxPadding.top);\n\t\t\tleft = Math.max(left, boxPadding.left);\n\t\t\tbottom = Math.max(bottom, boxPadding.bottom);\n\t\t\tright = Math.max(right, boxPadding.right);\n\t\t}\n\t});\n\treturn {\n\t\ttop: top,\n\t\tleft: left,\n\t\tbottom: bottom,\n\t\tright: right\n\t};\n}\n\nfunction addSizeByPosition(boxes, size) {\n\thelpers$1.each(boxes, function(box) {\n\t\tsize[box.position] += box.isHorizontal() ? box.height : box.width;\n\t});\n}\n\ncore_defaults._set('global', {\n\tlayout: {\n\t\tpadding: {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0\n\t\t}\n\t}\n});\n\n/**\n * @interface ILayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} getPadding -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nvar core_layouts = {\n\tdefaults: {},\n\n\t/**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {ILayoutItem} item - the item to add to be layed out\n\t */\n\taddBox: function(chart, item) {\n\t\tif (!chart.boxes) {\n\t\t\tchart.boxes = [];\n\t\t}\n\n\t\t// initialize item with default values\n\t\titem.fullWidth = item.fullWidth || false;\n\t\titem.position = item.position || 'top';\n\t\titem.weight = item.weight || 0;\n\n\t\tchart.boxes.push(item);\n\t},\n\n\t/**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {ILayoutItem} layoutItem - the item to remove from the layout\n\t */\n\tremoveBox: function(chart, layoutItem) {\n\t\tvar index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\t\tif (index !== -1) {\n\t\t\tchart.boxes.splice(index, 1);\n\t\t}\n\t},\n\n\t/**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {ILayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n\tconfigure: function(chart, item, options) {\n\t\tvar props = ['fullWidth', 'position', 'weight'];\n\t\tvar ilen = props.length;\n\t\tvar i = 0;\n\t\tvar prop;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tprop = props[i];\n\t\t\tif (options.hasOwnProperty(prop)) {\n\t\t\t\titem[prop] = options[prop];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n\t */\n\tupdate: function(chart, width, height) {\n\t\tif (!chart) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar layoutOptions = chart.options.layout || {};\n\t\tvar padding = helpers$1.options.toPadding(layoutOptions.padding);\n\t\tvar leftPadding = padding.left;\n\t\tvar rightPadding = padding.right;\n\t\tvar topPadding = padding.top;\n\t\tvar bottomPadding = padding.bottom;\n\n\t\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\n\t\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\n\t\tvar topBoxes = filterByPosition(chart.boxes, 'top');\n\t\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n\t\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n\n\t\t// Sort boxes by weight. A higher weight is further away from the chart area\n\t\tsortByWeight(leftBoxes, true);\n\t\tsortByWeight(rightBoxes, false);\n\t\tsortByWeight(topBoxes, true);\n\t\tsortByWeight(bottomBoxes, false);\n\n\t\tvar verticalBoxes = leftBoxes.concat(rightBoxes);\n\t\tvar horizontalBoxes = topBoxes.concat(bottomBoxes);\n\t\tvar outerBoxes = verticalBoxes.concat(horizontalBoxes);\n\n\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t// Our canvas looks like the following.\n\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t// B1 is the bottom axis\n\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t// an error will be thrown.\n\t\t//\n\t\t// |----------------------------------------------------|\n\t\t// |                  T1 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t// |    |    |                 T2                  |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    | C1 |                           | C2 |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    |                                     |    |\n\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t// |    |    |                                     |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    | C3 |                           | C4 |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    |                 B1                  |    |\n\t\t// |----------------------------------------------------|\n\t\t// |                  B2 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t//\n\t\t// What we do to find the best sizing, we do the following\n\t\t// 1. Determine the minimum size of the chart area.\n\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t// 6. Refit each axis\n\t\t// 7. Position each axis in the final location\n\t\t// 8. Tell the chart the final location of the chart area\n\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t// Step 1\n\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\n\t\t// Step 2\n\t\tvar verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length;\n\n\t\t// Step 3\n\t\t// TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n\t\t// var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n\n\t\t// Step 4\n\t\tvar maxChartAreaWidth = chartWidth;\n\t\tvar maxChartAreaHeight = chartHeight;\n\t\tvar outerBoxSizes = {top: topPadding, left: leftPadding, bottom: bottomPadding, right: rightPadding};\n\t\tvar minBoxSizes = [];\n\t\tvar maxPadding;\n\n\t\tfunction getMinimumBoxSize(box) {\n\t\t\tvar minSize;\n\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t} else {\n\t\t\t\tminSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t}\n\n\t\t\tminBoxSizes.push({\n\t\t\t\thorizontal: isHorizontal,\n\t\t\t\twidth: minSize.width,\n\t\t\t\tbox: box,\n\t\t\t});\n\t\t}\n\n\t\thelpers$1.each(outerBoxes, getMinimumBoxSize);\n\n\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\tmaxPadding = findMaxPadding(outerBoxes);\n\n\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t// be if the axes are drawn at their minimum sizes.\n\t\t// Steps 5 & 6\n\n\t\t// Function to fit a box\n\t\tfunction fitBox(box) {\n\t\t\tvar minBoxSize = helpers$1.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\treturn minBox.box === box;\n\t\t\t});\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tif (minBoxSize.horizontal) {\n\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\tleft: Math.max(outerBoxSizes.left, maxPadding.left),\n\t\t\t\t\t\tright: Math.max(outerBoxSizes.right, maxPadding.right),\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t};\n\n\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t} else {\n\t\t\t\t\tbox.update(minBoxSize.width, maxChartAreaHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\thelpers$1.each(verticalBoxes, fitBox);\n\t\taddSizeByPosition(verticalBoxes, outerBoxSizes);\n\n\t\t// Set the Left and Right margins for the horizontal boxes\n\t\thelpers$1.each(horizontalBoxes, fitBox);\n\t\taddSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n\t\tfunction finalFitVerticalBox(box) {\n\t\t\tvar minBoxSize = helpers$1.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\treturn minSize.box === box;\n\t\t\t});\n\n\t\t\tvar scaleMargin = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: outerBoxSizes.top,\n\t\t\t\tbottom: outerBoxSizes.bottom\n\t\t\t};\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tbox.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t}\n\t\t}\n\n\t\t// Let the left layout know the final margin\n\t\thelpers$1.each(verticalBoxes, finalFitVerticalBox);\n\n\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\touterBoxSizes = {top: topPadding, left: leftPadding, bottom: bottomPadding, right: rightPadding};\n\t\taddSizeByPosition(outerBoxes, outerBoxSizes);\n\n\t\t// We may be adding some padding to account for rotated x axis labels\n\t\tvar leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n\t\touterBoxSizes.left += leftPaddingAddition;\n\t\touterBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n\n\t\tvar topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n\t\touterBoxSizes.top += topPaddingAddition;\n\t\touterBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0);\n\n\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t// without calling `fit` again\n\t\tvar newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n\t\tvar newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\thelpers$1.each(verticalBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers$1.each(horizontalBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t}\n\n\t\t// Step 7 - Position the boxes\n\t\tvar left = leftPadding + leftPaddingAddition;\n\t\tvar top = topPadding + topPaddingAddition;\n\n\t\tfunction placeBox(box) {\n\t\t\tif (box.isHorizontal()) {\n\t\t\t\tbox.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n\t\t\t\tbox.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n\t\t\t\tbox.top = top;\n\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t// Move to next point\n\t\t\t\ttop = box.bottom;\n\n\t\t\t} else {\n\n\t\t\t\tbox.left = left;\n\t\t\t\tbox.right = left + box.width;\n\t\t\t\tbox.top = outerBoxSizes.top;\n\t\t\t\tbox.bottom = outerBoxSizes.top + maxChartAreaHeight;\n\n\t\t\t\t// Move to next point\n\t\t\t\tleft = box.right;\n\t\t\t}\n\t\t}\n\n\t\thelpers$1.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t// Account for chart width and height\n\t\tleft += maxChartAreaWidth;\n\t\ttop += maxChartAreaHeight;\n\n\t\thelpers$1.each(rightBoxes, placeBox);\n\t\thelpers$1.each(bottomBoxes, placeBox);\n\n\t\t// Step 8\n\t\tchart.chartArea = {\n\t\t\tleft: outerBoxSizes.left,\n\t\t\ttop: outerBoxSizes.top,\n\t\t\tright: outerBoxSizes.left + maxChartAreaWidth,\n\t\t\tbottom: outerBoxSizes.top + maxChartAreaHeight\n\t\t};\n\n\t\t// Step 9\n\t\thelpers$1.each(chartAreaBoxes, function(box) {\n\t\t\tbox.left = chart.chartArea.left;\n\t\t\tbox.top = chart.chartArea.top;\n\t\t\tbox.right = chart.chartArea.right;\n\t\t\tbox.bottom = chart.chartArea.bottom;\n\n\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t});\n\t}\n};\n\n/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nvar platform_basic = {\n\tacquireContext: function(item) {\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\treturn item && item.getContext('2d') || null;\n\t}\n};\n\nvar platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n\nvar platform_dom$1 = /*#__PURE__*/Object.freeze({\ndefault: platform_dom\n});\n\nfunction getCjsExportFromNamespace (n) {\n\treturn n && n.default || n;\n}\n\nvar stylesheet = getCjsExportFromNamespace(platform_dom$1);\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nvar EVENT_TYPES = {\n\ttouchstart: 'mousedown',\n\ttouchmove: 'mousemove',\n\ttouchend: 'mouseup',\n\tpointerenter: 'mouseenter',\n\tpointerdown: 'mousedown',\n\tpointermove: 'mousemove',\n\tpointerup: 'mouseup',\n\tpointerleave: 'mouseout',\n\tpointerout: 'mouseout'\n};\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {number} Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property) {\n\tvar value = helpers$1.getStyle(element, property);\n\tvar matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n\treturn matches ? Number(matches[1]) : undefined;\n}\n\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\nfunction initCanvas(canvas, config) {\n\tvar style = canvas.style;\n\n\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\tvar renderHeight = canvas.getAttribute('height');\n\tvar renderWidth = canvas.getAttribute('width');\n\n\t// Chart.js modifies some canvas values that we want to restore on destroy\n\tcanvas[EXPANDO_KEY] = {\n\t\tinitial: {\n\t\t\theight: renderHeight,\n\t\t\twidth: renderWidth,\n\t\t\tstyle: {\n\t\t\t\tdisplay: style.display,\n\t\t\t\theight: style.height,\n\t\t\t\twidth: style.width\n\t\t\t}\n\t\t}\n\t};\n\n\t// Force canvas to display as block to avoid extra space caused by inline\n\t// elements, which would interfere with the responsive resize process.\n\t// https://github.com/chartjs/Chart.js/issues/2538\n\tstyle.display = style.display || 'block';\n\n\tif (renderWidth === null || renderWidth === '') {\n\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\tif (displayWidth !== undefined) {\n\t\t\tcanvas.width = displayWidth;\n\t\t}\n\t}\n\n\tif (renderHeight === null || renderHeight === '') {\n\t\tif (canvas.style.height === '') {\n\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t} else {\n\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.height = displayHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn canvas;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nvar supportsEventListenerOptions = (function() {\n\tvar supports = false;\n\ttry {\n\t\tvar options = Object.defineProperty({}, 'passive', {\n\t\t\t// eslint-disable-next-line getter-return\n\t\t\tget: function() {\n\t\t\t\tsupports = true;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('e', null, options);\n\t} catch (e) {\n\t\t// continue regardless of error\n\t}\n\treturn supports;\n}());\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n\tnode.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeListener(node, type, listener) {\n\tnode.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n\treturn {\n\t\ttype: type,\n\t\tchart: chart,\n\t\tnative: nativeEvent || null,\n\t\tx: x !== undefined ? x : null,\n\t\ty: y !== undefined ? y : null,\n\t};\n}\n\nfunction fromNativeEvent(event, chart) {\n\tvar type = EVENT_TYPES[event.type] || event.type;\n\tvar pos = helpers$1.getRelativePosition(event, chart);\n\treturn createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n\tvar ticking = false;\n\tvar args = [];\n\n\treturn function() {\n\t\targs = Array.prototype.slice.call(arguments);\n\t\tthisArg = thisArg || this;\n\n\t\tif (!ticking) {\n\t\t\tticking = true;\n\t\t\thelpers$1.requestAnimFrame.call(window, function() {\n\t\t\t\tticking = false;\n\t\t\t\tfn.apply(thisArg, args);\n\t\t\t});\n\t\t}\n\t};\n}\n\nfunction createDiv(cls) {\n\tvar el = document.createElement('div');\n\tel.className = cls || '';\n\treturn el;\n}\n\n// Implementation based on https://github.com/marcj/css-element-queries\nfunction createResizer(handler) {\n\tvar maxSize = 1000000;\n\n\t// NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n\t// https://github.com/chartjs/Chart.js/issues/5902\n\tvar resizer = createDiv(CSS_SIZE_MONITOR);\n\tvar expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n\tvar shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n\n\texpand.appendChild(createDiv());\n\tshrink.appendChild(createDiv());\n\n\tresizer.appendChild(expand);\n\tresizer.appendChild(shrink);\n\tresizer._reset = function() {\n\t\texpand.scrollLeft = maxSize;\n\t\texpand.scrollTop = maxSize;\n\t\tshrink.scrollLeft = maxSize;\n\t\tshrink.scrollTop = maxSize;\n\t};\n\n\tvar onScroll = function() {\n\t\tresizer._reset();\n\t\thandler();\n\t};\n\n\taddListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\taddListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n\treturn resizer;\n}\n\n// https://davidwalsh.name/detect-node-insertion\nfunction watchForRender(node, handler) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\tvar proxy = expando.renderProxy = function(e) {\n\t\tif (e.animationName === CSS_RENDER_ANIMATION) {\n\t\t\thandler();\n\t\t}\n\t};\n\n\thelpers$1.each(ANIMATION_START_EVENTS, function(type) {\n\t\taddListener(node, type, proxy);\n\t});\n\n\t// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n\t// is removed then added back immediately (same animation frame?). Accessing the\n\t// `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n\t// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n\t// https://github.com/chartjs/Chart.js/issues/4737\n\texpando.reflow = !!node.offsetParent;\n\n\tnode.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar proxy = expando.renderProxy;\n\n\tif (proxy) {\n\t\thelpers$1.each(ANIMATION_START_EVENTS, function(type) {\n\t\t\tremoveListener(node, type, proxy);\n\t\t});\n\n\t\tdelete expando.renderProxy;\n\t}\n\n\tnode.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n\t// Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\tvar resizer = expando.resizer = createResizer(throttled(function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = chart.options.maintainAspectRatio && node.parentNode;\n\t\t\tvar w = container ? container.clientWidth : 0;\n\t\t\tlistener(createEvent('resize', chart));\n\t\t\tif (container && container.clientWidth < w && chart.canvas) {\n\t\t\t\t// If the container size shrank during chart resize, let's assume\n\t\t\t\t// scrollbar appeared. So we resize again with the scrollbar visible -\n\t\t\t\t// effectively making chart smaller and the scrollbar hidden again.\n\t\t\t\t// Because we are inside `throttled`, and currently `ticking`, scroll\n\t\t\t\t// events are ignored during this whole 2 resize process.\n\t\t\t\t// If we assumed wrong and something else happened, we are resizing\n\t\t\t\t// twice in a frame (potential performance issue)\n\t\t\t\tlistener(createEvent('resize', chart));\n\t\t\t}\n\t\t}\n\t}));\n\n\t// The resizer needs to be attached to the node parent, so we first need to be\n\t// sure that `node` is attached to the DOM before injecting the resizer element.\n\twatchForRender(node, function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = node.parentNode;\n\t\t\tif (container && container !== resizer.parentNode) {\n\t\t\t\tcontainer.insertBefore(resizer, container.firstChild);\n\t\t\t}\n\n\t\t\t// The container size might have changed, let's reset the resizer state.\n\t\t\tresizer._reset();\n\t\t}\n\t});\n}\n\nfunction removeResizeListener(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar resizer = expando.resizer;\n\n\tdelete expando.resizer;\n\tunwatchForRender(node);\n\n\tif (resizer && resizer.parentNode) {\n\t\tresizer.parentNode.removeChild(resizer);\n\t}\n}\n\nfunction injectCSS(platform, css) {\n\t// https://stackoverflow.com/q/3922139\n\tvar style = platform._style || document.createElement('style');\n\tif (!platform._style) {\n\t\tplatform._style = style;\n\t\tcss = '/* Chart.js */\\n' + css;\n\t\tstyle.setAttribute('type', 'text/css');\n\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\n\t}\n\n\tstyle.appendChild(document.createTextNode(css));\n}\n\nvar platform_dom$2 = {\n\t/**\n\t * When `true`, prevents the automatic injection of the stylesheet required to\n\t * correctly detect when the chart is added to the DOM and then resized. This\n\t * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n\t * to be manually imported to make this library compatible with any CSP.\n\t * See https://github.com/chartjs/Chart.js/issues/5208\n\t */\n\tdisableCSSInjection: false,\n\n\t/**\n\t * This property holds whether this platform is enabled for the current environment.\n\t * Currently used by platform.js to select the proper implementation.\n\t * @private\n\t */\n\t_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n\t/**\n\t * @private\n\t */\n\t_ensureLoaded: function() {\n\t\tif (this._loaded) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._loaded = true;\n\n\t\t// https://github.com/chartjs/Chart.js/issues/5208\n\t\tif (!this.disableCSSInjection) {\n\t\t\tinjectCSS(this, stylesheet);\n\t\t}\n\t},\n\n\tacquireContext: function(item, config) {\n\t\tif (typeof item === 'string') {\n\t\t\titem = document.getElementById(item);\n\t\t} else if (item.length) {\n\t\t\t// Support for array based queries (such as jQuery)\n\t\t\titem = item[0];\n\t\t}\n\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\tvar context = item && item.getContext && item.getContext('2d');\n\n\t\t// Load platform resources on first chart creation, to make possible to change\n\t\t// platform options after importing the library (e.g. `disableCSSInjection`).\n\t\tthis._ensureLoaded();\n\n\t\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n\t\t// inside an iframe or when running in a protected environment. We could guess the\n\t\t// types from their toString() value but let's keep things flexible and assume it's\n\t\t// a sufficient condition if the item has a context2D which has item as `canvas`.\n\t\t// https://github.com/chartjs/Chart.js/issues/3887\n\t\t// https://github.com/chartjs/Chart.js/issues/4102\n\t\t// https://github.com/chartjs/Chart.js/issues/4152\n\t\tif (context && context.canvas === item) {\n\t\t\tinitCanvas(item, config);\n\t\t\treturn context;\n\t\t}\n\n\t\treturn null;\n\t},\n\n\treleaseContext: function(context) {\n\t\tvar canvas = context.canvas;\n\t\tif (!canvas[EXPANDO_KEY]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar initial = canvas[EXPANDO_KEY].initial;\n\t\t['height', 'width'].forEach(function(prop) {\n\t\t\tvar value = initial[prop];\n\t\t\tif (helpers$1.isNullOrUndef(value)) {\n\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t} else {\n\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t}\n\t\t});\n\n\t\thelpers$1.each(initial.style || {}, function(value, key) {\n\t\t\tcanvas.style[key] = value;\n\t\t});\n\n\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\t// eslint-disable-next-line no-self-assign\n\t\tcanvas.width = canvas.width;\n\n\t\tdelete canvas[EXPANDO_KEY];\n\t},\n\n\taddEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\taddResizeListener(canvas, listener, chart);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n\t\tvar proxies = expando.proxies || (expando.proxies = {});\n\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\tlistener(fromNativeEvent(event, chart));\n\t\t};\n\n\t\taddListener(canvas, type, proxy);\n\t},\n\n\tremoveEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\tremoveResizeListener(canvas);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || {};\n\t\tvar proxies = expando.proxies || {};\n\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveListener(canvas, type, proxy);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.addEvent = addListener;\n\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.removeEvent = removeListener;\n\n// @TODO Make possible to select another platform at build time.\nvar implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\nvar platform = helpers$1.extend({\n\t/**\n\t * @since 2.7.0\n\t */\n\tinitialize: function() {},\n\n\t/**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t * @param {object} options - The chart options\n\t * @returns {CanvasRenderingContext2D} context2d instance\n\t */\n\tacquireContext: function() {},\n\n\t/**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n\treleaseContext: function() {},\n\n\t/**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link IEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t */\n\taddEventListener: function() {},\n\n\t/**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link IEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n\tremoveEventListener: function() {}\n\n}, implementation);\n\ncore_defaults._set('global', {\n\tplugins: {}\n});\n\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\nvar core_plugins = {\n\t/**\n\t * Globally registered plugins.\n\t * @private\n\t */\n\t_plugins: [],\n\n\t/**\n\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t * incremented and descriptors are regenerated during following API calls.\n\t * @private\n\t */\n\t_cacheId: 0,\n\n\t/**\n\t * Registers the given plugin(s) if not already registered.\n\t * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n\t */\n\tregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\tp.push(plugin);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Unregisters the given plugin(s) only if registered.\n\t * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n\t */\n\tunregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tvar idx = p.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\tp.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Remove all registered plugins.\n\t * @since 2.1.5\n\t */\n\tclear: function() {\n\t\tthis._plugins = [];\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Returns the number of registered plugins?\n\t * @returns {number}\n\t * @since 2.1.5\n\t */\n\tcount: function() {\n\t\treturn this._plugins.length;\n\t},\n\n\t/**\n\t * Returns all registered plugin instances.\n\t * @returns {IPlugin[]} array of plugin objects.\n\t * @since 2.1.5\n\t */\n\tgetAll: function() {\n\t\treturn this._plugins;\n\t},\n\n\t/**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n\tnotify: function(chart, hook, args) {\n\t\tvar descriptors = this.descriptors(chart);\n\t\tvar ilen = descriptors.length;\n\t\tvar i, descriptor, plugin, params, method;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tdescriptor = descriptors[i];\n\t\t\tplugin = descriptor.plugin;\n\t\t\tmethod = plugin[hook];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\tparams.push(descriptor.options);\n\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns descriptors of enabled plugins for the given chart.\n\t * @returns {object[]} [{ plugin, options }]\n\t * @private\n\t */\n\tdescriptors: function(chart) {\n\t\tvar cache = chart.$plugins || (chart.$plugins = {});\n\t\tif (cache.id === this._cacheId) {\n\t\t\treturn cache.descriptors;\n\t\t}\n\n\t\tvar plugins = [];\n\t\tvar descriptors = [];\n\t\tvar config = (chart && chart.config) || {};\n\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar id = plugin.id;\n\t\t\tvar opts = options[id];\n\t\t\tif (opts === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (opts === true) {\n\t\t\t\topts = helpers$1.clone(core_defaults.global.plugins[id]);\n\t\t\t}\n\n\t\t\tplugins.push(plugin);\n\t\t\tdescriptors.push({\n\t\t\t\tplugin: plugin,\n\t\t\t\toptions: opts || {}\n\t\t\t});\n\t\t});\n\n\t\tcache.descriptors = descriptors;\n\t\tcache.id = this._cacheId;\n\t\treturn descriptors;\n\t},\n\n\t/**\n\t * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n\t * but in some cases, this reference can be changed by the user when updating options.\n\t * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t * @private\n\t */\n\t_invalidate: function(chart) {\n\t\tdelete chart.$plugins;\n\t}\n};\n\nvar core_scaleService = {\n\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t// use the new chart options to grab the correct scale\n\tconstructors: {},\n\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t// old browsers\n\n\t// Scale config defaults\n\tdefaults: {},\n\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\tthis.constructors[type] = scaleConstructor;\n\t\tthis.defaults[type] = helpers$1.clone(scaleDefaults);\n\t},\n\tgetScaleConstructor: function(type) {\n\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t},\n\tgetScaleDefaults: function(type) {\n\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\treturn this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n\t},\n\tupdateScaleDefaults: function(type, additions) {\n\t\tvar me = this;\n\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\tme.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n\t\t}\n\t},\n\taddScalesToLayout: function(chart) {\n\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\thelpers$1.each(chart.scales, function(scale) {\n\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\tscale.position = scale.options.position;\n\t\t\tscale.weight = scale.options.weight;\n\t\t\tcore_layouts.addBox(chart, scale);\n\t\t});\n\t}\n};\n\nvar valueOrDefault$7 = helpers$1.valueOrDefault;\n\ncore_defaults._set('global', {\n\ttooltips: {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretPadding: 2,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tborderColor: 'rgba(0,0,0,0)',\n\t\tborderWidth: 0,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers$1.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\t\t\t\t\tif (item.label) {\n\t\t\t\t\t\ttitle = item.label;\n\t\t\t\t\t} else if (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers$1.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel += ': ';\n\t\t\t\t}\n\t\t\t\tif (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n\t\t\t\t\tlabel += tooltipItem.value;\n\t\t\t\t} else {\n\t\t\t\t\tlabel += tooltipItem.yLabel;\n\t\t\t\t}\n\t\t\t\treturn label;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chart) {\n\t\t\t\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tlabelTextColor: function() {\n\t\t\t\treturn this._options.bodyFontColor;\n\t\t\t},\n\t\t\tafterLabel: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers$1.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers$1.noop,\n\t\t\tfooter: helpers$1.noop,\n\t\t\tafterFooter: helpers$1.noop\n\t\t}\n\t}\n});\n\nvar positioners = {\n\t/**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t * @function Chart.Tooltip.positioners.average\n\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t * @returns {object} tooltip position\n\t */\n\taverage: function(elements) {\n\t\tif (!elements.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar i, len;\n\t\tvar x = 0;\n\t\tvar y = 0;\n\t\tvar count = 0;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\tx += pos.x;\n\t\t\t\ty += pos.y;\n\t\t\t\t++count;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tx: x / count,\n\t\t\ty: y / count\n\t\t};\n\t},\n\n\t/**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t * @function Chart.Tooltip.positioners.nearest\n\t * @param elements {Chart.Element[]} the tooltip elements\n\t * @param eventPosition {object} the position of the event in canvas coordinates\n\t * @returns {object} the tooltip position\n\t */\n\tnearest: function(elements, eventPosition) {\n\t\tvar x = eventPosition.x;\n\t\tvar y = eventPosition.y;\n\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\tvar i, len, nearestElement;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\tvar d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\tif (d < minDistance) {\n\t\t\t\t\tminDistance = d;\n\t\t\t\t\tnearestElement = el;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (nearestElement) {\n\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\tx = tp.x;\n\t\t\ty = tp.y;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n\tif (toPush) {\n\t\tif (helpers$1.isArray(toPush)) {\n\t\t\t// base = base.concat(toPush);\n\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t} else {\n\t\t\tbase.push(toPush);\n\t\t}\n\t}\n\n\treturn base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {string} value - The value to split by newline.\n * @returns {string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n\tif ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n\t\treturn str.split('\\n');\n\t}\n\treturn str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param element - the chart element (point, arc, bar) to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(element) {\n\tvar xScale = element._xScale;\n\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\tvar index = element._index;\n\tvar datasetIndex = element._datasetIndex;\n\tvar controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\tvar indexScale = controller._getIndexScale();\n\tvar valueScale = controller._getValueScale();\n\n\treturn {\n\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tlabel: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tvalue: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tindex: index,\n\t\tdatasetIndex: datasetIndex,\n\t\tx: element._model.x,\n\t\ty: element._model.y\n\t};\n}\n\n/**\n * Helper to get the reset model for the tooltip\n * @param tooltipOpts {object} the tooltip options\n */\nfunction getBaseModel(tooltipOpts) {\n\tvar globalDefaults = core_defaults.global;\n\n\treturn {\n\t\t// Positioning\n\t\txPadding: tooltipOpts.xPadding,\n\t\tyPadding: tooltipOpts.yPadding,\n\t\txAlign: tooltipOpts.xAlign,\n\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t// Body\n\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t_bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t_bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\tbodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t// Title\n\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t_titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t_titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\ttitleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t// Footer\n\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t_footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t_footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\tfooterFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t// Appearance\n\t\tcaretSize: tooltipOpts.caretSize,\n\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\topacity: 0,\n\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\tdisplayColors: tooltipOpts.displayColors,\n\t\tborderColor: tooltipOpts.borderColor,\n\t\tborderWidth: tooltipOpts.borderWidth\n\t};\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, model) {\n\tvar ctx = tooltip._chart.ctx;\n\n\tvar height = model.yPadding * 2; // Tooltip Padding\n\tvar width = 0;\n\n\t// Count of all lines in the body\n\tvar body = model.body;\n\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t}, 0);\n\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\tvar titleLineCount = model.title.length;\n\tvar footerLineCount = model.footer.length;\n\tvar titleFontSize = model.titleFontSize;\n\tvar bodyFontSize = model.bodyFontSize;\n\tvar footerFontSize = model.footerFontSize;\n\n\theight += titleLineCount * titleFontSize; // Title Lines\n\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\theight += footerLineCount * (footerFontSize); // Footer Lines\n\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t// Title width\n\tvar widthPadding = 0;\n\tvar maxLineWidth = function(line) {\n\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t};\n\n\tctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\thelpers$1.each(model.title, maxLineWidth);\n\n\t// Body width\n\tctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\thelpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t// Body lines may include some extra width due to the color box\n\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\thelpers$1.each(body, function(bodyItem) {\n\t\thelpers$1.each(bodyItem.before, maxLineWidth);\n\t\thelpers$1.each(bodyItem.lines, maxLineWidth);\n\t\thelpers$1.each(bodyItem.after, maxLineWidth);\n\t});\n\n\t// Reset back to 0\n\twidthPadding = 0;\n\n\t// Footer width\n\tctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\thelpers$1.each(model.footer, maxLineWidth);\n\n\t// Add padding\n\twidth += 2 * model.xPadding;\n\n\treturn {\n\t\twidth: width,\n\t\theight: height\n\t};\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(tooltip, size) {\n\tvar model = tooltip._model;\n\tvar chart = tooltip._chart;\n\tvar chartArea = tooltip._chart.chartArea;\n\tvar xAlign = 'center';\n\tvar yAlign = 'center';\n\n\tif (model.y < size.height) {\n\t\tyAlign = 'top';\n\t} else if (model.y > (chart.height - size.height)) {\n\t\tyAlign = 'bottom';\n\t}\n\n\tvar lf, rf; // functions to determine left, right alignment\n\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\tvar midX = (chartArea.left + chartArea.right) / 2;\n\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\tif (yAlign === 'center') {\n\t\tlf = function(x) {\n\t\t\treturn x <= midX;\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x > midX;\n\t\t};\n\t} else {\n\t\tlf = function(x) {\n\t\t\treturn x <= (size.width / 2);\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t};\n\t}\n\n\tolf = function(x) {\n\t\treturn x + size.width + model.caretSize + model.caretPadding > chart.width;\n\t};\n\torf = function(x) {\n\t\treturn x - size.width - model.caretSize - model.caretPadding < 0;\n\t};\n\tyf = function(y) {\n\t\treturn y <= midY ? 'top' : 'bottom';\n\t};\n\n\tif (lf(model.x)) {\n\t\txAlign = 'left';\n\n\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\tif (olf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t} else if (rf(model.x)) {\n\t\txAlign = 'right';\n\n\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\tif (orf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t}\n\n\tvar opts = tooltip._options;\n\treturn {\n\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t};\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(vm, size, alignment, chart) {\n\t// Background Position\n\tvar x = vm.x;\n\tvar y = vm.y;\n\n\tvar caretSize = vm.caretSize;\n\tvar caretPadding = vm.caretPadding;\n\tvar cornerRadius = vm.cornerRadius;\n\tvar xAlign = alignment.xAlign;\n\tvar yAlign = alignment.yAlign;\n\tvar paddingAndSize = caretSize + caretPadding;\n\tvar radiusAndPadding = cornerRadius + caretPadding;\n\n\tif (xAlign === 'right') {\n\t\tx -= size.width;\n\t} else if (xAlign === 'center') {\n\t\tx -= (size.width / 2);\n\t\tif (x + size.width > chart.width) {\n\t\t\tx = chart.width - size.width;\n\t\t}\n\t\tif (x < 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\n\tif (yAlign === 'top') {\n\t\ty += paddingAndSize;\n\t} else if (yAlign === 'bottom') {\n\t\ty -= size.height + paddingAndSize;\n\t} else {\n\t\ty -= (size.height / 2);\n\t}\n\n\tif (yAlign === 'center') {\n\t\tif (xAlign === 'left') {\n\t\t\tx += paddingAndSize;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx -= paddingAndSize;\n\t\t}\n\t} else if (xAlign === 'left') {\n\t\tx -= radiusAndPadding;\n\t} else if (xAlign === 'right') {\n\t\tx += radiusAndPadding;\n\t}\n\n\treturn {\n\t\tx: x,\n\t\ty: y\n\t};\n}\n\nfunction getAlignedX(vm, align) {\n\treturn align === 'center'\n\t\t? vm.x + vm.width / 2\n\t\t: align === 'right'\n\t\t\t? vm.x + vm.width - vm.xPadding\n\t\t\t: vm.x + vm.xPadding;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n\treturn pushOrConcat([], splitNewlines(callback));\n}\n\nvar exports$3 = core_element.extend({\n\tinitialize: function() {\n\t\tthis._model = getBaseModel(this._options);\n\t\tthis._lastActive = [];\n\t},\n\n\t// Get the title\n\t// Args are: (tooltipItem, data)\n\tgetTitle: function() {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\t\tvar callbacks = opts.callbacks;\n\n\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n\t\tvar title = callbacks.title.apply(me, arguments);\n\t\tvar afterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeTitle));\n\t\tlines = pushOrConcat(lines, splitNewlines(title));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n\t\treturn lines;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBeforeBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBody: function(tooltipItems, data) {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\t\tvar bodyItems = [];\n\n\t\thelpers$1.each(tooltipItems, function(tooltipItem) {\n\t\t\tvar bodyItem = {\n\t\t\t\tbefore: [],\n\t\t\t\tlines: [],\n\t\t\t\tafter: []\n\t\t\t};\n\t\t\tpushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\tpushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n\n\t\t\tbodyItems.push(bodyItem);\n\t\t});\n\n\t\treturn bodyItems;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetAfterBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n\t},\n\n\t// Get the footer and beforeFooter and afterFooter lines\n\t// Args are: (tooltipItem, data)\n\tgetFooter: function() {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\n\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeFooter));\n\t\tlines = pushOrConcat(lines, splitNewlines(footer));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n\t\treturn lines;\n\t},\n\n\tupdate: function(changed) {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\n\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t// which breaks any animations.\n\t\tvar existingModel = me._model;\n\t\tvar model = me._model = getBaseModel(opts);\n\t\tvar active = me._active;\n\n\t\tvar data = me._data;\n\n\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\tvar alignment = {\n\t\t\txAlign: existingModel.xAlign,\n\t\t\tyAlign: existingModel.yAlign\n\t\t};\n\t\tvar backgroundPoint = {\n\t\t\tx: existingModel.x,\n\t\t\ty: existingModel.y\n\t\t};\n\t\tvar tooltipSize = {\n\t\t\twidth: existingModel.width,\n\t\t\theight: existingModel.height\n\t\t};\n\t\tvar tooltipPosition = {\n\t\t\tx: existingModel.caretX,\n\t\t\ty: existingModel.caretY\n\t\t};\n\n\t\tvar i, len;\n\n\t\tif (active.length) {\n\t\t\tmodel.opacity = 1;\n\n\t\t\tvar labelColors = [];\n\t\t\tvar labelTextColors = [];\n\t\t\ttooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n\n\t\t\tvar tooltipItems = [];\n\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t}\n\n\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\tif (opts.filter) {\n\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\tif (opts.itemSort) {\n\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Determine colors for boxes\n\t\t\thelpers$1.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n\t\t\t\tlabelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n\t\t\t});\n\n\n\t\t\t// Build the Text Lines\n\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t// Initial positioning and colors\n\t\t\tmodel.x = tooltipPosition.x;\n\t\t\tmodel.y = tooltipPosition.y;\n\t\t\tmodel.caretPadding = opts.caretPadding;\n\t\t\tmodel.labelColors = labelColors;\n\t\t\tmodel.labelTextColors = labelTextColors;\n\n\t\t\t// data points\n\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t// We need to determine alignment of the tooltip\n\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t// Final Size and Position\n\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n\t\t} else {\n\t\t\tmodel.opacity = 0;\n\t\t}\n\n\t\tmodel.xAlign = alignment.xAlign;\n\t\tmodel.yAlign = alignment.yAlign;\n\t\tmodel.x = backgroundPoint.x;\n\t\tmodel.y = backgroundPoint.y;\n\t\tmodel.width = tooltipSize.width;\n\t\tmodel.height = tooltipSize.height;\n\n\t\t// Point where the caret on the tooltip points to\n\t\tmodel.caretX = tooltipPosition.x;\n\t\tmodel.caretY = tooltipPosition.y;\n\n\t\tme._model = model;\n\n\t\tif (changed && opts.custom) {\n\t\t\topts.custom.call(me, model);\n\t\t}\n\n\t\treturn me;\n\t},\n\n\tdrawCaret: function(tooltipPoint, size) {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n\n\t\tctx.lineTo(caretPosition.x1, caretPosition.y1);\n\t\tctx.lineTo(caretPosition.x2, caretPosition.y2);\n\t\tctx.lineTo(caretPosition.x3, caretPosition.y3);\n\t},\n\tgetCaretPosition: function(tooltipPoint, size, vm) {\n\t\tvar x1, x2, x3, y1, y2, y3;\n\t\tvar caretSize = vm.caretSize;\n\t\tvar cornerRadius = vm.cornerRadius;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar ptX = tooltipPoint.x;\n\t\tvar ptY = tooltipPoint.y;\n\t\tvar width = size.width;\n\t\tvar height = size.height;\n\n\t\tif (yAlign === 'center') {\n\t\t\ty2 = ptY + (height / 2);\n\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx1 = ptX;\n\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 + caretSize;\n\t\t\t\ty3 = y2 - caretSize;\n\t\t\t} else {\n\t\t\t\tx1 = ptX + width;\n\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\ty3 = y2 + caretSize;\n\t\t\t}\n\t\t} else {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx2 = ptX + cornerRadius + (caretSize);\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx2 = ptX + width - cornerRadius - caretSize;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else {\n\t\t\t\tx2 = vm.caretX;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t}\n\t\t\tif (yAlign === 'top') {\n\t\t\t\ty1 = ptY;\n\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t} else {\n\t\t\t\ty1 = ptY + height;\n\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t\t// invert drawing order\n\t\t\t\tvar tmp = x3;\n\t\t\t\tx3 = x1;\n\t\t\t\tx1 = tmp;\n\t\t\t}\n\t\t}\n\t\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\n\t},\n\n\tdrawTitle: function(pt, vm, ctx) {\n\t\tvar title = vm.title;\n\n\t\tif (title.length) {\n\t\t\tpt.x = getAlignedX(vm, vm._titleAlign);\n\n\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tvar titleFontSize = vm.titleFontSize;\n\t\t\tvar titleSpacing = vm.titleSpacing;\n\n\t\t\tctx.fillStyle = vm.titleFontColor;\n\t\t\tctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\tvar i, len;\n\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tdrawBody: function(pt, vm, ctx) {\n\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\tvar bodySpacing = vm.bodySpacing;\n\t\tvar bodyAlign = vm._bodyAlign;\n\t\tvar body = vm.body;\n\t\tvar drawColorBoxes = vm.displayColors;\n\t\tvar labelColors = vm.labelColors;\n\t\tvar xLinePadding = 0;\n\t\tvar colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n\t\tvar textColor;\n\n\t\tctx.textAlign = bodyAlign;\n\t\tctx.textBaseline = 'top';\n\t\tctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\tpt.x = getAlignedX(vm, bodyAlign);\n\n\t\t// Before Body\n\t\tvar fillLineOfText = function(line) {\n\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t};\n\n\t\t// Before body lines\n\t\tctx.fillStyle = vm.bodyFontColor;\n\t\thelpers$1.each(vm.beforeBody, fillLineOfText);\n\n\t\txLinePadding = drawColorBoxes && bodyAlign !== 'right'\n\t\t\t? bodyAlign === 'center' ? (bodyFontSize / 2 + 1) : (bodyFontSize + 2)\n\t\t\t: 0;\n\n\t\t// Draw body lines now\n\t\thelpers$1.each(body, function(bodyItem, i) {\n\t\t\ttextColor = vm.labelTextColors[i];\n\t\t\tctx.fillStyle = textColor;\n\t\t\thelpers$1.each(bodyItem.before, fillLineOfText);\n\n\t\t\thelpers$1.each(bodyItem.lines, function(line) {\n\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\tctx.fillStyle = vm.legendColorBackground;\n\t\t\t\t\tctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Border\n\t\t\t\t\tctx.lineWidth = 1;\n\t\t\t\t\tctx.strokeStyle = labelColors[i].borderColor;\n\t\t\t\t\tctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Inner square\n\t\t\t\t\tctx.fillStyle = labelColors[i].backgroundColor;\n\t\t\t\t\tctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t}\n\n\t\t\t\tfillLineOfText(line);\n\t\t\t});\n\n\t\t\thelpers$1.each(bodyItem.after, fillLineOfText);\n\t\t});\n\n\t\t// Reset back to 0 for after body\n\t\txLinePadding = 0;\n\n\t\t// After body lines\n\t\thelpers$1.each(vm.afterBody, fillLineOfText);\n\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t},\n\n\tdrawFooter: function(pt, vm, ctx) {\n\t\tvar footer = vm.footer;\n\n\t\tif (footer.length) {\n\t\t\tpt.x = getAlignedX(vm, vm._footerAlign);\n\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tctx.fillStyle = vm.footerFontColor;\n\t\t\tctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\thelpers$1.each(footer, function(line) {\n\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t});\n\t\t}\n\t},\n\n\tdrawBackground: function(pt, vm, ctx, tooltipSize) {\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = vm.borderWidth;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar x = pt.x;\n\t\tvar y = pt.y;\n\t\tvar width = tooltipSize.width;\n\t\tvar height = tooltipSize.height;\n\t\tvar radius = vm.cornerRadius;\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(x + radius, y);\n\t\tif (yAlign === 'top') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width - radius, y);\n\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\tif (yAlign === 'center' && xAlign === 'right') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width, y + height - radius);\n\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\tif (yAlign === 'bottom') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + radius, y + height);\n\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\tif (yAlign === 'center' && xAlign === 'left') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x, y + radius);\n\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\tctx.closePath();\n\n\t\tctx.fill();\n\n\t\tif (vm.borderWidth > 0) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\n\t\tif (vm.opacity === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar tooltipSize = {\n\t\t\twidth: vm.width,\n\t\t\theight: vm.height\n\t\t};\n\t\tvar pt = {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\n\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t// Truthy/falsey value for empty tooltip\n\t\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n\t\tif (this._options.enabled && hasTooltipContent) {\n\t\t\tctx.save();\n\t\t\tctx.globalAlpha = opacity;\n\n\t\t\t// Draw Background\n\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize);\n\n\t\t\t// Draw Title, Body, and Footer\n\t\t\tpt.y += vm.yPadding;\n\n\t\t\t// Titles\n\t\t\tthis.drawTitle(pt, vm, ctx);\n\n\t\t\t// Body\n\t\t\tthis.drawBody(pt, vm, ctx);\n\n\t\t\t// Footer\n\t\t\tthis.drawFooter(pt, vm, ctx);\n\n\t\t\tctx.restore();\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @returns {boolean} true if the tooltip changed\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar options = me._options;\n\t\tvar changed = false;\n\n\t\tme._lastActive = me._lastActive || [];\n\n\t\t// Find Active Elements for tooltips\n\t\tif (e.type === 'mouseout') {\n\t\t\tme._active = [];\n\t\t} else {\n\t\t\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n\t\t}\n\n\t\t// Remember Last Actives\n\t\tchanged = !helpers$1.arrayEquals(me._active, me._lastActive);\n\n\t\t// Only handle target event on tooltip change\n\t\tif (changed) {\n\t\t\tme._lastActive = me._active;\n\n\t\t\tif (options.enabled || options.custom) {\n\t\t\t\tme._eventPosition = {\n\t\t\t\t\tx: e.x,\n\t\t\t\t\ty: e.y\n\t\t\t\t};\n\n\t\t\t\tme.update(true);\n\t\t\t\tme.pivot();\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\n/**\n * @namespace Chart.Tooltip.positioners\n */\nvar positioners_1 = positioners;\n\nvar core_tooltip = exports$3;\ncore_tooltip.positioners = positioners_1;\n\nvar valueOrDefault$8 = helpers$1.valueOrDefault;\n\ncore_defaults._set('global', {\n\telements: {},\n\tevents: [\n\t\t'mousemove',\n\t\t'mouseout',\n\t\t'click',\n\t\t'touchstart',\n\t\t'touchmove'\n\t],\n\thover: {\n\t\tonHover: null,\n\t\tmode: 'nearest',\n\t\tintersect: true,\n\t\tanimationDuration: 400\n\t},\n\tonClick: null,\n\tmaintainAspectRatio: true,\n\tresponsive: true,\n\tresponsiveAnimationDuration: 0\n});\n\n/**\n * Recursively merge the given config objects representing the `scales` option\n * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n * returns a deep copy of the result, thus doesn't alter inputs.\n */\nfunction mergeScaleConfig(/* config objects ... */) {\n\treturn helpers$1.merge({}, [].slice.call(arguments), {\n\t\tmerger: function(key, target, source, options) {\n\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\tvar slen = source[key].length;\n\t\t\t\tvar i, type, scale;\n\n\t\t\t\tif (!target[key]) {\n\t\t\t\t\ttarget[key] = [];\n\t\t\t\t}\n\n\t\t\t\tfor (i = 0; i < slen; ++i) {\n\t\t\t\t\tscale = source[key][i];\n\t\t\t\t\ttype = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n\t\t\t\t\tif (i >= target[key].length) {\n\t\t\t\t\t\ttarget[key].push({});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\n\t\t\t\t\t\t// new/untyped scale or type changed: let's apply the new defaults\n\t\t\t\t\t\t// then merge source scale to correctly overwrite the defaults.\n\t\t\t\t\t\thelpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// scales type are the same\n\t\t\t\t\t\thelpers$1.merge(target[key][i], scale);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thelpers$1._merger(key, target, source, options);\n\t\t\t}\n\t\t}\n\t});\n}\n\n/**\n * Recursively merge the given config objects as the root options by handling\n * default scale options for the `scales` and `scale` properties, then returns\n * a deep copy of the result, thus doesn't alter inputs.\n */\nfunction mergeConfig(/* config objects ... */) {\n\treturn helpers$1.merge({}, [].slice.call(arguments), {\n\t\tmerger: function(key, target, source, options) {\n\t\t\tvar tval = target[key] || {};\n\t\t\tvar sval = source[key];\n\n\t\t\tif (key === 'scales') {\n\t\t\t\t// scale config merging is complex. Add our own function here for that\n\t\t\t\ttarget[key] = mergeScaleConfig(tval, sval);\n\t\t\t} else if (key === 'scale') {\n\t\t\t\t// used in polar area & radar charts since there is only one scale\n\t\t\t\ttarget[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n\t\t\t} else {\n\t\t\t\thelpers$1._merger(key, target, source, options);\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction initConfig(config) {\n\tconfig = config || {};\n\n\t// Do NOT use mergeConfig for the data object because this method merges arrays\n\t// and so would change references to labels and datasets, preventing data updates.\n\tvar data = config.data = config.data || {};\n\tdata.datasets = data.datasets || [];\n\tdata.labels = data.labels || [];\n\n\tconfig.options = mergeConfig(\n\t\tcore_defaults.global,\n\t\tcore_defaults[config.type],\n\t\tconfig.options || {});\n\n\treturn config;\n}\n\nfunction updateConfig(chart) {\n\tvar newOptions = chart.options;\n\n\thelpers$1.each(chart.scales, function(scale) {\n\t\tcore_layouts.removeBox(chart, scale);\n\t});\n\n\tnewOptions = mergeConfig(\n\t\tcore_defaults.global,\n\t\tcore_defaults[chart.config.type],\n\t\tnewOptions);\n\n\tchart.options = chart.config.options = newOptions;\n\tchart.ensureScalesHaveIDs();\n\tchart.buildOrUpdateScales();\n\n\t// Tooltip\n\tchart.tooltip._options = newOptions.tooltips;\n\tchart.tooltip.initialize();\n}\n\nfunction positionIsHorizontal(position) {\n\treturn position === 'top' || position === 'bottom';\n}\n\nvar Chart = function(item, config) {\n\tthis.construct(item, config);\n\treturn this;\n};\n\nhelpers$1.extend(Chart.prototype, /** @lends Chart */ {\n\t/**\n\t * @private\n\t */\n\tconstruct: function(item, config) {\n\t\tvar me = this;\n\n\t\tconfig = initConfig(config);\n\n\t\tvar context = platform.acquireContext(item, config);\n\t\tvar canvas = context && context.canvas;\n\t\tvar height = canvas && canvas.height;\n\t\tvar width = canvas && canvas.width;\n\n\t\tme.id = helpers$1.uid();\n\t\tme.ctx = context;\n\t\tme.canvas = canvas;\n\t\tme.config = config;\n\t\tme.width = width;\n\t\tme.height = height;\n\t\tme.aspectRatio = height ? width / height : null;\n\t\tme.options = config.options;\n\t\tme._bufferedRender = false;\n\n\t\t/**\n\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n\t\t * the \"instance\" still need to be defined since it might be called from plugins.\n\t\t * @prop Chart#chart\n\t\t * @deprecated since version 2.6.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tme.chart = me;\n\t\tme.controller = me; // chart.chart.controller #inception\n\n\t\t// Add the chart instance to the global namespace\n\t\tChart.instances[me.id] = me;\n\n\t\t// Define alias to the config data: `chart.data === chart.config.data`\n\t\tObject.defineProperty(me, 'data', {\n\t\t\tget: function() {\n\t\t\t\treturn me.config.data;\n\t\t\t},\n\t\t\tset: function(value) {\n\t\t\t\tme.config.data = value;\n\t\t\t}\n\t\t});\n\n\t\tif (!context || !canvas) {\n\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\treturn;\n\t\t}\n\n\t\tme.initialize();\n\t\tme.update();\n\t},\n\n\t/**\n\t * @private\n\t */\n\tinitialize: function() {\n\t\tvar me = this;\n\n\t\t// Before init plugin notification\n\t\tcore_plugins.notify(me, 'beforeInit');\n\n\t\thelpers$1.retinaScale(me, me.options.devicePixelRatio);\n\n\t\tme.bindEvents();\n\n\t\tif (me.options.responsive) {\n\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\tme.resize(true);\n\t\t}\n\n\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\tme.ensureScalesHaveIDs();\n\t\tme.buildOrUpdateScales();\n\t\tme.initToolTip();\n\n\t\t// After init plugin notification\n\t\tcore_plugins.notify(me, 'afterInit');\n\n\t\treturn me;\n\t},\n\n\tclear: function() {\n\t\thelpers$1.canvas.clear(this);\n\t\treturn this;\n\t},\n\n\tstop: function() {\n\t\t// Stops any current animation loop occurring\n\t\tcore_animations.cancelAnimation(this);\n\t\treturn this;\n\t},\n\n\tresize: function(silent) {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tvar canvas = me.canvas;\n\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\n\t\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\t\tvar newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n\t\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n\t\tif (me.width === newWidth && me.height === newHeight) {\n\t\t\treturn;\n\t\t}\n\n\t\tcanvas.width = me.width = newWidth;\n\t\tcanvas.height = me.height = newHeight;\n\t\tcanvas.style.width = newWidth + 'px';\n\t\tcanvas.style.height = newHeight + 'px';\n\n\t\thelpers$1.retinaScale(me, options.devicePixelRatio);\n\n\t\tif (!silent) {\n\t\t\t// Notify any plugins about the resize\n\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\tcore_plugins.notify(me, 'resize', [newSize]);\n\n\t\t\t// Notify of resize\n\t\t\tif (options.onResize) {\n\t\t\t\toptions.onResize(me, newSize);\n\t\t\t}\n\n\t\t\tme.stop();\n\t\t\tme.update({\n\t\t\t\tduration: options.responsiveAnimationDuration\n\t\t\t});\n\t\t}\n\t},\n\n\tensureScalesHaveIDs: function() {\n\t\tvar options = this.options;\n\t\tvar scalesOptions = options.scales || {};\n\t\tvar scaleOptions = options.scale;\n\n\t\thelpers$1.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t});\n\n\t\thelpers$1.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t});\n\n\t\tif (scaleOptions) {\n\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t}\n\t},\n\n\t/**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n\tbuildOrUpdateScales: function() {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tvar scales = me.scales || {};\n\t\tvar items = [];\n\t\tvar updated = Object.keys(scales).reduce(function(obj, id) {\n\t\t\tobj[id] = false;\n\t\t\treturn obj;\n\t\t}, {});\n\n\t\tif (options.scales) {\n\t\t\titems = items.concat(\n\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n\t\t\t\t}),\n\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\n\t\tif (options.scale) {\n\t\t\titems.push({\n\t\t\t\toptions: options.scale,\n\t\t\t\tdtype: 'radialLinear',\n\t\t\t\tisDefault: true,\n\t\t\t\tdposition: 'chartArea'\n\t\t\t});\n\t\t}\n\n\t\thelpers$1.each(items, function(item) {\n\t\t\tvar scaleOptions = item.options;\n\t\t\tvar id = scaleOptions.id;\n\t\t\tvar scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n\t\t\t\tscaleOptions.position = item.dposition;\n\t\t\t}\n\n\t\t\tupdated[id] = true;\n\t\t\tvar scale = null;\n\t\t\tif (id in scales && scales[id].type === scaleType) {\n\t\t\t\tscale = scales[id];\n\t\t\t\tscale.options = scaleOptions;\n\t\t\t\tscale.ctx = me.ctx;\n\t\t\t\tscale.chart = me;\n\t\t\t} else {\n\t\t\t\tvar scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\t\t\t\tif (!scaleClass) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tscale = new scaleClass({\n\t\t\t\t\tid: id,\n\t\t\t\t\ttype: scaleType,\n\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\tctx: me.ctx,\n\t\t\t\t\tchart: me\n\t\t\t\t});\n\t\t\t\tscales[scale.id] = scale;\n\t\t\t}\n\n\t\t\tscale.mergeTicksOptions();\n\n\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\tif (item.isDefault) {\n\t\t\t\tme.scale = scale;\n\t\t\t}\n\t\t});\n\t\t// clear up discarded scales\n\t\thelpers$1.each(updated, function(hasUpdated, id) {\n\t\t\tif (!hasUpdated) {\n\t\t\t\tdelete scales[id];\n\t\t\t}\n\t\t});\n\n\t\tme.scales = scales;\n\n\t\tcore_scaleService.addScalesToLayout(this);\n\t},\n\n\tbuildOrUpdateControllers: function() {\n\t\tvar me = this;\n\t\tvar newControllers = [];\n\n\t\thelpers$1.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\tvar type = dataset.type || me.config.type;\n\n\t\t\tif (meta.type && meta.type !== type) {\n\t\t\t\tme.destroyDatasetMeta(datasetIndex);\n\t\t\t\tmeta = me.getDatasetMeta(datasetIndex);\n\t\t\t}\n\t\t\tmeta.type = type;\n\n\t\t\tif (meta.controller) {\n\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\tmeta.controller.linkScales();\n\t\t\t} else {\n\t\t\t\tvar ControllerClass = controllers[meta.type];\n\t\t\t\tif (ControllerClass === undefined) {\n\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\n\t\t\t\t}\n\n\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\n\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t}\n\t\t}, me);\n\n\t\treturn newControllers;\n\t},\n\n\t/**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n\tresetElements: function() {\n\t\tvar me = this;\n\t\thelpers$1.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t}, me);\n\t},\n\n\t/**\n\t* Resets the chart back to it's state before the initial animation\n\t*/\n\treset: function() {\n\t\tthis.resetElements();\n\t\tthis.tooltip.initialize();\n\t},\n\n\tupdate: function(config) {\n\t\tvar me = this;\n\n\t\tif (!config || typeof config !== 'object') {\n\t\t\t// backwards compatibility\n\t\t\tconfig = {\n\t\t\t\tduration: config,\n\t\t\t\tlazy: arguments[1]\n\t\t\t};\n\t\t}\n\n\t\tupdateConfig(me);\n\n\t\t// plugins options references might have change, let's invalidate the cache\n\t\t// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t\tcore_plugins._invalidate(me);\n\n\t\tif (core_plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// In case the entire data object changed\n\t\tme.tooltip._data = me.data;\n\n\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t// Make sure all dataset controllers have correct meta data counts\n\t\thelpers$1.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t}, me);\n\n\t\tme.updateLayout();\n\n\t\t// Can only reset the new controllers after the scales have been updated\n\t\tif (me.options.animation && me.options.animation.duration) {\n\t\t\thelpers$1.each(newControllers, function(controller) {\n\t\t\t\tcontroller.reset();\n\t\t\t});\n\t\t}\n\n\t\tme.updateDatasets();\n\n\t\t// Need to reset tooltip in case it is displayed with elements that are removed\n\t\t// after update.\n\t\tme.tooltip.initialize();\n\n\t\t// Last active contains items that were previously in the tooltip.\n\t\t// When we reset the tooltip, we need to clear it\n\t\tme.lastActive = [];\n\n\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\tcore_plugins.notify(me, 'afterUpdate');\n\n\t\tif (me._bufferedRender) {\n\t\t\tme._bufferedRequest = {\n\t\t\t\tduration: config.duration,\n\t\t\t\teasing: config.easing,\n\t\t\t\tlazy: config.lazy\n\t\t\t};\n\t\t} else {\n\t\t\tme.render(config);\n\t\t}\n\t},\n\n\t/**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n\tupdateLayout: function() {\n\t\tvar me = this;\n\n\t\tif (core_plugins.notify(me, 'beforeLayout') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tcore_layouts.update(this, this.width, this.height);\n\n\t\t/**\n\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t * @method IPlugin#afterScaleUpdate\n\t\t * @deprecated since version 2.5.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tcore_plugins.notify(me, 'afterScaleUpdate');\n\t\tcore_plugins.notify(me, 'afterLayout');\n\t},\n\n\t/**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n\tupdateDatasets: function() {\n\t\tvar me = this;\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\tme.updateDataset(i);\n\t\t}\n\n\t\tcore_plugins.notify(me, 'afterDatasetsUpdate');\n\t},\n\n\t/**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n\tupdateDataset: function(index) {\n\t\tvar me = this;\n\t\tvar meta = me.getDatasetMeta(index);\n\t\tvar args = {\n\t\t\tmeta: meta,\n\t\t\tindex: index\n\t\t};\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tmeta.controller.update();\n\n\t\tcore_plugins.notify(me, 'afterDatasetUpdate', [args]);\n\t},\n\n\trender: function(config) {\n\t\tvar me = this;\n\n\t\tif (!config || typeof config !== 'object') {\n\t\t\t// backwards compatibility\n\t\t\tconfig = {\n\t\t\t\tduration: config,\n\t\t\t\tlazy: arguments[1]\n\t\t\t};\n\t\t}\n\n\t\tvar animationOptions = me.options.animation;\n\t\tvar duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n\t\tvar lazy = config.lazy;\n\n\t\tif (core_plugins.notify(me, 'beforeRender') === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar onComplete = function(animation) {\n\t\t\tcore_plugins.notify(me, 'afterRender');\n\t\t\thelpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n\t\t};\n\n\t\tif (animationOptions && duration) {\n\t\t\tvar animation = new core_animation({\n\t\t\t\tnumSteps: duration / 16.66, // 60 fps\n\t\t\t\teasing: config.easing || animationOptions.easing,\n\n\t\t\t\trender: function(chart, animationObject) {\n\t\t\t\t\tvar easingFunction = helpers$1.easing.effects[animationObject.easing];\n\t\t\t\t\tvar currentStep = animationObject.currentStep;\n\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\n\n\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n\t\t\t\t},\n\n\t\t\t\tonAnimationProgress: animationOptions.onProgress,\n\t\t\t\tonAnimationComplete: onComplete\n\t\t\t});\n\n\t\t\tcore_animations.addAnimation(me, animation, duration, lazy);\n\t\t} else {\n\t\t\tme.draw();\n\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\n\t\t\tonComplete(new core_animation({numSteps: 0, chart: me}));\n\t\t}\n\n\t\treturn me;\n\t},\n\n\tdraw: function(easingValue) {\n\t\tvar me = this;\n\n\t\tme.clear();\n\n\t\tif (helpers$1.isNullOrUndef(easingValue)) {\n\t\t\teasingValue = 1;\n\t\t}\n\n\t\tme.transition(easingValue);\n\n\t\tif (me.width <= 0 || me.height <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Draw all the scales\n\t\thelpers$1.each(me.boxes, function(box) {\n\t\t\tbox.draw(me.chartArea);\n\t\t}, me);\n\n\t\tme.drawDatasets(easingValue);\n\t\tme._drawTooltip(easingValue);\n\n\t\tcore_plugins.notify(me, 'afterDraw', [easingValue]);\n\t},\n\n\t/**\n\t * @private\n\t */\n\ttransition: function(easingValue) {\n\t\tvar me = this;\n\n\t\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\n\t\t\t}\n\t\t}\n\n\t\tme.tooltip.transition(easingValue);\n\t},\n\n\t/**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n\tdrawDatasets: function(easingValue) {\n\t\tvar me = this;\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Draw datasets reversed to support proper line stacking\n\t\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\tme.drawDataset(i, easingValue);\n\t\t\t}\n\t\t}\n\n\t\tcore_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t},\n\n\t/**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n\tdrawDataset: function(index, easingValue) {\n\t\tvar me = this;\n\t\tvar meta = me.getDatasetMeta(index);\n\t\tvar args = {\n\t\t\tmeta: meta,\n\t\t\tindex: index,\n\t\t\teasingValue: easingValue\n\t\t};\n\n\t\tif (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tmeta.controller.draw(easingValue);\n\n\t\tcore_plugins.notify(me, 'afterDatasetDraw', [args]);\n\t},\n\n\t/**\n\t * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n\t * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n\t * @private\n\t */\n\t_drawTooltip: function(easingValue) {\n\t\tvar me = this;\n\t\tvar tooltip = me.tooltip;\n\t\tvar args = {\n\t\t\ttooltip: tooltip,\n\t\t\teasingValue: easingValue\n\t\t};\n\n\t\tif (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\ttooltip.draw();\n\n\t\tcore_plugins.notify(me, 'afterTooltipDraw', [args]);\n\t},\n\n\t/**\n\t * Get the single element that was clicked on\n\t * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t */\n\tgetElementAtEvent: function(e) {\n\t\treturn core_interaction.modes.single(this, e);\n\t},\n\n\tgetElementsAtEvent: function(e) {\n\t\treturn core_interaction.modes.label(this, e, {intersect: true});\n\t},\n\n\tgetElementsAtXAxis: function(e) {\n\t\treturn core_interaction.modes['x-axis'](this, e, {intersect: true});\n\t},\n\n\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\tvar method = core_interaction.modes[mode];\n\t\tif (typeof method === 'function') {\n\t\t\treturn method(this, e, options);\n\t\t}\n\n\t\treturn [];\n\t},\n\n\tgetDatasetAtEvent: function(e) {\n\t\treturn core_interaction.modes.dataset(this, e, {intersect: true});\n\t},\n\n\tgetDatasetMeta: function(datasetIndex) {\n\t\tvar me = this;\n\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\tif (!dataset._meta) {\n\t\t\tdataset._meta = {};\n\t\t}\n\n\t\tvar meta = dataset._meta[me.id];\n\t\tif (!meta) {\n\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\ttype: null,\n\t\t\t\tdata: [],\n\t\t\t\tdataset: null,\n\t\t\t\tcontroller: null,\n\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\txAxisID: null,\n\t\t\t\tyAxisID: null\n\t\t\t};\n\t\t}\n\n\t\treturn meta;\n\t},\n\n\tgetVisibleDatasetCount: function() {\n\t\tvar count = 0;\n\t\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\treturn count;\n\t},\n\n\tisDatasetVisible: function(datasetIndex) {\n\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t},\n\n\tgenerateLegend: function() {\n\t\treturn this.options.legendCallback(this);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tdestroyDatasetMeta: function(datasetIndex) {\n\t\tvar id = this.id;\n\t\tvar dataset = this.data.datasets[datasetIndex];\n\t\tvar meta = dataset._meta && dataset._meta[id];\n\n\t\tif (meta) {\n\t\t\tmeta.controller.destroy();\n\t\t\tdelete dataset._meta[id];\n\t\t}\n\t},\n\n\tdestroy: function() {\n\t\tvar me = this;\n\t\tvar canvas = me.canvas;\n\t\tvar i, ilen;\n\n\t\tme.stop();\n\n\t\t// dataset controllers need to cleanup associated data\n\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\tme.destroyDatasetMeta(i);\n\t\t}\n\n\t\tif (canvas) {\n\t\t\tme.unbindEvents();\n\t\t\thelpers$1.canvas.clear(me);\n\t\t\tplatform.releaseContext(me.ctx);\n\t\t\tme.canvas = null;\n\t\t\tme.ctx = null;\n\t\t}\n\n\t\tcore_plugins.notify(me, 'destroy');\n\n\t\tdelete Chart.instances[me.id];\n\t},\n\n\ttoBase64Image: function() {\n\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\n\t},\n\n\tinitToolTip: function() {\n\t\tvar me = this;\n\t\tme.tooltip = new core_tooltip({\n\t\t\t_chart: me,\n\t\t\t_chartInstance: me, // deprecated, backward compatibility\n\t\t\t_data: me.data,\n\t\t\t_options: me.options.tooltips\n\t\t}, me);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tbindEvents: function() {\n\t\tvar me = this;\n\t\tvar listeners = me._listeners = {};\n\t\tvar listener = function() {\n\t\t\tme.eventHandler.apply(me, arguments);\n\t\t};\n\n\t\thelpers$1.each(me.options.events, function(type) {\n\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\tlisteners[type] = listener;\n\t\t});\n\n\t\t// Elements used to detect size change should not be injected for non responsive charts.\n\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\tif (me.options.responsive) {\n\t\t\tlistener = function() {\n\t\t\t\tme.resize();\n\t\t\t};\n\n\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\tlisteners.resize = listener;\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tunbindEvents: function() {\n\t\tvar me = this;\n\t\tvar listeners = me._listeners;\n\t\tif (!listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tdelete me._listeners;\n\t\thelpers$1.each(listeners, function(listener, type) {\n\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t});\n\t},\n\n\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n\t\tvar element, i, ilen;\n\n\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\n\t\t\telement = elements[i];\n\t\t\tif (element) {\n\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\teventHandler: function(e) {\n\t\tvar me = this;\n\t\tvar tooltip = me.tooltip;\n\n\t\tif (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Buffer any update calls so that renders do not occur\n\t\tme._bufferedRender = true;\n\t\tme._bufferedRequest = null;\n\n\t\tvar changed = me.handleEvent(e);\n\t\t// for smooth tooltip animations issue #4989\n\t\t// the tooltip should be the source of change\n\t\t// Animation check workaround:\n\t\t// tooltip._start will be null when tooltip isn't animating\n\t\tif (tooltip) {\n\t\t\tchanged = tooltip._start\n\t\t\t\t? tooltip.handleEvent(e)\n\t\t\t\t: changed | tooltip.handleEvent(e);\n\t\t}\n\n\t\tcore_plugins.notify(me, 'afterEvent', [e]);\n\n\t\tvar bufferedRequest = me._bufferedRequest;\n\t\tif (bufferedRequest) {\n\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\tme.render(bufferedRequest);\n\t\t} else if (changed && !me.animating) {\n\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\tme.stop();\n\n\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\tme.render({\n\t\t\t\tduration: me.options.hover.animationDuration,\n\t\t\t\tlazy: true\n\t\t\t});\n\t\t}\n\n\t\tme._bufferedRender = false;\n\t\tme._bufferedRequest = null;\n\n\t\treturn me;\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event the event to handle\n\t * @return {boolean} true if the chart needs to re-render\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar options = me.options || {};\n\t\tvar hoverOptions = options.hover;\n\t\tvar changed = false;\n\n\t\tme.lastActive = me.lastActive || [];\n\n\t\t// Find Active Elements for hover and tooltips\n\t\tif (e.type === 'mouseout') {\n\t\t\tme.active = [];\n\t\t} else {\n\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t}\n\n\t\t// Invoke onHover hook\n\t\t// Need to call with native event here to not break backwards compatibility\n\t\thelpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\tif (options.onClick) {\n\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t}\n\t\t}\n\n\t\t// Remove styling for last active (even if it may still be active)\n\t\tif (me.lastActive.length) {\n\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t}\n\n\t\t// Built in hover styling\n\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t}\n\n\t\tchanged = !helpers$1.arrayEquals(me.active, me.lastActive);\n\n\t\t// Remember Last Actives\n\t\tme.lastActive = me.active;\n\n\t\treturn changed;\n\t}\n});\n\n/**\n * NOTE(SB) We actually don't use this container anymore but we need to keep it\n * for backward compatibility. Though, it can still be useful for plugins that\n * would need to work on multiple charts?!\n */\nChart.instances = {};\n\nvar core_controller = Chart;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart instead.\n * @class Chart.Controller\n * @deprecated since version 2.6\n * @todo remove at version 3\n * @private\n */\nChart.Controller = Chart;\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart\n * @deprecated since version 2.8\n * @todo remove at version 3\n * @private\n */\nChart.types = {};\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart.helpers.configMerge\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.configMerge = mergeConfig;\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart.helpers.scaleMerge\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nhelpers$1.scaleMerge = mergeScaleConfig;\n\nvar core_helpers = function() {\n\n\t// -- Basic js utility methods\n\n\thelpers$1.where = function(collection, filterCallback) {\n\t\tif (helpers$1.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers$1.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers$1.findIndex = Array.prototype.findIndex ?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined ? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers$1.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (helpers$1.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers$1.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (helpers$1.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t// -- Math methods\n\thelpers$1.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers$1.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers$1.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers$1.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers$1.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers$1.sign = Math.sign ?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers$1.log10 = Math.log10 ?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tvar exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n\t\t\t// Check for whole powers of 10,\n\t\t\t// which due to floating point rounding error should be corrected.\n\t\t\tvar powerOf10 = Math.round(exponent);\n\t\t\tvar isPowerOf10 = x === Math.pow(10, powerOf10);\n\n\t\t\treturn isPowerOf10 ? powerOf10 : exponent;\n\t\t};\n\thelpers$1.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers$1.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\n\t/**\n\t * Returns the number of decimal places\n\t * i.e. the number of digits after the decimal point, of the value of this Number.\n\t * @param {number} x - A number.\n\t * @returns {number} The number of decimal places.\n\t * @private\n\t */\n\thelpers$1._decimalPlaces = function(x) {\n\t\tif (!helpers$1.isFinite(x)) {\n\t\t\treturn;\n\t\t}\n\t\tvar e = 1;\n\t\tvar p = 0;\n\t\twhile (Math.round(x * e) / e !== x) {\n\t\t\te *= 10;\n\t\t\tp++;\n\t\t}\n\t\treturn p;\n\t};\n\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers$1.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x;\n\t\tvar distanceFromYCenter = anglePoint.y - centrePoint.y;\n\t\tvar radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers$1.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\n\t/**\n\t * Provided for backward compatibility, not available anymore\n\t * @function Chart.helpers.aliasPixel\n\t * @deprecated since version 2.8.0\n\t * @todo remove at version 3\n\t */\n\thelpers$1.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\n\t/**\n\t * Returns the aligned pixel value to avoid anti-aliasing blur\n\t * @param {Chart} chart - The chart instance.\n\t * @param {number} pixel - A pixel value.\n\t * @param {number} width - The width of the element.\n\t * @returns {number} The aligned pixel value.\n\t * @private\n\t */\n\thelpers$1._alignPixel = function(chart, pixel, width) {\n\t\tvar devicePixelRatio = chart.currentDevicePixelRatio;\n\t\tvar halfWidth = width / 2;\n\t\treturn Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n\t};\n\n\thelpers$1.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint;\n\t\tvar current = middlePoint;\n\t\tvar next = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers$1.EPSILON = Number.EPSILON || 1e-14;\n\thelpers$1.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers$1.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers$1.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers$1.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers$1.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers$1.requestAnimFrame = (function() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn function(callback) {\n\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers$1.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt;\n\t\tvar canvas = evt.target || evt.srcElement;\n\t\tvar boundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof styleValue === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t/**\n\t * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n\t * @param {HTMLElement} domNode - the node to check the constraint on\n\t * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n\t * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n\t * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n\t */\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = helpers$1._getParentNode(domNode);\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers$1.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers$1.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\t/**\n\t * @private\n \t */\n\thelpers$1._calculatePadding = function(container, padding, parentDimension) {\n\t\tpadding = helpers$1.getStyle(container, padding);\n\n\t\treturn padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n\t};\n\t/**\n\t * @private\n\t */\n\thelpers$1._getParentNode = function(domNode) {\n\t\tvar parent = domNode.parentNode;\n\t\tif (parent && parent.toString() === '[object ShadowRoot]') {\n\t\t\tparent = parent.host;\n\t\t}\n\t\treturn parent;\n\t};\n\thelpers$1.getMaximumWidth = function(domNode) {\n\t\tvar container = helpers$1._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientWidth;\n\t\t}\n\n\t\tvar clientWidth = container.clientWidth;\n\t\tvar paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\t\tvar paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n\t\tvar w = clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers$1.getConstraintWidth(domNode);\n\t\treturn isNaN(cw) ? w : Math.min(w, cw);\n\t};\n\thelpers$1.getMaximumHeight = function(domNode) {\n\t\tvar container = helpers$1._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientHeight;\n\t\t}\n\n\t\tvar clientHeight = container.clientHeight;\n\t\tvar paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\t\tvar paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n\t\tvar h = clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers$1.getConstraintHeight(domNode);\n\t\treturn isNaN(ch) ? h : Math.min(h, ch);\n\t};\n\thelpers$1.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers$1.retinaScale = function(chart, forceRatio) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = forceRatio || (typeof window !== 'undefined' && window.devicePixelRatio) || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tif (!canvas.style.height && !canvas.style.width) {\n\t\t\tcanvas.style.height = height + 'px';\n\t\t\tcanvas.style.width = width + 'px';\n\t\t}\n\t};\n\t// -- Canvas methods\n\thelpers$1.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers$1.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers$1.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers$1.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers$1.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers$1.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers$1.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers$1.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers$1.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers$1.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\n\thelpers$1.color = !chartjsColor ?\n\t\tfunction(value) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn value;\n\t\t} :\n\t\tfunction(value) {\n\t\t\t/* global CanvasGradient */\n\t\t\tif (value instanceof CanvasGradient) {\n\t\t\t\tvalue = core_defaults.global.defaultColor;\n\t\t\t}\n\n\t\t\treturn chartjsColor(value);\n\t\t};\n\n\thelpers$1.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient) ?\n\t\t\tcolorValue :\n\t\t\thelpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n\nfunction abstract() {\n\tthrow new Error(\n\t\t'This method is not implemented: either no adapter can ' +\n\t\t'be found or an incomplete integration was provided.'\n\t);\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\n\n/**\n * Currently supported unit string values.\n * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n * @memberof Chart._adapters._date\n * @name Unit\n */\n\n/**\n * @class\n */\nfunction DateAdapter(options) {\n\tthis.options = options || {};\n}\n\nhelpers$1.extend(DateAdapter.prototype, /** @lends DateAdapter */ {\n\t/**\n\t * Returns a map of time formats for the supported formatting units defined\n\t * in Unit as well as 'datetime' representing a detailed date/time string.\n\t * @returns {{string: string}}\n\t */\n\tformats: abstract,\n\n\t/**\n\t * Parses the given `value` and return the associated timestamp.\n\t * @param {any} value - the value to parse (usually comes from the data)\n\t * @param {string} [format] - the expected data format\n\t * @returns {(number|null)}\n\t * @function\n\t */\n\tparse: abstract,\n\n\t/**\n\t * Returns the formatted date in the specified `format` for a given `timestamp`.\n\t * @param {number} timestamp - the timestamp to format\n\t * @param {string} format - the date/time token\n\t * @return {string}\n\t * @function\n\t */\n\tformat: abstract,\n\n\t/**\n\t * Adds the specified `amount` of `unit` to the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {number} amount - the amount to add\n\t * @param {Unit} unit - the unit as string\n\t * @return {number}\n\t * @function\n\t */\n\tadd: abstract,\n\n\t/**\n\t * Returns the number of `unit` between the given timestamps.\n\t * @param {number} max - the input timestamp (reference)\n\t * @param {number} min - the timestamp to substract\n\t * @param {Unit} unit - the unit as string\n\t * @return {number}\n\t * @function\n\t */\n\tdiff: abstract,\n\n\t/**\n\t * Returns start of `unit` for the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {Unit} unit - the unit as string\n\t * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n\t * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n\t * @function\n\t */\n\tstartOf: abstract,\n\n\t/**\n\t * Returns end of `unit` for the given `timestamp`.\n\t * @param {number} timestamp - the input timestamp\n\t * @param {Unit} unit - the unit as string\n\t * @function\n\t */\n\tendOf: abstract,\n\n\t// DEPRECATIONS\n\n\t/**\n\t * Provided for backward compatibility for scale.getValueForPixel(),\n\t * this method should be overridden only by the moment adapter.\n\t * @deprecated since version 2.8.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\t_create: function(value) {\n\t\treturn value;\n\t}\n});\n\nDateAdapter.override = function(members) {\n\thelpers$1.extend(DateAdapter.prototype, members);\n};\n\nvar _date = DateAdapter;\n\nvar core_adapters = {\n\t_date: _date\n};\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nvar core_ticks = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {string|string[]} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers$1.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {number} the value to be formatted\n\t\t * @param index {number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {number[]} the list of ticks being converted\n\t\t * @return {string} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers$1.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\t\t\t\tif (maxTick < 1e-4) { // all ticks are small numbers; use scientific notation\n\t\t\t\t\tvar logTick = helpers$1.log10(Math.abs(tickValue));\n\t\t\t\t\ttickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n\t\t\t\t} else {\n\t\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers$1.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n\nvar valueOrDefault$9 = helpers$1.valueOrDefault;\nvar valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\ncore_defaults._set('scale', {\n\tdisplay: true,\n\tposition: 'left',\n\toffset: false,\n\n\t// grid line settings\n\tgridLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tdrawBorder: true,\n\t\tdrawOnChartArea: true,\n\t\tdrawTicks: true,\n\t\ttickMarkLength: 10,\n\t\tzeroLineWidth: 1,\n\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\tzeroLineBorderDash: [],\n\t\tzeroLineBorderDashOffset: 0.0,\n\t\toffsetGridLines: false,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\t// scale label\n\tscaleLabel: {\n\t\t// display property\n\t\tdisplay: false,\n\n\t\t// actual label\n\t\tlabelString: '',\n\n\t\t// top/bottom padding\n\t\tpadding: {\n\t\t\ttop: 4,\n\t\t\tbottom: 4\n\t\t}\n\t},\n\n\t// label settings\n\tticks: {\n\t\tbeginAtZero: false,\n\t\tminRotation: 0,\n\t\tmaxRotation: 50,\n\t\tmirror: false,\n\t\tpadding: 0,\n\t\treverse: false,\n\t\tdisplay: true,\n\t\tautoSkip: true,\n\t\tautoSkipPadding: 0,\n\t\tlabelOffset: 0,\n\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\tcallback: core_ticks.formatters.values,\n\t\tminor: {},\n\t\tmajor: {}\n\t}\n});\n\nfunction labelsFromTicks(ticks) {\n\tvar labels = [];\n\tvar i, ilen;\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tlabels.push(ticks[i].label);\n\t}\n\n\treturn labels;\n}\n\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n\tvar lineValue = scale.getPixelForTick(index);\n\n\tif (offsetGridLines) {\n\t\tif (scale.getTicks().length === 1) {\n\t\t\tlineValue -= scale.isHorizontal() ?\n\t\t\t\tMath.max(lineValue - scale.left, scale.right - lineValue) :\n\t\t\t\tMath.max(lineValue - scale.top, scale.bottom - lineValue);\n\t\t} else if (index === 0) {\n\t\t\tlineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n\t\t} else {\n\t\t\tlineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n\t\t}\n\t}\n\treturn lineValue;\n}\n\nfunction computeTextSize(context, tick, font) {\n\treturn helpers$1.isArray(tick) ?\n\t\thelpers$1.longestText(context, font, tick) :\n\t\tcontext.measureText(tick).width;\n}\n\nvar core_scale = core_element.extend({\n\t/**\n\t * Get the padding needed for the scale\n\t * @method getPadding\n\t * @private\n\t * @returns {Padding} the necessary padding\n\t */\n\tgetPadding: function() {\n\t\tvar me = this;\n\t\treturn {\n\t\t\tleft: me.paddingLeft || 0,\n\t\t\ttop: me.paddingTop || 0,\n\t\t\tright: me.paddingRight || 0,\n\t\t\tbottom: me.paddingBottom || 0\n\t\t};\n\t},\n\n\t/**\n\t * Returns the scale tick objects ({label, major})\n\t * @since 2.7\n\t */\n\tgetTicks: function() {\n\t\treturn this._ticks;\n\t},\n\n\t// These methods are ordered by lifecyle. Utilities then follow.\n\t// Any function defined here is inherited by all scale types.\n\t// Any function can be extended by the scale type\n\n\tmergeTicksOptions: function() {\n\t\tvar ticks = this.options.ticks;\n\t\tif (ticks.minor === false) {\n\t\t\tticks.minor = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tif (ticks.major === false) {\n\t\t\tticks.major = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tfor (var key in ticks) {\n\t\t\tif (key !== 'major' && key !== 'minor') {\n\t\t\t\tif (typeof ticks.minor[key] === 'undefined') {\n\t\t\t\t\tticks.minor[key] = ticks[key];\n\t\t\t\t}\n\t\t\t\tif (typeof ticks.major[key] === 'undefined') {\n\t\t\t\t\tticks.major[key] = ticks[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tbeforeUpdate: function() {\n\t\thelpers$1.callback(this.options.beforeUpdate, [this]);\n\t},\n\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\t\tvar i, ilen, labels, label, ticks, tick;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = helpers$1.extend({\n\t\t\tleft: 0,\n\t\t\tright: 0,\n\t\t\ttop: 0,\n\t\t\tbottom: 0\n\t\t}, margins);\n\n\t\tme._maxLabelLines = 0;\n\t\tme.longestLabelWidth = 0;\n\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\n\t\t// Data min/max\n\t\tme.beforeDataLimits();\n\t\tme.determineDataLimits();\n\t\tme.afterDataLimits();\n\n\t\t// Ticks - `this.ticks` is now DEPRECATED!\n\t\t// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n\t\t// and must not be accessed directly from outside this class. `this.ticks` being\n\t\t// around for long time and not marked as private, we can't change its structure\n\t\t// without unexpected breaking changes. If you need to access the scale ticks,\n\t\t// use scale.getTicks() instead.\n\n\t\tme.beforeBuildTicks();\n\n\t\t// New implementations should return an array of objects but for BACKWARD COMPAT,\n\t\t// we still support no return (`this.ticks` internally set by calling this method).\n\t\tticks = me.buildTicks() || [];\n\n\t\t// Allow modification of ticks in callback.\n\t\tticks = me.afterBuildTicks(ticks) || ticks;\n\n\t\tme.beforeTickToLabelConversion();\n\n\t\t// New implementations should return the formatted tick labels but for BACKWARD\n\t\t// COMPAT, we still support no return (`this.ticks` internally changed by calling\n\t\t// this method and supposed to contain only string values).\n\t\tlabels = me.convertTicksToLabels(ticks) || me.ticks;\n\n\t\tme.afterTickToLabelConversion();\n\n\t\tme.ticks = labels;   // BACKWARD COMPATIBILITY\n\n\t\t// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n\n\t\t// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\t\tfor (i = 0, ilen = labels.length; i < ilen; ++i) {\n\t\t\tlabel = labels[i];\n\t\t\ttick = ticks[i];\n\t\t\tif (!tick) {\n\t\t\t\tticks.push(tick = {\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tmajor: false\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\ttick.label = label;\n\t\t\t}\n\t\t}\n\n\t\tme._ticks = ticks;\n\n\t\t// Tick Rotation\n\t\tme.beforeCalculateTickRotation();\n\t\tme.calculateTickRotation();\n\t\tme.afterCalculateTickRotation();\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: function() {\n\t\thelpers$1.callback(this.options.afterUpdate, [this]);\n\t},\n\n\t//\n\n\tbeforeSetDimensions: function() {\n\t\thelpers$1.callback(this.options.beforeSetDimensions, [this]);\n\t},\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\t},\n\tafterSetDimensions: function() {\n\t\thelpers$1.callback(this.options.afterSetDimensions, [this]);\n\t},\n\n\t// Data limits\n\tbeforeDataLimits: function() {\n\t\thelpers$1.callback(this.options.beforeDataLimits, [this]);\n\t},\n\tdetermineDataLimits: helpers$1.noop,\n\tafterDataLimits: function() {\n\t\thelpers$1.callback(this.options.afterDataLimits, [this]);\n\t},\n\n\t//\n\tbeforeBuildTicks: function() {\n\t\thelpers$1.callback(this.options.beforeBuildTicks, [this]);\n\t},\n\tbuildTicks: helpers$1.noop,\n\tafterBuildTicks: function(ticks) {\n\t\tvar me = this;\n\t\t// ticks is empty for old axis implementations here\n\t\tif (helpers$1.isArray(ticks) && ticks.length) {\n\t\t\treturn helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n\t\t}\n\t\t// Support old implementations (that modified `this.ticks` directly in buildTicks)\n\t\tme.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n\t\treturn ticks;\n\t},\n\n\tbeforeTickToLabelConversion: function() {\n\t\thelpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n\t},\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\t\t// Convert ticks to strings\n\t\tvar tickOpts = me.options.ticks;\n\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n\t},\n\tafterTickToLabelConversion: function() {\n\t\thelpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n\t},\n\n\t//\n\n\tbeforeCalculateTickRotation: function() {\n\t\thelpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n\t},\n\tcalculateTickRotation: function() {\n\t\tvar me = this;\n\t\tvar context = me.ctx;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t// Get the width of each grid by calculating the difference\n\t\t// between x offsets between 0 and 1.\n\t\tvar tickFont = helpers$1.options._parseFont(tickOpts);\n\t\tcontext.font = tickFont.string;\n\n\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\tif (labels.length && me.options.display && me.isHorizontal()) {\n\t\t\tvar originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\tvar cosRotation, sinRotation;\n\n\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\tvar angleRadians = helpers$1.toRadians(labelRotation);\n\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t// go back one step\n\t\t\t\t\tlabelRotation--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlabelRotation++;\n\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.labelRotation = labelRotation;\n\t},\n\tafterCalculateTickRotation: function() {\n\t\thelpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n\t},\n\n\t//\n\n\tbeforeFit: function() {\n\t\thelpers$1.callback(this.options.beforeFit, [this]);\n\t},\n\tfit: function() {\n\t\tvar me = this;\n\t\t// Reset\n\t\tvar minSize = me.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\tvar gridLineOpts = opts.gridLines;\n\t\tvar display = me._isVisible();\n\t\tvar position = opts.position;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar parseFont = helpers$1.options._parseFont;\n\t\tvar tickFont = parseFont(tickOpts);\n\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t// Width\n\t\tif (isHorizontal) {\n\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t} else {\n\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t}\n\n\t\t// height\n\t\tif (isHorizontal) {\n\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t} else {\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Are we showing a title for the scale?\n\t\tif (scaleLabelOpts.display && display) {\n\t\t\tvar scaleLabelFont = parseFont(scaleLabelOpts);\n\t\t\tvar scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n\t\t\tvar deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height += deltaHeight;\n\t\t\t} else {\n\t\t\t\tminSize.width += deltaHeight;\n\t\t\t}\n\t\t}\n\n\t\t// Don't bother fitting the ticks if we are not showing the labels\n\t\tif (tickOpts.display && display) {\n\t\t\tvar largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n\t\t\tvar tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n\t\t\tvar lineSpace = tickFont.size * 0.5;\n\t\t\tvar tickPadding = me.options.ticks.padding;\n\n\t\t\t// Store max number of lines and widest label for _autoSkip\n\t\t\tme._maxLabelLines = tallestLabelHeightInLines;\n\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tvar angleRadians = helpers$1.toRadians(me.labelRotation);\n\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t// TODO - improve this calculation\n\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t+ (tickFont.lineHeight * tallestLabelHeightInLines)\n\t\t\t\t\t+ lineSpace; // padding\n\n\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n\n\t\t\t\tme.ctx.font = tickFont.string;\n\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n\t\t\t\tvar offsetLeft = me.getPixelForTick(0) - me.left;\n\t\t\t\tvar offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n\t\t\t\tvar paddingLeft, paddingRight;\n\n\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n\t\t\t\t// which means that the right padding is dominated by the font height\n\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\tpaddingLeft = position === 'bottom' ? (cosRotation * firstLabelWidth) : (cosRotation * lineSpace);\n\t\t\t\t\tpaddingRight = position === 'bottom' ? (cosRotation * lineSpace) : (cosRotation * lastLabelWidth);\n\t\t\t\t} else {\n\t\t\t\t\tpaddingLeft = firstLabelWidth / 2;\n\t\t\t\t\tpaddingRight = lastLabelWidth / 2;\n\t\t\t\t}\n\t\t\t\tme.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\t\t\t\tme.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n\t\t\t} else {\n\t\t\t\t// A vertical axis is more constrained by the width. Labels are the\n\t\t\t\t// dominant factor here, so get that length first and account for padding\n\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t} else {\n\t\t\t\t\t// use lineSpace for consistency with horizontal axis\n\t\t\t\t\t// tickPadding is not implemented for horizontal\n\t\t\t\t\tlargestTextWidth += tickPadding + lineSpace;\n\t\t\t\t}\n\n\t\t\t\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n\n\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t}\n\t\t}\n\n\t\tme.handleMargins();\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\n\t/**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n\thandleMargins: function() {\n\t\tvar me = this;\n\t\tif (me.margins) {\n\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t}\n\t},\n\n\tafterFit: function() {\n\t\thelpers$1.callback(this.options.afterFit, [this]);\n\t},\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\tisFullWidth: function() {\n\t\treturn (this.options.fullWidth);\n\t},\n\n\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\tgetRightValue: function(rawValue) {\n\t\t// Null and undefined values first\n\t\tif (helpers$1.isNullOrUndef(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\tif ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// If it is in fact an object, dive in one more level\n\t\tif (rawValue) {\n\t\t\tif (this.isHorizontal()) {\n\t\t\t\tif (rawValue.x !== undefined) {\n\t\t\t\t\treturn this.getRightValue(rawValue.x);\n\t\t\t\t}\n\t\t\t} else if (rawValue.y !== undefined) {\n\t\t\t\treturn this.getRightValue(rawValue.y);\n\t\t\t}\n\t\t}\n\n\t\t// Value is good, return it\n\t\treturn rawValue;\n\t},\n\n\t/**\n\t * Used to get the value to display in the tooltip for the data at the given index\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetLabelForIndex: helpers$1.noop,\n\n\t/**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param value\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetPixelForValue: helpers$1.noop,\n\n\t/**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param pixel\n\t */\n\tgetValueForPixel: helpers$1.noop,\n\n\t/**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForTick: function(index) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel += tickWidth / 2;\n\t\t\t}\n\n\t\t\tvar finalVal = me.left + pixel;\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\treturn me.top + (index * (innerHeight / (me._ticks.length - 1)));\n\t},\n\n\t/**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForDecimal: function(decimal) {\n\t\tvar me = this;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\tvar finalVal = me.left + valueOffset;\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\treturn me.top + (decimal * me.height);\n\t},\n\n\t/**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetBasePixel: function() {\n\t\treturn this.getPixelForValue(this.getBaseValue());\n\t},\n\n\tgetBaseValue: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\n\t\treturn me.beginAtZero ? 0 :\n\t\t\tmin < 0 && max < 0 ? max :\n\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t0;\n\t},\n\n\t/**\n\t * Returns a subset of ticks to be plotted to avoid overlapping labels.\n\t * @private\n\t */\n\t_autoSkip: function(ticks) {\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar optionTicks = me.options.ticks.minor;\n\t\tvar tickCount = ticks.length;\n\t\tvar skipRatio = false;\n\t\tvar maxTicks = optionTicks.maxTicksLimit;\n\n\t\t// Total space needed to display all ticks. First and last ticks are\n\t\t// drawn as their center at end of axis, so tickCount-1\n\t\tvar ticksLength = me._tickSize() * (tickCount - 1);\n\n\t\t// Axis length\n\t\tvar axisLength = isHorizontal\n\t\t\t? me.width - (me.paddingLeft + me.paddingRight)\n\t\t\t: me.height - (me.paddingTop + me.PaddingBottom);\n\n\t\tvar result = [];\n\t\tvar i, tick;\n\n\t\tif (ticksLength > axisLength) {\n\t\t\tskipRatio = 1 + Math.floor(ticksLength / axisLength);\n\t\t}\n\n\t\t// if they defined a max number of optionTicks,\n\t\t// increase skipRatio until that number is met\n\t\tif (tickCount > maxTicks) {\n\t\t\tskipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n\t\t}\n\n\t\tfor (i = 0; i < tickCount; i++) {\n\t\t\ttick = ticks[i];\n\n\t\t\tif (skipRatio > 1 && i % skipRatio > 0) {\n\t\t\t\t// leave tick in place but make sure it's not displayed (#4635)\n\t\t\t\tdelete tick.label;\n\t\t\t}\n\t\t\tresult.push(tick);\n\t\t}\n\t\treturn result;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_tickSize: function() {\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar optionTicks = me.options.ticks.minor;\n\n\t\t// Calculate space needed by label in axis direction.\n\t\tvar rot = helpers$1.toRadians(me.labelRotation);\n\t\tvar cos = Math.abs(Math.cos(rot));\n\t\tvar sin = Math.abs(Math.sin(rot));\n\n\t\tvar padding = optionTicks.autoSkipPadding || 0;\n\t\tvar w = (me.longestLabelWidth + padding) || 0;\n\n\t\tvar tickFont = helpers$1.options._parseFont(optionTicks);\n\t\tvar h = (me._maxLabelLines * tickFont.lineHeight + padding) || 0;\n\n\t\t// Calculate space needed for 1 tick in axis direction.\n\t\treturn isHorizontal\n\t\t\t? h * cos > w * sin ? w / cos : h / sin\n\t\t\t: h * sin < w * cos ? h / cos : w / sin;\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_isVisible: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar display = me.options.display;\n\t\tvar i, ilen, meta;\n\n\t\tif (display !== 'auto') {\n\t\t\treturn !!display;\n\t\t}\n\n\t\t// When 'auto', the scale is visible if at least one associated dataset is visible.\n\t\tfor (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tif (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t},\n\n\t/**\n\t * Actually draw the scale on the canvas\n\t * @param {object} chartArea - the area of the chart to draw full grid lines on\n\t */\n\tdraw: function(chartArea) {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\n\t\tif (!me._isVisible()) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar chart = me.chart;\n\t\tvar context = me.ctx;\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar defaultFontColor = globalDefaults.defaultFontColor;\n\t\tvar optionTicks = options.ticks.minor;\n\t\tvar optionMajorTicks = options.ticks.major || optionTicks;\n\t\tvar gridLines = options.gridLines;\n\t\tvar scaleLabel = options.scaleLabel;\n\t\tvar position = options.position;\n\n\t\tvar isRotated = me.labelRotation !== 0;\n\t\tvar isMirrored = optionTicks.mirror;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar parseFont = helpers$1.options._parseFont;\n\t\tvar ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n\t\tvar tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n\t\tvar tickFont = parseFont(optionTicks);\n\t\tvar lineHeight = tickFont.lineHeight;\n\t\tvar majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n\t\tvar majorTickFont = parseFont(optionMajorTicks);\n\t\tvar tickPadding = optionTicks.padding;\n\t\tvar labelOffset = optionTicks.labelOffset;\n\n\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\n\t\tvar scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n\t\tvar scaleLabelFont = parseFont(scaleLabel);\n\t\tvar scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n\t\tvar labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n\n\t\tvar itemsToDraw = [];\n\n\t\tvar axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n\t\tvar alignPixel = helpers$1._alignPixel;\n\t\tvar borderValue, tickStart, tickEnd;\n\n\t\tif (position === 'top') {\n\t\t\tborderValue = alignPixel(chart, me.bottom, axisWidth);\n\t\t\ttickStart = me.bottom - tl;\n\t\t\ttickEnd = borderValue - axisWidth / 2;\n\t\t} else if (position === 'bottom') {\n\t\t\tborderValue = alignPixel(chart, me.top, axisWidth);\n\t\t\ttickStart = borderValue + axisWidth / 2;\n\t\t\ttickEnd = me.top + tl;\n\t\t} else if (position === 'left') {\n\t\t\tborderValue = alignPixel(chart, me.right, axisWidth);\n\t\t\ttickStart = me.right - tl;\n\t\t\ttickEnd = borderValue - axisWidth / 2;\n\t\t} else {\n\t\t\tborderValue = alignPixel(chart, me.left, axisWidth);\n\t\t\ttickStart = borderValue + axisWidth / 2;\n\t\t\ttickEnd = me.left + tl;\n\t\t}\n\n\t\tvar epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n\t\thelpers$1.each(ticks, function(tick, index) {\n\t\t\t// autoskipper skipped this tick (#4635)\n\t\t\tif (helpers$1.isNullOrUndef(tick.label)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar label = tick.label;\n\t\t\tvar lineWidth, lineColor, borderDash, borderDashOffset;\n\t\t\tif (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n\t\t\t\t// Draw the first index specially\n\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\tborderDash = gridLines.zeroLineBorderDash || [];\n\t\t\t\tborderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n\t\t\t} else {\n\t\t\t\tlineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\tlineColor = valueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\tborderDash = gridLines.borderDash || [];\n\t\t\t\tborderDashOffset = gridLines.borderDashOffset || 0.0;\n\t\t\t}\n\n\t\t\t// Common properties\n\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n\t\t\tvar labelCount = helpers$1.isArray(label) ? label.length : 1;\n\t\t\tvar lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tvar labelYOffset = tl + tickPadding;\n\n\t\t\t\tif (lineValue < me.left - epsilon) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\n\t\t\t\ttx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n\t\t\t\tty1 = tickStart;\n\t\t\t\tty2 = tickEnd;\n\t\t\t\tlabelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\tif (position === 'top') {\n\t\t\t\t\ty1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n\t\t\t\t\ty2 = chartArea.bottom;\n\t\t\t\t\ttextOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'left';\n\t\t\t\t\tlabelY = me.bottom - labelYOffset;\n\t\t\t\t} else {\n\t\t\t\t\ty1 = chartArea.top;\n\t\t\t\t\ty2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n\t\t\t\t\ttextOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'right';\n\t\t\t\t\tlabelY = me.top + labelYOffset;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n\t\t\t\tif (lineValue < me.top - epsilon) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\n\t\t\t\ttx1 = tickStart;\n\t\t\t\ttx2 = tickEnd;\n\t\t\t\tty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n\t\t\t\tlabelY = me.getPixelForTick(index) + labelOffset;\n\t\t\t\ttextOffset = (1 - labelCount) * lineHeight / 2;\n\n\t\t\t\tif (position === 'left') {\n\t\t\t\t\tx1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n\t\t\t\t\tx2 = chartArea.right;\n\t\t\t\t\ttextAlign = isMirrored ? 'left' : 'right';\n\t\t\t\t\tlabelX = me.right - labelXOffset;\n\t\t\t\t} else {\n\t\t\t\t\tx1 = chartArea.left;\n\t\t\t\t\tx2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n\t\t\t\t\ttextAlign = isMirrored ? 'right' : 'left';\n\t\t\t\t\tlabelX = me.left + labelXOffset;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\titemsToDraw.push({\n\t\t\t\ttx1: tx1,\n\t\t\t\tty1: ty1,\n\t\t\t\ttx2: tx2,\n\t\t\t\tty2: ty2,\n\t\t\t\tx1: x1,\n\t\t\t\ty1: y1,\n\t\t\t\tx2: x2,\n\t\t\t\ty2: y2,\n\t\t\t\tlabelX: labelX,\n\t\t\t\tlabelY: labelY,\n\t\t\t\tglWidth: lineWidth,\n\t\t\t\tglColor: lineColor,\n\t\t\t\tglBorderDash: borderDash,\n\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\tlabel: label,\n\t\t\t\tmajor: tick.major,\n\t\t\t\ttextOffset: textOffset,\n\t\t\t\ttextAlign: textAlign\n\t\t\t});\n\t\t});\n\n\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\thelpers$1.each(itemsToDraw, function(itemToDraw) {\n\t\t\tvar glWidth = itemToDraw.glWidth;\n\t\t\tvar glColor = itemToDraw.glColor;\n\n\t\t\tif (gridLines.display && glWidth && glColor) {\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.lineWidth = glWidth;\n\t\t\t\tcontext.strokeStyle = glColor;\n\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\n\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t}\n\n\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t}\n\n\t\t\t\tcontext.stroke();\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (optionTicks.display) {\n\t\t\t\t// Make sure we draw text in the correct color and font\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\tcontext.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n\t\t\t\tcontext.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n\t\t\t\tcontext.textBaseline = 'middle';\n\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\tvar y = itemToDraw.textOffset;\n\t\t\t\tif (helpers$1.isArray(label)) {\n\t\t\t\t\tfor (var i = 0; i < label.length; ++i) {\n\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\ty += lineHeight;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcontext.fillText(label, 0, y);\n\t\t\t\t}\n\t\t\t\tcontext.restore();\n\t\t\t}\n\t\t});\n\n\t\tif (scaleLabel.display) {\n\t\t\t// Draw the scale label\n\t\t\tvar scaleLabelX;\n\t\t\tvar scaleLabelY;\n\t\t\tvar rotation = 0;\n\t\t\tvar halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\tscaleLabelY = position === 'bottom'\n\t\t\t\t\t? me.bottom - halfLineHeight - scaleLabelPadding.bottom\n\t\t\t\t\t: me.top + halfLineHeight + scaleLabelPadding.top;\n\t\t\t} else {\n\t\t\t\tvar isLeft = position === 'left';\n\t\t\t\tscaleLabelX = isLeft\n\t\t\t\t\t? me.left + halfLineHeight + scaleLabelPadding.top\n\t\t\t\t\t: me.right - halfLineHeight - scaleLabelPadding.top;\n\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t}\n\n\t\t\tcontext.save();\n\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\tcontext.rotate(rotation);\n\t\t\tcontext.textAlign = 'center';\n\t\t\tcontext.textBaseline = 'middle';\n\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\tcontext.font = scaleLabelFont.string;\n\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\tcontext.restore();\n\t\t}\n\n\t\tif (axisWidth) {\n\t\t\t// Draw the line at the edge of the axis\n\t\t\tvar firstLineWidth = axisWidth;\n\t\t\tvar lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n\t\t\tvar x1, x2, y1, y2;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tx1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n\t\t\t\tx2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n\t\t\t\ty1 = y2 = borderValue;\n\t\t\t} else {\n\t\t\t\ty1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n\t\t\t\ty2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n\t\t\t\tx1 = x2 = borderValue;\n\t\t\t}\n\n\t\t\tcontext.lineWidth = axisWidth;\n\t\t\tcontext.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(x1, y1);\n\t\t\tcontext.lineTo(x2, y2);\n\t\t\tcontext.stroke();\n\t\t}\n\t}\n});\n\nvar defaultConfig = {\n\tposition: 'bottom'\n};\n\nvar scale_category = core_scale.extend({\n\t/**\n\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t* else fall back to data.labels\n\t* @private\n\t*/\n\tgetLabels: function() {\n\t\tvar data = this.chart.data;\n\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t},\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar labels = me.getLabels();\n\t\tme.minIndex = 0;\n\t\tme.maxIndex = labels.length - 1;\n\t\tvar findIndex;\n\n\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t// user specified min value\n\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t}\n\n\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t// user specified max value\n\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t}\n\n\t\tme.min = labels[me.minIndex];\n\t\tme.max = labels[me.maxIndex];\n\t},\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar labels = me.getLabels();\n\t\t// If we are viewing some subset of labels, slice the original array\n\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\n\t\tif (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n\t\t\treturn me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n\t\t}\n\n\t\treturn me.ticks[index - me.minIndex];\n\t},\n\n\t// Used to get data value locations.  Value can either be an index or a numerical value\n\tgetPixelForValue: function(value, index) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\t// 1 is added because we need the length but we have the indexes\n\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t// If value is a data object, then index is the index in the data array,\n\t\t// not the index of the scale. We need to change that.\n\t\tvar valueCategory;\n\t\tif (value !== undefined && value !== null) {\n\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t}\n\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\tvar labels = me.getLabels();\n\t\t\tvalue = valueCategory || value;\n\t\t\tvar idx = labels.indexOf(value);\n\t\t\tindex = idx !== -1 ? idx : index;\n\t\t}\n\n\t\tif (me.isHorizontal()) {\n\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t}\n\n\t\t\treturn me.left + widthOffset;\n\t\t}\n\t\tvar valueHeight = me.height / offsetAmt;\n\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\tif (offset) {\n\t\t\theightOffset += (valueHeight / 2);\n\t\t}\n\n\t\treturn me.top + heightOffset;\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\tvar value;\n\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\tvar horz = me.isHorizontal();\n\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\tpixel -= horz ? me.left : me.top;\n\n\t\tif (offset) {\n\t\t\tpixel -= (valueDimension / 2);\n\t\t}\n\n\t\tif (pixel <= 0) {\n\t\t\tvalue = 0;\n\t\t} else {\n\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t}\n\n\t\treturn value + me.minIndex;\n\t},\n\n\tgetBasePixel: function() {\n\t\treturn this.bottom;\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults = defaultConfig;\nscale_category._defaults = _defaults;\n\nvar noop = helpers$1.noop;\nvar isNullOrUndef = helpers$1.isNullOrUndef;\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {number[]} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar MIN_SPACING = 1e-14;\n\tvar stepSize = generationOptions.stepSize;\n\tvar unit = stepSize || 1;\n\tvar maxNumSpaces = generationOptions.maxTicks - 1;\n\tvar min = generationOptions.min;\n\tvar max = generationOptions.max;\n\tvar precision = generationOptions.precision;\n\tvar rmin = dataRange.min;\n\tvar rmax = dataRange.max;\n\tvar spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n\tvar factor, niceMin, niceMax, numSpaces;\n\n\t// Beyond MIN_SPACING floating point numbers being to lose precision\n\t// such that we can't do the math necessary to generate ticks\n\tif (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n\t\treturn [rmin, rmax];\n\t}\n\n\tnumSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\tif (numSpaces > maxNumSpaces) {\n\t\t// If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n\t\tspacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n\t}\n\n\tif (stepSize || isNullOrUndef(precision)) {\n\t\t// If a precision is not specified, calculate factor based on spacing\n\t\tfactor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n\t} else {\n\t\t// If the user specified a precision, round to that number of decimal places\n\t\tfactor = Math.pow(10, precision);\n\t\tspacing = Math.ceil(spacing * factor) / factor;\n\t}\n\n\tniceMin = Math.floor(rmin / spacing) * spacing;\n\tniceMax = Math.ceil(rmax / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n\t\t\tniceMin = min;\n\t\t}\n\t\tif (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n\t\t\tniceMax = max;\n\t\t}\n\t}\n\n\tnumSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tniceMin = Math.round(niceMin * factor) / factor;\n\tniceMax = Math.round(niceMax * factor) / factor;\n\tticks.push(isNullOrUndef(min) ? niceMin : min);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n\t}\n\tticks.push(isNullOrUndef(max) ? niceMax : max);\n\n\treturn ticks;\n}\n\nvar scale_linearbase = core_scale.extend({\n\tgetRightValue: function(value) {\n\t\tif (typeof value === 'string') {\n\t\t\treturn +value;\n\t\t}\n\t\treturn core_scale.prototype.getRightValue.call(this, value);\n\t},\n\n\thandleTickRangeOptions: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\n\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t// axis, they can manually override it\n\t\tif (tickOpts.beginAtZero) {\n\t\t\tvar minSign = helpers$1.sign(me.min);\n\t\t\tvar maxSign = helpers$1.sign(me.max);\n\n\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t// move the top up to 0\n\t\t\t\tme.max = 0;\n\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t// move the bottom down to 0\n\t\t\t\tme.min = 0;\n\t\t\t}\n\t\t}\n\n\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\tif (tickOpts.min !== undefined) {\n\t\t\tme.min = tickOpts.min;\n\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\tif (me.min === null) {\n\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t} else {\n\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t}\n\t\t}\n\n\t\tif (tickOpts.max !== undefined) {\n\t\t\tme.max = tickOpts.max;\n\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\tif (me.max === null) {\n\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t} else {\n\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t}\n\t\t}\n\n\t\tif (setMin !== setMax) {\n\t\t\t// We set the min or the max but not both.\n\t\t\t// So ensure that our range is good\n\t\t\t// Inverted or 0 length range can happen when\n\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\tif (me.min >= me.max) {\n\t\t\t\tif (setMin) {\n\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (me.min === me.max) {\n\t\t\tme.max++;\n\n\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\tme.min--;\n\t\t\t}\n\t\t}\n\t},\n\n\tgetTickLimit: function() {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar stepSize = tickOpts.stepSize;\n\t\tvar maxTicksLimit = tickOpts.maxTicksLimit;\n\t\tvar maxTicks;\n\n\t\tif (stepSize) {\n\t\t\tmaxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n\t\t} else {\n\t\t\tmaxTicks = me._computeTickLimit();\n\t\t\tmaxTicksLimit = maxTicksLimit || 11;\n\t\t}\n\n\t\tif (maxTicksLimit) {\n\t\t\tmaxTicks = Math.min(maxTicksLimit, maxTicks);\n\t\t}\n\n\t\treturn maxTicks;\n\t},\n\n\t_computeTickLimit: function() {\n\t\treturn Number.POSITIVE_INFINITY;\n\t},\n\n\thandleDirectionalChanges: noop,\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\n\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t// the graph. Make sure we always have at least 2 ticks\n\t\tvar maxTicks = me.getTickLimit();\n\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\tvar numericGeneratorOptions = {\n\t\t\tmaxTicks: maxTicks,\n\t\t\tmin: tickOpts.min,\n\t\t\tmax: tickOpts.max,\n\t\t\tprecision: tickOpts.precision,\n\t\t\tstepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t};\n\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\tme.handleDirectionalChanges();\n\n\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t// range of the scale\n\t\tme.max = helpers$1.max(ticks);\n\t\tme.min = helpers$1.min(ticks);\n\n\t\tif (tickOpts.reverse) {\n\t\t\tticks.reverse();\n\n\t\t\tme.start = me.max;\n\t\t\tme.end = me.min;\n\t\t} else {\n\t\t\tme.start = me.min;\n\t\t\tme.end = me.max;\n\t\t}\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\tcore_scale.prototype.convertTicksToLabels.call(me);\n\t}\n});\n\nvar defaultConfig$1 = {\n\tposition: 'left',\n\tticks: {\n\t\tcallback: core_ticks.formatters.linear\n\t}\n};\n\nvar scale_linear = scale_linearbase.extend({\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar chart = me.chart;\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar DEFAULT_MIN = 0;\n\t\tvar DEFAULT_MAX = 1;\n\n\t\tfunction IDMatches(meta) {\n\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t}\n\n\t\t// First Calculate the range\n\t\tme.min = null;\n\t\tme.max = null;\n\n\t\tvar hasStacks = opts.stacked;\n\t\tif (hasStacks === undefined) {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (hasStacks) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\thasStacks = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (opts.stacked || hasStacks) {\n\t\t\tvar valuesPerStack = {};\n\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tvar key = [\n\t\t\t\t\tmeta.type,\n\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\tmeta.stack\n\t\t\t\t].join('.');\n\n\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\t// Store these per type\n\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers$1.each(valuesPerStack, function(valuesForType) {\n\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\tvar minVal = helpers$1.min(values);\n\t\t\t\tvar maxVal = helpers$1.max(values);\n\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t});\n\n\t\t} else {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n\t\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n\n\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\tthis.handleTickRangeOptions();\n\t},\n\n\t// Returns the maximum number of ticks based on the scale dimension\n\t_computeTickLimit: function() {\n\t\tvar me = this;\n\t\tvar tickFont;\n\n\t\tif (me.isHorizontal()) {\n\t\t\treturn Math.ceil(me.width / 40);\n\t\t}\n\t\ttickFont = helpers$1.options._parseFont(me.options.ticks);\n\t\treturn Math.ceil(me.height / tickFont.lineHeight);\n\t},\n\n\t// Called after the ticks are built. We need\n\thandleDirectionalChanges: function() {\n\t\tif (!this.isHorizontal()) {\n\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\tthis.ticks.reverse();\n\t\t}\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t},\n\n\t// Utils\n\tgetPixelForValue: function(value) {\n\t\t// This must be called after fit has been run so that\n\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\tvar me = this;\n\t\tvar start = me.start;\n\n\t\tvar rightValue = +me.getRightValue(value);\n\t\tvar pixel;\n\t\tvar range = me.end - start;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t} else {\n\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t}\n\t\treturn pixel;\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\treturn me.start + ((me.end - me.start) * offset);\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$1 = defaultConfig$1;\nscale_linear._defaults = _defaults$1;\n\nvar valueOrDefault$a = helpers$1.valueOrDefault;\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {number[]} array of tick values\n */\nfunction generateTicks$1(generationOptions, dataRange) {\n\tvar ticks = [];\n\n\tvar tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n\n\tvar endExp = Math.floor(helpers$1.log10(dataRange.max));\n\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\tvar exp, significand;\n\n\tif (tickVal === 0) {\n\t\texp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\tticks.push(tickVal);\n\t\ttickVal = significand * Math.pow(10, exp);\n\t} else {\n\t\texp = Math.floor(helpers$1.log10(tickVal));\n\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t}\n\tvar precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n\tdo {\n\t\tticks.push(tickVal);\n\n\t\t++significand;\n\t\tif (significand === 10) {\n\t\t\tsignificand = 1;\n\t\t\t++exp;\n\t\t\tprecision = exp >= 0 ? 1 : precision;\n\t\t}\n\n\t\ttickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\tvar lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n\tticks.push(lastTick);\n\n\treturn ticks;\n}\n\nvar defaultConfig$2 = {\n\tposition: 'left',\n\n\t// label settings\n\tticks: {\n\t\tcallback: core_ticks.formatters.logarithmic\n\t}\n};\n\n// TODO(v3): change this to positiveOrDefault\nfunction nonNegativeOrDefault(value, defaultValue) {\n\treturn helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n}\n\nvar scale_logarithmic = core_scale.extend({\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar chart = me.chart;\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tfunction IDMatches(meta) {\n\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t}\n\n\t\t// Calculate Range\n\t\tme.min = null;\n\t\tme.max = null;\n\t\tme.minNotZero = null;\n\n\t\tvar hasStacks = opts.stacked;\n\t\tif (hasStacks === undefined) {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (hasStacks) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\thasStacks = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (opts.stacked || hasStacks) {\n\t\t\tvar valuesPerStack = {};\n\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tvar key = [\n\t\t\t\t\tmeta.type,\n\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\tmeta.stack\n\t\t\t\t].join('.');\n\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers$1.each(valuesPerStack, function(valuesForType) {\n\t\t\t\tif (valuesForType.length > 0) {\n\t\t\t\t\tvar minVal = helpers$1.min(valuesForType);\n\t\t\t\t\tvar maxVal = helpers$1.max(valuesForType);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t}\n\t\t\t});\n\n\t\t} else {\n\t\t\thelpers$1.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Common base implementation to handle ticks.min, ticks.max\n\t\tthis.handleTickRangeOptions();\n\t},\n\n\thandleTickRangeOptions: function() {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar DEFAULT_MIN = 1;\n\t\tvar DEFAULT_MAX = 10;\n\n\t\tme.min = nonNegativeOrDefault(tickOpts.min, me.min);\n\t\tme.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n\t\tif (me.min === me.max) {\n\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\tme.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n\t\t\t\tme.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n\t\t\t} else {\n\t\t\t\tme.min = DEFAULT_MIN;\n\t\t\t\tme.max = DEFAULT_MAX;\n\t\t\t}\n\t\t}\n\t\tif (me.min === null) {\n\t\t\tme.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n\t\t}\n\t\tif (me.max === null) {\n\t\t\tme.max = me.min !== 0\n\t\t\t\t? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1)\n\t\t\t\t: DEFAULT_MAX;\n\t\t}\n\t\tif (me.minNotZero === null) {\n\t\t\tif (me.min > 0) {\n\t\t\t\tme.minNotZero = me.min;\n\t\t\t} else if (me.max < 1) {\n\t\t\t\tme.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n\t\t\t} else {\n\t\t\t\tme.minNotZero = DEFAULT_MIN;\n\t\t\t}\n\t\t}\n\t},\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar reverse = !me.isHorizontal();\n\n\t\tvar generationOptions = {\n\t\t\tmin: nonNegativeOrDefault(tickOpts.min),\n\t\t\tmax: nonNegativeOrDefault(tickOpts.max)\n\t\t};\n\t\tvar ticks = me.ticks = generateTicks$1(generationOptions, me);\n\n\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t// range of the scale\n\t\tme.max = helpers$1.max(ticks);\n\t\tme.min = helpers$1.min(ticks);\n\n\t\tif (tickOpts.reverse) {\n\t\t\treverse = !reverse;\n\t\t\tme.start = me.max;\n\t\t\tme.end = me.min;\n\t\t} else {\n\t\t\tme.start = me.min;\n\t\t\tme.end = me.max;\n\t\t}\n\t\tif (reverse) {\n\t\t\tticks.reverse();\n\t\t}\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tthis.tickValues = this.ticks.slice();\n\n\t\tcore_scale.prototype.convertTicksToLabels.call(this);\n\t},\n\n\t// Get the correct tooltip label\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t},\n\n\t/**\n\t * Returns the value of the first tick.\n\t * @param {number} value - The minimum not zero value.\n\t * @return {number} The first tick value.\n\t * @private\n\t */\n\t_getFirstTickValue: function(value) {\n\t\tvar exp = Math.floor(helpers$1.log10(value));\n\t\tvar significand = Math.floor(value / Math.pow(10, exp));\n\n\t\treturn significand * Math.pow(10, exp);\n\t},\n\n\tgetPixelForValue: function(value) {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar reverse = tickOpts.reverse;\n\t\tvar log10 = helpers$1.log10;\n\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\tvar offset = 0;\n\t\tvar innerDimension, pixel, start, end, sign;\n\n\t\tvalue = +me.getRightValue(value);\n\t\tif (reverse) {\n\t\t\tstart = me.end;\n\t\t\tend = me.start;\n\t\t\tsign = -1;\n\t\t} else {\n\t\t\tstart = me.start;\n\t\t\tend = me.end;\n\t\t\tsign = 1;\n\t\t}\n\t\tif (me.isHorizontal()) {\n\t\t\tinnerDimension = me.width;\n\t\t\tpixel = reverse ? me.right : me.left;\n\t\t} else {\n\t\t\tinnerDimension = me.height;\n\t\t\tsign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\t\t\tpixel = reverse ? me.top : me.bottom;\n\t\t}\n\t\tif (value !== start) {\n\t\t\tif (start === 0) { // include zero tick\n\t\t\t\toffset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n\t\t\t\tinnerDimension -= offset;\n\t\t\t\tstart = firstTickValue;\n\t\t\t}\n\t\t\tif (value !== 0) {\n\t\t\t\toffset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n\t\t\t}\n\t\t\tpixel += sign * offset;\n\t\t}\n\t\treturn pixel;\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar reverse = tickOpts.reverse;\n\t\tvar log10 = helpers$1.log10;\n\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\tvar innerDimension, start, end, value;\n\n\t\tif (reverse) {\n\t\t\tstart = me.end;\n\t\t\tend = me.start;\n\t\t} else {\n\t\t\tstart = me.start;\n\t\t\tend = me.end;\n\t\t}\n\t\tif (me.isHorizontal()) {\n\t\t\tinnerDimension = me.width;\n\t\t\tvalue = reverse ? me.right - pixel : pixel - me.left;\n\t\t} else {\n\t\t\tinnerDimension = me.height;\n\t\t\tvalue = reverse ? pixel - me.top : me.bottom - pixel;\n\t\t}\n\t\tif (value !== start) {\n\t\t\tif (start === 0) { // include zero tick\n\t\t\t\tvar offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n\t\t\t\tvalue -= offset;\n\t\t\t\tinnerDimension -= offset;\n\t\t\t\tstart = firstTickValue;\n\t\t\t}\n\t\t\tvalue *= log10(end) - log10(start);\n\t\t\tvalue /= innerDimension;\n\t\t\tvalue = Math.pow(10, log10(start) + value);\n\t\t}\n\t\treturn value;\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$2 = defaultConfig$2;\nscale_logarithmic._defaults = _defaults$2;\n\nvar valueOrDefault$b = helpers$1.valueOrDefault;\nvar valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\nvar resolve$7 = helpers$1.options.resolve;\n\nvar defaultConfig$3 = {\n\tdisplay: true,\n\n\t// Boolean - Whether to animate scaling the chart from the centre\n\tanimate: true,\n\tposition: 'chartArea',\n\n\tangleLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\tgridLines: {\n\t\tcircular: false\n\t},\n\n\t// label settings\n\tticks: {\n\t\t// Boolean - Show a backdrop to the scale label\n\t\tshowLabelBackdrop: true,\n\n\t\t// String - The colour of the label backdrop\n\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t// Number - The backdrop padding above & below the label in pixels\n\t\tbackdropPaddingY: 2,\n\n\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\tbackdropPaddingX: 2,\n\n\t\tcallback: core_ticks.formatters.linear\n\t},\n\n\tpointLabels: {\n\t\t// Boolean - if true, show point labels\n\t\tdisplay: true,\n\n\t\t// Number - Point label font size in pixels\n\t\tfontSize: 10,\n\n\t\t// Function - Used to convert point labels\n\t\tcallback: function(label) {\n\t\t\treturn label;\n\t\t}\n\t}\n};\n\nfunction getValueCount(scale) {\n\tvar opts = scale.options;\n\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n}\n\nfunction getTickBackdropHeight(opts) {\n\tvar tickOpts = opts.ticks;\n\n\tif (tickOpts.display && opts.display) {\n\t\treturn valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n\t}\n\treturn 0;\n}\n\nfunction measureLabelSize(ctx, lineHeight, label) {\n\tif (helpers$1.isArray(label)) {\n\t\treturn {\n\t\t\tw: helpers$1.longestText(ctx, ctx.font, label),\n\t\t\th: label.length * lineHeight\n\t\t};\n\t}\n\n\treturn {\n\t\tw: ctx.measureText(label).width,\n\t\th: lineHeight\n\t};\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n\tif (angle === min || angle === max) {\n\t\treturn {\n\t\t\tstart: pos - (size / 2),\n\t\t\tend: pos + (size / 2)\n\t\t};\n\t} else if (angle < min || angle > max) {\n\t\treturn {\n\t\t\tstart: pos - size,\n\t\t\tend: pos\n\t\t};\n\t}\n\n\treturn {\n\t\tstart: pos,\n\t\tend: pos + size\n\t};\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n\t// Right, this is really confusing and there is a lot of maths going on here\n\t// The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t//\n\t// Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t//\n\t// Solution:\n\t//\n\t// We assume the radius of the polygon is half the size of the canvas at first\n\t// at each index we check if the text overlaps.\n\t//\n\t// Where it does, we store that angle and that index.\n\t//\n\t// After finding the largest index and angle we calculate how much we need to remove\n\t// from the shape radius to move the point inwards by that x.\n\t//\n\t// We average the left and right distances to get the maximum shape radius that can fit in the box\n\t// along with labels.\n\t//\n\t// Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t// on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t//\n\t// This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t// and position it in the most space efficient manner\n\t//\n\t// https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n\tvar plFont = helpers$1.options._parseFont(scale.options.pointLabels);\n\n\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\tvar furthestLimits = {\n\t\tl: 0,\n\t\tr: scale.width,\n\t\tt: 0,\n\t\tb: scale.height - scale.paddingTop\n\t};\n\tvar furthestAngles = {};\n\tvar i, textSize, pointPosition;\n\n\tscale.ctx.font = plFont.string;\n\tscale._pointLabelSizes = [];\n\n\tvar valueCount = getValueCount(scale);\n\tfor (i = 0; i < valueCount; i++) {\n\t\tpointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n\t\ttextSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\tvar angle = helpers$1.toDegrees(angleRadians) % 360;\n\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\tfurthestAngles.l = angleRadians;\n\t\t}\n\n\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\tfurthestAngles.r = angleRadians;\n\t\t}\n\n\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\tfurthestAngles.t = angleRadians;\n\t\t}\n\n\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\tfurthestAngles.b = angleRadians;\n\t\t}\n\t}\n\n\tscale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n}\n\nfunction getTextAlignForAngle(angle) {\n\tif (angle === 0 || angle === 180) {\n\t\treturn 'center';\n\t} else if (angle < 180) {\n\t\treturn 'left';\n\t}\n\n\treturn 'right';\n}\n\nfunction fillText(ctx, text, position, lineHeight) {\n\tvar y = position.y + lineHeight / 2;\n\tvar i, ilen;\n\n\tif (helpers$1.isArray(text)) {\n\t\tfor (i = 0, ilen = text.length; i < ilen; ++i) {\n\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\ty += lineHeight;\n\t\t}\n\t} else {\n\t\tctx.fillText(text, position.x, y);\n\t}\n}\n\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\tif (angle === 90 || angle === 270) {\n\t\tposition.y -= (textSize.h / 2);\n\t} else if (angle > 270 || angle < 90) {\n\t\tposition.y -= textSize.h;\n\t}\n}\n\nfunction drawPointLabels(scale) {\n\tvar ctx = scale.ctx;\n\tvar opts = scale.options;\n\tvar angleLineOpts = opts.angleLines;\n\tvar gridLineOpts = opts.gridLines;\n\tvar pointLabelOpts = opts.pointLabels;\n\tvar lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n\tvar lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n\tvar tickBackdropHeight = getTickBackdropHeight(opts);\n\n\tctx.save();\n\tctx.lineWidth = lineWidth;\n\tctx.strokeStyle = lineColor;\n\tif (ctx.setLineDash) {\n\t\tctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n\t\tctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n\t}\n\n\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n\t// Point Label Font\n\tvar plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n\tctx.font = plFont.string;\n\tctx.textBaseline = 'middle';\n\n\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\tif (angleLineOpts.display && lineWidth && lineColor) {\n\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\tctx.stroke();\n\t\t}\n\n\t\tif (pointLabelOpts.display) {\n\t\t\t// Extra pixels out for some label spacing\n\t\t\tvar extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5);\n\n\t\t\t// Keep this in loop since we may support array properties here\n\t\t\tvar pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers$1.toDegrees(angleRadians);\n\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n\t\t}\n\t}\n\tctx.restore();\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\tvar ctx = scale.ctx;\n\tvar circular = gridLineOpts.circular;\n\tvar valueCount = getValueCount(scale);\n\tvar lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n\tvar lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n\tvar pointPosition;\n\n\tif ((!circular && !valueCount) || !lineColor || !lineWidth) {\n\t\treturn;\n\t}\n\n\tctx.save();\n\tctx.strokeStyle = lineColor;\n\tctx.lineWidth = lineWidth;\n\tif (ctx.setLineDash) {\n\t\tctx.setLineDash(gridLineOpts.borderDash || []);\n\t\tctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n\t}\n\n\tctx.beginPath();\n\tif (circular) {\n\t\t// Draw circular arcs between the points\n\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t} else {\n\t\t// Draw straight lines connecting each index\n\t\tpointPosition = scale.getPointPosition(0, radius);\n\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t}\n\t}\n\tctx.closePath();\n\tctx.stroke();\n\tctx.restore();\n}\n\nfunction numberOrZero(param) {\n\treturn helpers$1.isNumber(param) ? param : 0;\n}\n\nvar scale_radialLinear = scale_linearbase.extend({\n\tsetDimensions: function() {\n\t\tvar me = this;\n\n\t\t// Set the unconstrained dimension before label rotation\n\t\tme.width = me.maxWidth;\n\t\tme.height = me.maxHeight;\n\t\tme.paddingTop = getTickBackdropHeight(me.options) / 2;\n\t\tme.xCenter = Math.floor(me.width / 2);\n\t\tme.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n\t\tme.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n\t},\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar min = Number.POSITIVE_INFINITY;\n\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\thelpers$1.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\thelpers$1.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\tme.handleTickRangeOptions();\n\t},\n\n\t// Returns the maximum number of ticks based on the scale dimension\n\t_computeTickLimit: function() {\n\t\treturn Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n\t},\n\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\n\t\tscale_linearbase.prototype.convertTicksToLabels.call(me);\n\n\t\t// Point labels\n\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t},\n\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\n\t\tif (opts.display && opts.pointLabels.display) {\n\t\t\tfitWithPointLabels(me);\n\t\t} else {\n\t\t\tme.setCenterPoint(0, 0, 0, 0);\n\t\t}\n\t},\n\n\t/**\n\t * Set radius reductions and determine new radius and center point\n\t * @private\n\t */\n\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\tvar me = this;\n\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n\n\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\tme.drawingArea = Math.min(\n\t\t\tMath.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\tMath.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t},\n\n\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\tvar me = this;\n\t\tvar maxRight = me.width - rightMovement - me.drawingArea;\n\t\tvar maxLeft = leftMovement + me.drawingArea;\n\t\tvar maxTop = topMovement + me.drawingArea;\n\t\tvar maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n\n\t\tme.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n\t\tme.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n\t},\n\n\tgetIndexAngle: function(index) {\n\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\tthis.chart.options.startAngle :\n\t\t\t0;\n\n\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\treturn index * angleMultiplier + startAngleRadians;\n\t},\n\n\tgetDistanceFromCenterForValue: function(value) {\n\t\tvar me = this;\n\n\t\tif (value === null) {\n\t\t\treturn 0; // null always in center\n\t\t}\n\n\t\t// Take into account half font size + the yPadding of the top value\n\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\tif (me.options.ticks.reverse) {\n\t\t\treturn (me.max - value) * scalingFactor;\n\t\t}\n\t\treturn (value - me.min) * scalingFactor;\n\t},\n\n\tgetPointPosition: function(index, distanceFromCenter) {\n\t\tvar me = this;\n\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\treturn {\n\t\t\tx: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n\t\t\ty: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n\t\t};\n\t},\n\n\tgetPointPositionForValue: function(index, value) {\n\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t},\n\n\tgetBasePosition: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\n\t\treturn me.getPointPositionForValue(0,\n\t\t\tme.beginAtZero ? 0 :\n\t\t\tmin < 0 && max < 0 ? max :\n\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t0);\n\t},\n\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar gridLineOpts = opts.gridLines;\n\t\tvar tickOpts = opts.ticks;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar startAngle = this.getIndexAngle(0);\n\t\t\tvar tickFont = helpers$1.options._parseFont(tickOpts);\n\n\t\t\tif (opts.angleLines.display || opts.pointLabels.display) {\n\t\t\t\tdrawPointLabels(me);\n\t\t\t}\n\n\t\t\thelpers$1.each(me.ticks, function(label, index) {\n\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\tif (index > 0 || tickOpts.reverse) {\n\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\n\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\tvar tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n\t\t\t\t\t\tctx.font = tickFont.string;\n\n\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\tctx.translate(me.xCenter, me.yCenter);\n\t\t\t\t\t\tctx.rotate(startAngle);\n\n\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t-labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t-yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\ttickFont.size + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\tctx.fillText(label, 0, -yCenterOffset);\n\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$3 = defaultConfig$3;\nscale_radialLinear._defaults = _defaults$3;\n\nvar valueOrDefault$c = helpers$1.valueOrDefault;\n\n// Integer constants are from the ES6 spec.\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar INTERVALS = {\n\tmillisecond: {\n\t\tcommon: true,\n\t\tsize: 1,\n\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t},\n\tsecond: {\n\t\tcommon: true,\n\t\tsize: 1000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\tminute: {\n\t\tcommon: true,\n\t\tsize: 60000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\thour: {\n\t\tcommon: true,\n\t\tsize: 3600000,\n\t\tsteps: [1, 2, 3, 6, 12]\n\t},\n\tday: {\n\t\tcommon: true,\n\t\tsize: 86400000,\n\t\tsteps: [1, 2, 5]\n\t},\n\tweek: {\n\t\tcommon: false,\n\t\tsize: 604800000,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tmonth: {\n\t\tcommon: true,\n\t\tsize: 2.628e9,\n\t\tsteps: [1, 2, 3]\n\t},\n\tquarter: {\n\t\tcommon: false,\n\t\tsize: 7.884e9,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tyear: {\n\t\tcommon: true,\n\t\tsize: 3.154e10\n\t}\n};\n\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n\treturn a - b;\n}\n\nfunction arrayUnique(items) {\n\tvar hash = {};\n\tvar out = [];\n\tvar i, ilen, item;\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\titem = items[i];\n\t\tif (!hash[item]) {\n\t\t\thash[item] = true;\n\t\t\tout.push(item);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\nfunction buildLookupTable(timestamps, min, max, distribution) {\n\tif (distribution === 'linear' || !timestamps.length) {\n\t\treturn [\n\t\t\t{time: min, pos: 0},\n\t\t\t{time: max, pos: 1}\n\t\t];\n\t}\n\n\tvar table = [];\n\tvar items = [min];\n\tvar i, ilen, prev, curr, next;\n\n\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\tcurr = timestamps[i];\n\t\tif (curr > min && curr < max) {\n\t\t\titems.push(curr);\n\t\t}\n\t}\n\n\titems.push(max);\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\tnext = items[i + 1];\n\t\tprev = items[i - 1];\n\t\tcurr = items[i];\n\n\t\t// only add points that breaks the scale linearity\n\t\tif (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n\t\t\ttable.push({time: curr, pos: i / (ilen - 1)});\n\t\t}\n\t}\n\n\treturn table;\n}\n\n// @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\nfunction lookup(table, key, value) {\n\tvar lo = 0;\n\tvar hi = table.length - 1;\n\tvar mid, i0, i1;\n\n\twhile (lo >= 0 && lo <= hi) {\n\t\tmid = (lo + hi) >> 1;\n\t\ti0 = table[mid - 1] || null;\n\t\ti1 = table[mid];\n\n\t\tif (!i0) {\n\t\t\t// given value is outside table (before first item)\n\t\t\treturn {lo: null, hi: i1};\n\t\t} else if (i1[key] < value) {\n\t\t\tlo = mid + 1;\n\t\t} else if (i0[key] > value) {\n\t\t\thi = mid - 1;\n\t\t} else {\n\t\t\treturn {lo: i0, hi: i1};\n\t\t}\n\t}\n\n\t// given value is outside table (after last item)\n\treturn {lo: i1, hi: null};\n}\n\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\nfunction interpolate$1(table, skey, sval, tkey) {\n\tvar range = lookup(table, skey, sval);\n\n\t// Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\tvar prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n\tvar next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n\n\tvar span = next[skey] - prev[skey];\n\tvar ratio = span ? (sval - prev[skey]) / span : 0;\n\tvar offset = (next[tkey] - prev[tkey]) * ratio;\n\n\treturn prev[tkey] + offset;\n}\n\nfunction toTimestamp(scale, input) {\n\tvar adapter = scale._adapter;\n\tvar options = scale.options.time;\n\tvar parser = options.parser;\n\tvar format = parser || options.format;\n\tvar value = input;\n\n\tif (typeof parser === 'function') {\n\t\tvalue = parser(value);\n\t}\n\n\t// Only parse if its not a timestamp already\n\tif (!helpers$1.isFinite(value)) {\n\t\tvalue = typeof format === 'string'\n\t\t\t? adapter.parse(value, format)\n\t\t\t: adapter.parse(value);\n\t}\n\n\tif (value !== null) {\n\t\treturn +value;\n\t}\n\n\t// Labels are in an incompatible format and no `parser` has been provided.\n\t// The user might still use the deprecated `format` option for parsing.\n\tif (!parser && typeof format === 'function') {\n\t\tvalue = format(input);\n\n\t\t// `format` could return something else than a timestamp, if so, parse it\n\t\tif (!helpers$1.isFinite(value)) {\n\t\t\tvalue = adapter.parse(value);\n\t\t}\n\t}\n\n\treturn value;\n}\n\nfunction parse(scale, input) {\n\tif (helpers$1.isNullOrUndef(input)) {\n\t\treturn null;\n\t}\n\n\tvar options = scale.options.time;\n\tvar value = toTimestamp(scale, scale.getRightValue(input));\n\tif (value === null) {\n\t\treturn value;\n\t}\n\n\tif (options.round) {\n\t\tvalue = +scale._adapter.startOf(value, options.round);\n\t}\n\n\treturn value;\n}\n\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\nfunction determineStepSize(min, max, unit, capacity) {\n\tvar range = max - min;\n\tvar interval = INTERVALS[unit];\n\tvar milliseconds = interval.size;\n\tvar steps = interval.steps;\n\tvar i, ilen, factor;\n\n\tif (!steps) {\n\t\treturn Math.ceil(range / (capacity * milliseconds));\n\t}\n\n\tfor (i = 0, ilen = steps.length; i < ilen; ++i) {\n\t\tfactor = steps[i];\n\t\tif (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn factor;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n\tvar ilen = UNITS.length;\n\tvar i, interval, factor;\n\n\tfor (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n\t\tinterval = INTERVALS[UNITS[i]];\n\t\tfactor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n\t\tif (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n\n\treturn UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n */\nfunction determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n\tvar ilen = UNITS.length;\n\tvar i, unit;\n\n\tfor (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n\t\tunit = UNITS[i];\n\t\tif (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n\t\t\treturn unit;\n\t\t}\n\t}\n\n\treturn UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n\tfor (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n\t\tif (INTERVALS[UNITS[i]].common) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n}\n\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\nfunction generate(scale, min, max, capacity) {\n\tvar adapter = scale._adapter;\n\tvar options = scale.options;\n\tvar timeOpts = options.time;\n\tvar minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n\tvar major = determineMajorUnit(minor);\n\tvar stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n\tvar weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n\tvar majorTicksEnabled = options.ticks.major.enabled;\n\tvar interval = INTERVALS[minor];\n\tvar first = min;\n\tvar last = max;\n\tvar ticks = [];\n\tvar time;\n\n\tif (!stepSize) {\n\t\tstepSize = determineStepSize(min, max, minor, capacity);\n\t}\n\n\t// For 'week' unit, handle the first day of week option\n\tif (weekday) {\n\t\tfirst = +adapter.startOf(first, 'isoWeek', weekday);\n\t\tlast = +adapter.startOf(last, 'isoWeek', weekday);\n\t}\n\n\t// Align first/last ticks on unit\n\tfirst = +adapter.startOf(first, weekday ? 'day' : minor);\n\tlast = +adapter.startOf(last, weekday ? 'day' : minor);\n\n\t// Make sure that the last tick include max\n\tif (last < max) {\n\t\tlast = +adapter.add(last, 1, minor);\n\t}\n\n\ttime = first;\n\n\tif (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n\t\t// Align the first tick on the previous `minor` unit aligned on the `major` unit:\n\t\t// we first aligned time on the previous `major` unit then add the number of full\n\t\t// stepSize there is between first and the previous major time.\n\t\ttime = +adapter.startOf(time, major);\n\t\ttime = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n\t}\n\n\tfor (; time < last; time = +adapter.add(time, stepSize, minor)) {\n\t\tticks.push(+time);\n\t}\n\n\tticks.push(+time);\n\n\treturn ticks;\n}\n\n/**\n * Returns the start and end offsets from edges in the form of {start, end}\n * where each value is a relative width to the scale and ranges between 0 and 1.\n * They add extra margins on the both sides by scaling down the original scale.\n * Offsets are added when the `offset` option is true.\n */\nfunction computeOffsets(table, ticks, min, max, options) {\n\tvar start = 0;\n\tvar end = 0;\n\tvar first, last;\n\n\tif (options.offset && ticks.length) {\n\t\tif (!options.time.min) {\n\t\t\tfirst = interpolate$1(table, 'time', ticks[0], 'pos');\n\t\t\tif (ticks.length === 1) {\n\t\t\t\tstart = 1 - first;\n\t\t\t} else {\n\t\t\t\tstart = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n\t\t\t}\n\t\t}\n\t\tif (!options.time.max) {\n\t\t\tlast = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\t\t\tif (ticks.length === 1) {\n\t\t\t\tend = last;\n\t\t\t} else {\n\t\t\t\tend = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn {start: start, end: end};\n}\n\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n\tvar ticks = [];\n\tvar i, ilen, value, major;\n\n\tfor (i = 0, ilen = values.length; i < ilen; ++i) {\n\t\tvalue = values[i];\n\t\tmajor = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n\n\t\tticks.push({\n\t\t\tvalue: value,\n\t\t\tmajor: major\n\t\t});\n\t}\n\n\treturn ticks;\n}\n\nvar defaultConfig$4 = {\n\tposition: 'bottom',\n\n\t/**\n\t * Data distribution along the scale:\n\t * - 'linear': data are spread according to their time (distances can vary),\n\t * - 'series': data are spread at the same distance from each other.\n\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t * @since 2.7.0\n\t */\n\tdistribution: 'linear',\n\n\t/**\n\t * Scale boundary strategy (bypassed by min/max time options)\n\t * - `data`: make sure data are fully visible, ticks outside are removed\n\t * - `ticks`: make sure ticks are fully visible, data outside are truncated\n\t * @see https://github.com/chartjs/Chart.js/pull/4556\n\t * @since 2.7.0\n\t */\n\tbounds: 'data',\n\n\tadapters: {},\n\ttime: {\n\t\tparser: false, // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\tround: false, // none, or override with week, month, year, etc.\n\t\tdisplayFormat: false, // DEPRECATED\n\t\tisoWeekday: false, // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n\t\tminUnit: 'millisecond',\n\t\tdisplayFormats: {}\n\t},\n\tticks: {\n\t\tautoSkip: false,\n\n\t\t/**\n\t\t * Ticks generation input values:\n\t\t * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n\t\t * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n\t\t * - 'labels': generates ticks from user given `data.labels` values ONLY.\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t * @since 2.7.0\n\t\t */\n\t\tsource: 'auto',\n\n\t\tmajor: {\n\t\t\tenabled: false\n\t\t}\n\t}\n};\n\nvar scale_time = core_scale.extend({\n\tinitialize: function() {\n\t\tthis.mergeTicksOptions();\n\t\tcore_scale.prototype.initialize.call(this);\n\t},\n\n\tupdate: function() {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tvar time = options.time || (options.time = {});\n\t\tvar adapter = me._adapter = new core_adapters._date(options.adapters.date);\n\n\t\t// DEPRECATIONS: output a message only one time per update\n\t\tif (time.format) {\n\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\n\t\t}\n\n\t\t// Backward compatibility: before introducing adapter, `displayFormats` was\n\t\t// supposed to contain *all* unit/string pairs but this can't be resolved\n\t\t// when loading the scale (adapters are loaded afterward), so let's populate\n\t\t// missing formats on update\n\t\thelpers$1.mergeIf(time.displayFormats, adapter.formats());\n\n\t\treturn core_scale.prototype.update.apply(me, arguments);\n\t},\n\n\t/**\n\t * Allows data to be referenced via 't' attribute\n\t */\n\tgetRightValue: function(rawValue) {\n\t\tif (rawValue && rawValue.t !== undefined) {\n\t\t\trawValue = rawValue.t;\n\t\t}\n\t\treturn core_scale.prototype.getRightValue.call(this, rawValue);\n\t},\n\n\tdetermineDataLimits: function() {\n\t\tvar me = this;\n\t\tvar chart = me.chart;\n\t\tvar adapter = me._adapter;\n\t\tvar timeOpts = me.options.time;\n\t\tvar unit = timeOpts.unit || 'day';\n\t\tvar min = MAX_INTEGER;\n\t\tvar max = MIN_INTEGER;\n\t\tvar timestamps = [];\n\t\tvar datasets = [];\n\t\tvar labels = [];\n\t\tvar i, j, ilen, jlen, data, timestamp;\n\t\tvar dataLabels = chart.data.labels || [];\n\n\t\t// Convert labels to timestamps\n\t\tfor (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n\t\t\tlabels.push(parse(me, dataLabels[i]));\n\t\t}\n\n\t\t// Convert data to timestamps\n\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\tdata = chart.data.datasets[i].data;\n\n\t\t\t\t// Let's consider that all data have the same format.\n\t\t\t\tif (helpers$1.isObject(data[0])) {\n\t\t\t\t\tdatasets[i] = [];\n\n\t\t\t\t\tfor (j = 0, jlen = data.length; j < jlen; ++j) {\n\t\t\t\t\t\ttimestamp = parse(me, data[j]);\n\t\t\t\t\t\ttimestamps.push(timestamp);\n\t\t\t\t\t\tdatasets[i][j] = timestamp;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (j = 0, jlen = labels.length; j < jlen; ++j) {\n\t\t\t\t\t\ttimestamps.push(labels[j]);\n\t\t\t\t\t}\n\t\t\t\t\tdatasets[i] = labels.slice(0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdatasets[i] = [];\n\t\t\t}\n\t\t}\n\n\t\tif (labels.length) {\n\t\t\t// Sort labels **after** data have been converted\n\t\t\tlabels = arrayUnique(labels).sort(sorter);\n\t\t\tmin = Math.min(min, labels[0]);\n\t\t\tmax = Math.max(max, labels[labels.length - 1]);\n\t\t}\n\n\t\tif (timestamps.length) {\n\t\t\ttimestamps = arrayUnique(timestamps).sort(sorter);\n\t\t\tmin = Math.min(min, timestamps[0]);\n\t\t\tmax = Math.max(max, timestamps[timestamps.length - 1]);\n\t\t}\n\n\t\tmin = parse(me, timeOpts.min) || min;\n\t\tmax = parse(me, timeOpts.max) || max;\n\n\t\t// In case there is no valid min/max, set limits based on unit time option\n\t\tmin = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n\t\tmax = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max;\n\n\t\t// Make sure that max is strictly higher than min (required by the lookup table)\n\t\tme.min = Math.min(min, max);\n\t\tme.max = Math.max(min + 1, max);\n\n\t\t// PRIVATE\n\t\tme._horizontal = me.isHorizontal();\n\t\tme._table = [];\n\t\tme._timestamps = {\n\t\t\tdata: timestamps,\n\t\t\tdatasets: datasets,\n\t\t\tlabels: labels\n\t\t};\n\t},\n\n\tbuildTicks: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\t\tvar options = me.options;\n\t\tvar timeOpts = options.time;\n\t\tvar timestamps = [];\n\t\tvar ticks = [];\n\t\tvar i, ilen, timestamp;\n\n\t\tswitch (options.ticks.source) {\n\t\tcase 'data':\n\t\t\ttimestamps = me._timestamps.data;\n\t\t\tbreak;\n\t\tcase 'labels':\n\t\t\ttimestamps = me._timestamps.labels;\n\t\t\tbreak;\n\t\tcase 'auto':\n\t\tdefault:\n\t\t\ttimestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n\t\t}\n\n\t\tif (options.bounds === 'ticks' && timestamps.length) {\n\t\t\tmin = timestamps[0];\n\t\t\tmax = timestamps[timestamps.length - 1];\n\t\t}\n\n\t\t// Enforce limits with user min/max options\n\t\tmin = parse(me, timeOpts.min) || min;\n\t\tmax = parse(me, timeOpts.max) || max;\n\n\t\t// Remove ticks outside the min/max range\n\t\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\t\ttimestamp = timestamps[i];\n\t\t\tif (timestamp >= min && timestamp <= max) {\n\t\t\t\tticks.push(timestamp);\n\t\t\t}\n\t\t}\n\n\t\tme.min = min;\n\t\tme.max = max;\n\n\t\t// PRIVATE\n\t\tme._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n\t\tme._majorUnit = determineMajorUnit(me._unit);\n\t\tme._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n\t\tme._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n\t\tif (options.ticks.reverse) {\n\t\t\tticks.reverse();\n\t\t}\n\n\t\treturn ticksFromTimestamps(me, ticks, me._majorUnit);\n\t},\n\n\tgetLabelForIndex: function(index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar adapter = me._adapter;\n\t\tvar data = me.chart.data;\n\t\tvar timeOpts = me.options.time;\n\t\tvar label = data.labels && index < data.labels.length ? data.labels[index] : '';\n\t\tvar value = data.datasets[datasetIndex].data[index];\n\n\t\tif (helpers$1.isObject(value)) {\n\t\t\tlabel = me.getRightValue(value);\n\t\t}\n\t\tif (timeOpts.tooltipFormat) {\n\t\t\treturn adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n\t\t}\n\t\tif (typeof label === 'string') {\n\t\t\treturn label;\n\t\t}\n\t\treturn adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n\t},\n\n\t/**\n\t * Function to format an individual tick mark\n\t * @private\n\t */\n\ttickFormatFunction: function(time, index, ticks, format) {\n\t\tvar me = this;\n\t\tvar adapter = me._adapter;\n\t\tvar options = me.options;\n\t\tvar formats = options.time.displayFormats;\n\t\tvar minorFormat = formats[me._unit];\n\t\tvar majorUnit = me._majorUnit;\n\t\tvar majorFormat = formats[majorUnit];\n\t\tvar majorTime = +adapter.startOf(time, majorUnit);\n\t\tvar majorTickOpts = options.ticks.major;\n\t\tvar major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n\t\tvar label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n\t\tvar tickOpts = major ? majorTickOpts : options.ticks.minor;\n\t\tvar formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n\n\t\treturn formatter ? formatter(label, index, ticks) : label;\n\t},\n\n\tconvertTicksToLabels: function(ticks) {\n\t\tvar labels = [];\n\t\tvar i, ilen;\n\n\t\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\t\tlabels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n\t\t}\n\n\t\treturn labels;\n\t},\n\n\t/**\n\t * @private\n\t */\n\tgetPixelForOffset: function(time) {\n\t\tvar me = this;\n\t\tvar isReverse = me.options.ticks.reverse;\n\t\tvar size = me._horizontal ? me.width : me.height;\n\t\tvar start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n\t\tvar pos = interpolate$1(me._table, 'time', time, 'pos');\n\t\tvar offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n\n\t\treturn isReverse ? start - offset : start + offset;\n\t},\n\n\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\tvar me = this;\n\t\tvar time = null;\n\n\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\ttime = me._timestamps.datasets[datasetIndex][index];\n\t\t}\n\n\t\tif (time === null) {\n\t\t\ttime = parse(me, value);\n\t\t}\n\n\t\tif (time !== null) {\n\t\t\treturn me.getPixelForOffset(time);\n\t\t}\n\t},\n\n\tgetPixelForTick: function(index) {\n\t\tvar ticks = this.getTicks();\n\t\treturn index >= 0 && index < ticks.length ?\n\t\t\tthis.getPixelForOffset(ticks[index].value) :\n\t\t\tnull;\n\t},\n\n\tgetValueForPixel: function(pixel) {\n\t\tvar me = this;\n\t\tvar size = me._horizontal ? me.width : me.height;\n\t\tvar start = me._horizontal ? me.left : me.top;\n\t\tvar pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n\t\tvar time = interpolate$1(me._table, 'pos', pos, 'time');\n\n\t\t// DEPRECATION, we should return time directly\n\t\treturn me._adapter._create(time);\n\t},\n\n\t/**\n\t * Crude approximation of what the label width might be\n\t * @private\n\t */\n\tgetLabelWidth: function(label) {\n\t\tvar me = this;\n\t\tvar ticksOpts = me.options.ticks;\n\t\tvar tickLabelWidth = me.ctx.measureText(label).width;\n\t\tvar angle = helpers$1.toRadians(ticksOpts.maxRotation);\n\t\tvar cosRotation = Math.cos(angle);\n\t\tvar sinRotation = Math.sin(angle);\n\t\tvar tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n\n\t\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t},\n\n\t/**\n\t * @private\n\t */\n\tgetLabelCapacity: function(exampleTime) {\n\t\tvar me = this;\n\n\t\t// pick the longest format (milliseconds) for guestimation\n\t\tvar format = me.options.time.displayFormats.millisecond;\n\t\tvar exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n\t\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\n\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\t\tvar capacity = Math.floor(innerWidth / tickLabelWidth);\n\n\t\treturn capacity > 0 ? capacity : 1;\n\t}\n});\n\n// INTERNAL: static default options, registered in src/index.js\nvar _defaults$4 = defaultConfig$4;\nscale_time._defaults = _defaults$4;\n\nvar scales = {\n\tcategory: scale_category,\n\tlinear: scale_linear,\n\tlogarithmic: scale_logarithmic,\n\tradialLinear: scale_radialLinear,\n\ttime: scale_time\n};\n\nvar FORMATS = {\n\tdatetime: 'MMM D, YYYY, h:mm:ss a',\n\tmillisecond: 'h:mm:ss.SSS a',\n\tsecond: 'h:mm:ss a',\n\tminute: 'h:mm a',\n\thour: 'hA',\n\tday: 'MMM D',\n\tweek: 'll',\n\tmonth: 'MMM YYYY',\n\tquarter: '[Q]Q - YYYY',\n\tyear: 'YYYY'\n};\n\ncore_adapters._date.override(typeof moment === 'function' ? {\n\t_id: 'moment', // DEBUG ONLY\n\n\tformats: function() {\n\t\treturn FORMATS;\n\t},\n\n\tparse: function(value, format) {\n\t\tif (typeof value === 'string' && typeof format === 'string') {\n\t\t\tvalue = moment(value, format);\n\t\t} else if (!(value instanceof moment)) {\n\t\t\tvalue = moment(value);\n\t\t}\n\t\treturn value.isValid() ? value.valueOf() : null;\n\t},\n\n\tformat: function(time, format) {\n\t\treturn moment(time).format(format);\n\t},\n\n\tadd: function(time, amount, unit) {\n\t\treturn moment(time).add(amount, unit).valueOf();\n\t},\n\n\tdiff: function(max, min, unit) {\n\t\treturn moment.duration(moment(max).diff(moment(min))).as(unit);\n\t},\n\n\tstartOf: function(time, unit, weekday) {\n\t\ttime = moment(time);\n\t\tif (unit === 'isoWeek') {\n\t\t\treturn time.isoWeekday(weekday).valueOf();\n\t\t}\n\t\treturn time.startOf(unit).valueOf();\n\t},\n\n\tendOf: function(time, unit) {\n\t\treturn moment(time).endOf(unit).valueOf();\n\t},\n\n\t// DEPRECATIONS\n\n\t/**\n\t * Provided for backward compatibility with scale.getValueForPixel().\n\t * @deprecated since version 2.8.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\t_create: function(time) {\n\t\treturn moment(time);\n\t},\n} : {});\n\ncore_defaults._set('global', {\n\tplugins: {\n\t\tfiller: {\n\t\t\tpropagate: true\n\t\t}\n\t}\n});\n\nvar mappers = {\n\tdataset: function(source) {\n\t\tvar index = source.fill;\n\t\tvar chart = source.chart;\n\t\tvar meta = chart.getDatasetMeta(index);\n\t\tvar visible = meta && chart.isDatasetVisible(index);\n\t\tvar points = (visible && meta.dataset._children) || [];\n\t\tvar length = points.length || 0;\n\n\t\treturn !length ? null : function(point, i) {\n\t\t\treturn (i < length && points[i]._view) || null;\n\t\t};\n\t},\n\n\tboundary: function(source) {\n\t\tvar boundary = source.boundary;\n\t\tvar x = boundary ? boundary.x : null;\n\t\tvar y = boundary ? boundary.y : null;\n\n\t\treturn function(point) {\n\t\t\treturn {\n\t\t\t\tx: x === null ? point.x : x,\n\t\t\t\ty: y === null ? point.y : y,\n\t\t\t};\n\t\t};\n\t}\n};\n\n// @todo if (fill[0] === '#')\nfunction decodeFill(el, index, count) {\n\tvar model = el._model || {};\n\tvar fill = model.fill;\n\tvar target;\n\n\tif (fill === undefined) {\n\t\tfill = !!model.backgroundColor;\n\t}\n\n\tif (fill === false || fill === null) {\n\t\treturn false;\n\t}\n\n\tif (fill === true) {\n\t\treturn 'origin';\n\t}\n\n\ttarget = parseFloat(fill, 10);\n\tif (isFinite(target) && Math.floor(target) === target) {\n\t\tif (fill[0] === '-' || fill[0] === '+') {\n\t\t\ttarget = index + target;\n\t\t}\n\n\t\tif (target === index || target < 0 || target >= count) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tswitch (fill) {\n\t// compatibility\n\tcase 'bottom':\n\t\treturn 'start';\n\tcase 'top':\n\t\treturn 'end';\n\tcase 'zero':\n\t\treturn 'origin';\n\t// supported boundaries\n\tcase 'origin':\n\tcase 'start':\n\tcase 'end':\n\t\treturn fill;\n\t// invalid fill values\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nfunction computeBoundary(source) {\n\tvar model = source.el._model || {};\n\tvar scale = source.el._scale || {};\n\tvar fill = source.fill;\n\tvar target = null;\n\tvar horizontal;\n\n\tif (isFinite(fill)) {\n\t\treturn null;\n\t}\n\n\t// Backward compatibility: until v3, we still need to support boundary values set on\n\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n\t// controllers might still use it (e.g. the Smith chart).\n\n\tif (fill === 'start') {\n\t\ttarget = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n\t} else if (fill === 'end') {\n\t\ttarget = model.scaleTop === undefined ? scale.top : model.scaleTop;\n\t} else if (model.scaleZero !== undefined) {\n\t\ttarget = model.scaleZero;\n\t} else if (scale.getBasePosition) {\n\t\ttarget = scale.getBasePosition();\n\t} else if (scale.getBasePixel) {\n\t\ttarget = scale.getBasePixel();\n\t}\n\n\tif (target !== undefined && target !== null) {\n\t\tif (target.x !== undefined && target.y !== undefined) {\n\t\t\treturn target;\n\t\t}\n\n\t\tif (helpers$1.isFinite(target)) {\n\t\t\thorizontal = scale.isHorizontal();\n\t\t\treturn {\n\t\t\t\tx: horizontal ? target : null,\n\t\t\t\ty: horizontal ? null : target\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n\tvar source = sources[index];\n\tvar fill = source.fill;\n\tvar visited = [index];\n\tvar target;\n\n\tif (!propagate) {\n\t\treturn fill;\n\t}\n\n\twhile (fill !== false && visited.indexOf(fill) === -1) {\n\t\tif (!isFinite(fill)) {\n\t\t\treturn fill;\n\t\t}\n\n\t\ttarget = sources[fill];\n\t\tif (!target) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (target.visible) {\n\t\t\treturn fill;\n\t\t}\n\n\t\tvisited.push(fill);\n\t\tfill = target.fill;\n\t}\n\n\treturn false;\n}\n\nfunction createMapper(source) {\n\tvar fill = source.fill;\n\tvar type = 'dataset';\n\n\tif (fill === false) {\n\t\treturn null;\n\t}\n\n\tif (!isFinite(fill)) {\n\t\ttype = 'boundary';\n\t}\n\n\treturn mappers[type](source);\n}\n\nfunction isDrawable(point) {\n\treturn point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n\tvar i;\n\n\tif (!len0 || !len1) {\n\t\treturn;\n\t}\n\n\t// building first area curve (normal)\n\tctx.moveTo(curve0[0].x, curve0[0].y);\n\tfor (i = 1; i < len0; ++i) {\n\t\thelpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n\t}\n\n\t// joining the two area curves\n\tctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n\n\t// building opposite area curve (reverse)\n\tfor (i = len1 - 1; i > 0; --i) {\n\t\thelpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n\t}\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n\tvar count = points.length;\n\tvar span = view.spanGaps;\n\tvar curve0 = [];\n\tvar curve1 = [];\n\tvar len0 = 0;\n\tvar len1 = 0;\n\tvar i, ilen, index, p0, p1, d0, d1;\n\n\tctx.beginPath();\n\n\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\n\t\tindex = i % count;\n\t\tp0 = points[index]._view;\n\t\tp1 = mapper(p0, index, view);\n\t\td0 = isDrawable(p0);\n\t\td1 = isDrawable(p1);\n\n\t\tif (d0 && d1) {\n\t\t\tlen0 = curve0.push(p0);\n\t\t\tlen1 = curve1.push(p1);\n\t\t} else if (len0 && len1) {\n\t\t\tif (!span) {\n\t\t\t\tdrawArea(ctx, curve0, curve1, len0, len1);\n\t\t\t\tlen0 = len1 = 0;\n\t\t\t\tcurve0 = [];\n\t\t\t\tcurve1 = [];\n\t\t\t} else {\n\t\t\t\tif (d0) {\n\t\t\t\t\tcurve0.push(p0);\n\t\t\t\t}\n\t\t\t\tif (d1) {\n\t\t\t\t\tcurve1.push(p1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawArea(ctx, curve0, curve1, len0, len1);\n\n\tctx.closePath();\n\tctx.fillStyle = color;\n\tctx.fill();\n}\n\nvar plugin_filler = {\n\tid: 'filler',\n\n\tafterDatasetsUpdate: function(chart, options) {\n\t\tvar count = (chart.data.datasets || []).length;\n\t\tvar propagate = options.propagate;\n\t\tvar sources = [];\n\t\tvar meta, i, el, source;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tel = meta.dataset;\n\t\t\tsource = null;\n\n\t\t\tif (el && el._model && el instanceof elements.Line) {\n\t\t\t\tsource = {\n\t\t\t\t\tvisible: chart.isDatasetVisible(i),\n\t\t\t\t\tfill: decodeFill(el, i, count),\n\t\t\t\t\tchart: chart,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tmeta.$filler = source;\n\t\t\tsources.push(source);\n\t\t}\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsource.fill = resolveTarget(sources, i, propagate);\n\t\t\tsource.boundary = computeBoundary(source);\n\t\t\tsource.mapper = createMapper(source);\n\t\t}\n\t},\n\n\tbeforeDatasetDraw: function(chart, args) {\n\t\tvar meta = args.meta.$filler;\n\t\tif (!meta) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = chart.ctx;\n\t\tvar el = meta.el;\n\t\tvar view = el._view;\n\t\tvar points = el._children || [];\n\t\tvar mapper = meta.mapper;\n\t\tvar color = view.backgroundColor || core_defaults.global.defaultColor;\n\n\t\tif (mapper && color && points.length) {\n\t\t\thelpers$1.canvas.clipArea(ctx, chart.chartArea);\n\t\t\tdoFill(ctx, points, mapper, view, color, el._loop);\n\t\t\thelpers$1.canvas.unclipArea(ctx);\n\t\t}\n\t}\n};\n\nvar noop$1 = helpers$1.noop;\nvar valueOrDefault$d = helpers$1.valueOrDefault;\n\ncore_defaults._set('global', {\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true,\n\t\treverse: false,\n\t\tweight: 1000,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\t\tonLeave: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers$1.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t},\n\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t}\n\t\t\ttext.push('</li>');\n\t\t}\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t}\n});\n\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param {object} labelopts - the label options on the legend\n * @param {number} fontSize - the label font size\n * @return {number} width of the color box area\n */\nfunction getBoxWidth(labelOpts, fontSize) {\n\treturn labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ?\n\t\tfontSize :\n\t\tlabelOpts.boxWidth;\n}\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Legend = core_element.extend({\n\n\tinitialize: function(config) {\n\t\thelpers$1.extend(this, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tthis.legendHitBoxes = [];\n\n\t\t/**\n \t\t * @private\n \t\t */\n\t\tthis._hoveredItem = null;\n\n\t\t// Are we in doughnut mode which has a different data type\n\t\tthis.doughnutMode = false;\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\t// Any function defined here is inherited by all legend types.\n\t// Any function can be extended by the legend type\n\n\tbeforeUpdate: noop$1,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\t},\n\tafterUpdate: noop$1,\n\n\t//\n\n\tbeforeSetDimensions: noop$1,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop$1,\n\n\t//\n\n\tbeforeBuildLabels: noop$1,\n\tbuildLabels: function() {\n\t\tvar me = this;\n\t\tvar labelOpts = me.options.labels || {};\n\t\tvar legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n\t\tif (labelOpts.filter) {\n\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t});\n\t\t}\n\n\t\tif (me.options.reverse) {\n\t\t\tlegendItems.reverse();\n\t\t}\n\n\t\tme.legendItems = legendItems;\n\t},\n\tafterBuildLabels: noop$1,\n\n\t//\n\n\tbeforeFit: noop$1,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar display = opts.display;\n\n\t\tvar ctx = me.ctx;\n\n\t\tvar labelFont = helpers$1.options._parseFont(labelOpts);\n\t\tvar fontSize = labelFont.size;\n\n\t\t// Reset hit boxes\n\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\tvar minSize = me.minSize;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tif (isHorizontal) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = display ? 10 : 0;\n\t\t} else {\n\t\t\tminSize.width = display ? 10 : 0;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Increase sizes here\n\t\tif (display) {\n\t\t\tctx.font = labelFont.string;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// Labels\n\n\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\tvar totalHeight = 0;\n\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\thelpers$1.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\tif (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n\t\t\t\t\t\ttotalHeight += fontSize + labelOpts.padding;\n\t\t\t\t\t\tlineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\n\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t});\n\n\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t} else {\n\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\tvar currentColWidth = 0;\n\t\t\t\tvar currentColHeight = 0;\n\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\thelpers$1.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\tif (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get max width\n\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\tminSize.width += totalWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\tafterFit: noop$1,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\n\t// Actually draw the legend on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar globalDefaults = core_defaults.global;\n\t\tvar defaultColor = globalDefaults.defaultColor;\n\t\tvar lineDefault = globalDefaults.elements.line;\n\t\tvar legendWidth = me.width;\n\t\tvar lineWidths = me.lineWidths;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\tvar labelFont = helpers$1.options._parseFont(labelOpts);\n\t\t\tvar fontSize = labelFont.size;\n\t\t\tvar cursor;\n\n\t\t\t// Canvas setup\n\t\t\tctx.textAlign = 'left';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\tctx.font = labelFont.string;\n\n\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\tvar hitboxes = me.legendHitBoxes;\n\n\t\t\t// current position\n\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set the ctx for the box\n\t\t\t\tctx.save();\n\n\t\t\t\tvar lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\tctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n\t\t\t\tctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\tctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\tctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\tctx.lineWidth = lineWidth;\n\t\t\t\tctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\tctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t}\n\n\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\tvar radius = boxWidth * Math.SQRT2 / 2;\n\t\t\t\t\tvar centerX = x + boxWidth / 2;\n\t\t\t\t\tvar centerY = y + fontSize / 2;\n\n\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\thelpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t} else {\n\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\tif (lineWidth !== 0) {\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t};\n\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\tvar halfFontSize = fontSize / 2;\n\t\t\t\tvar xLeft = boxWidth + halfFontSize + x;\n\t\t\t\tvar yMiddle = y + halfFontSize;\n\n\t\t\t\tctx.fillText(legendItem.text, xLeft, yMiddle);\n\n\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\tctx.moveTo(xLeft, yMiddle);\n\t\t\t\t\tctx.lineTo(xLeft + textWidth, yMiddle);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Horizontal\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tif (isHorizontal) {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2) + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\thelpers$1.each(me.legendItems, function(legendItem, i) {\n\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width;\n\t\t\t\tvar width = boxWidth + (fontSize / 2) + textWidth;\n\t\t\t\tvar x = cursor.x;\n\t\t\t\tvar y = cursor.y;\n\n\t\t\t\t// Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n\t\t\t\t// instead of me.right and me.bottom because me.width and me.height\n\t\t\t\t// may have been changed since me.minSize was calculated\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2) + labelOpts.padding;\n\t\t\t\t\t}\n\t\t\t\t} else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\tcursor.line++;\n\t\t\t\t}\n\n\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\thitboxes[i].left = x;\n\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t// Fill the actual label\n\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor.x += width + labelOpts.padding;\n\t\t\t\t} else {\n\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\t_getLegendItemAt: function(x, y) {\n\t\tvar me = this;\n\t\tvar i, hitBox, lh;\n\n\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t// See if we are touching one of the dataset boxes\n\t\t\tlh = me.legendHitBoxes;\n\t\t\tfor (i = 0; i < lh.length; ++i) {\n\t\t\t\thitBox = lh[i];\n\n\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t// Touching an element\n\t\t\t\t\treturn me.legendItems[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\tvar hoveredItem;\n\n\t\tif (type === 'mousemove') {\n\t\t\tif (!opts.onHover && !opts.onLeave) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (type === 'click') {\n\t\t\tif (!opts.onClick) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Chart event already has relative position in it\n\t\thoveredItem = me._getLegendItemAt(e.x, e.y);\n\n\t\tif (type === 'click') {\n\t\t\tif (hoveredItem && opts.onClick) {\n\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\topts.onClick.call(me, e.native, hoveredItem);\n\t\t\t}\n\t\t} else {\n\t\t\tif (opts.onLeave && hoveredItem !== me._hoveredItem) {\n\t\t\t\tif (me._hoveredItem) {\n\t\t\t\t\topts.onLeave.call(me, e.native, me._hoveredItem);\n\t\t\t\t}\n\t\t\t\tme._hoveredItem = hoveredItem;\n\t\t\t}\n\n\t\t\tif (opts.onHover && hoveredItem) {\n\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\topts.onHover.call(me, e.native, hoveredItem);\n\t\t\t}\n\t\t}\n\t}\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n\tvar legend = new Legend({\n\t\tctx: chart.ctx,\n\t\toptions: legendOpts,\n\t\tchart: chart\n\t});\n\n\tcore_layouts.configure(chart, legend, legendOpts);\n\tcore_layouts.addBox(chart, legend);\n\tchart.legend = legend;\n}\n\nvar plugin_legend = {\n\tid: 'legend',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n\t * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Legend,\n\n\tbeforeInit: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\n\t\tif (legendOpts) {\n\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\t\tvar legend = chart.legend;\n\n\t\tif (legendOpts) {\n\t\t\thelpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n\t\t\tif (legend) {\n\t\t\t\tcore_layouts.configure(chart, legend, legendOpts);\n\t\t\t\tlegend.options = legendOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t\t}\n\t\t} else if (legend) {\n\t\t\tcore_layouts.removeBox(chart, legend);\n\t\t\tdelete chart.legend;\n\t\t}\n\t},\n\n\tafterEvent: function(chart, e) {\n\t\tvar legend = chart.legend;\n\t\tif (legend) {\n\t\t\tlegend.handleEvent(e);\n\t\t}\n\t}\n};\n\nvar noop$2 = helpers$1.noop;\n\ncore_defaults._set('global', {\n\ttitle: {\n\t\tdisplay: false,\n\t\tfontStyle: 'bold',\n\t\tfullWidth: true,\n\t\tpadding: 10,\n\t\tposition: 'top',\n\t\ttext: '',\n\t\tweight: 2000         // by default greater than legend (1000) to be above\n\t}\n});\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Title = core_element.extend({\n\tinitialize: function(config) {\n\t\tvar me = this;\n\t\thelpers$1.extend(me, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tme.legendHitBoxes = [];\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\tbeforeUpdate: noop$2,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: noop$2,\n\n\t//\n\n\tbeforeSetDimensions: noop$2,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop$2,\n\n\t//\n\n\tbeforeBuildLabels: noop$2,\n\tbuildLabels: noop$2,\n\tafterBuildLabels: noop$2,\n\n\t//\n\n\tbeforeFit: noop$2,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar display = opts.display;\n\t\tvar minSize = me.minSize;\n\t\tvar lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\t\tvar fontOpts = helpers$1.options._parseFont(opts);\n\t\tvar textSize = display ? (lineCount * fontOpts.lineHeight) + (opts.padding * 2) : 0;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = textSize;\n\t\t} else {\n\t\t\tminSize.width = textSize;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\n\t},\n\tafterFit: noop$2,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\tvar pos = this.options.position;\n\t\treturn pos === 'top' || pos === 'bottom';\n\t},\n\n\t// Actually draw the title block on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar ctx = me.ctx;\n\t\tvar opts = me.options;\n\n\t\tif (opts.display) {\n\t\t\tvar fontOpts = helpers$1.options._parseFont(opts);\n\t\t\tvar lineHeight = fontOpts.lineHeight;\n\t\t\tvar offset = lineHeight / 2 + opts.padding;\n\t\t\tvar rotation = 0;\n\t\t\tvar top = me.top;\n\t\t\tvar left = me.left;\n\t\t\tvar bottom = me.bottom;\n\t\t\tvar right = me.right;\n\t\t\tvar maxWidth, titleX, titleY;\n\n\t\t\tctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\t\t\tctx.font = fontOpts.string;\n\n\t\t\t// Horizontal\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\ttitleY = top + offset;\n\t\t\t\tmaxWidth = right - left;\n\t\t\t} else {\n\t\t\t\ttitleX = opts.position === 'left' ? left + offset : right - offset;\n\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.translate(titleX, titleY);\n\t\t\tctx.rotate(rotation);\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\n\t\t\tvar text = opts.text;\n\t\t\tif (helpers$1.isArray(text)) {\n\t\t\t\tvar y = 0;\n\t\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\t\tctx.fillText(text[i], 0, y, maxWidth);\n\t\t\t\t\ty += lineHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.fillText(text, 0, 0, maxWidth);\n\t\t\t}\n\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n\tvar title = new Title({\n\t\tctx: chart.ctx,\n\t\toptions: titleOpts,\n\t\tchart: chart\n\t});\n\n\tcore_layouts.configure(chart, title, titleOpts);\n\tcore_layouts.addBox(chart, title);\n\tchart.titleBlock = title;\n}\n\nvar plugin_title = {\n\tid: 'title',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n\t * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Title,\n\n\tbeforeInit: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\n\t\tif (titleOpts) {\n\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\t\tvar titleBlock = chart.titleBlock;\n\n\t\tif (titleOpts) {\n\t\t\thelpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n\t\t\tif (titleBlock) {\n\t\t\t\tcore_layouts.configure(chart, titleBlock, titleOpts);\n\t\t\t\ttitleBlock.options = titleOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t\t}\n\t\t} else if (titleBlock) {\n\t\t\tcore_layouts.removeBox(chart, titleBlock);\n\t\t\tdelete chart.titleBlock;\n\t\t}\n\t}\n};\n\nvar plugins = {};\nvar filler = plugin_filler;\nvar legend = plugin_legend;\nvar title = plugin_title;\nplugins.filler = filler;\nplugins.legend = legend;\nplugins.title = title;\n\n/**\n * @namespace Chart\n */\n\n\ncore_controller.helpers = helpers$1;\n\n// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\ncore_helpers(core_controller);\n\ncore_controller._adapters = core_adapters;\ncore_controller.Animation = core_animation;\ncore_controller.animationService = core_animations;\ncore_controller.controllers = controllers;\ncore_controller.DatasetController = core_datasetController;\ncore_controller.defaults = core_defaults;\ncore_controller.Element = core_element;\ncore_controller.elements = elements;\ncore_controller.Interaction = core_interaction;\ncore_controller.layouts = core_layouts;\ncore_controller.platform = platform;\ncore_controller.plugins = core_plugins;\ncore_controller.Scale = core_scale;\ncore_controller.scaleService = core_scaleService;\ncore_controller.Ticks = core_ticks;\ncore_controller.Tooltip = core_tooltip;\n\n// Register built-in scales\n\ncore_controller.helpers.each(scales, function(scale, type) {\n\tcore_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n});\n\n// Load to register built-in adapters (as side effects)\n\n\n// Loading built-in plugins\n\nfor (var k in plugins) {\n\tif (plugins.hasOwnProperty(k)) {\n\t\tcore_controller.plugins.register(plugins[k]);\n\t}\n}\n\ncore_controller.platform.initialize();\n\nvar src = core_controller;\nif (typeof window !== 'undefined') {\n\twindow.Chart = core_controller;\n}\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Chart\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\ncore_controller.Chart = core_controller;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\ncore_controller.Legend = plugins.legend._element;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\ncore_controller.Title = plugins.title._element;\n\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\ncore_controller.pluginService = core_controller.plugins;\n\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\ncore_controller.PluginBase = core_controller.Element.extend({});\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\ncore_controller.canvasHelpers = core_controller.helpers.canvas;\n\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.7.3\n * @todo remove at version 3\n * @private\n */\ncore_controller.layoutService = core_controller.layouts;\n\n/**\n * Provided for backward compatibility, not available anymore.\n * @namespace Chart.LinearScaleBase\n * @deprecated since version 2.8\n * @todo remove at version 3\n * @private\n */\ncore_controller.LinearScaleBase = scale_linearbase;\n\n/**\n * Provided for backward compatibility, instead we should create a new Chart\n * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n */\ncore_controller.helpers.each(\n\t[\n\t\t'Bar',\n\t\t'Bubble',\n\t\t'Doughnut',\n\t\t'Line',\n\t\t'PolarArea',\n\t\t'Radar',\n\t\t'Scatter'\n\t],\n\tfunction(klass) {\n\t\tcore_controller[klass] = function(ctx, cfg) {\n\t\t\treturn new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n\t\t\t\ttype: klass.charAt(0).toLowerCase() + klass.slice(1)\n\t\t\t}));\n\t\t};\n\t}\n);\n\nreturn src;\n\n})));\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"page page-analytics\"},[_c('section',{staticClass:\"analytics-group content-group\"},[_vm._m(0),_c('div',{staticClass:\"group-content\"},[_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-12 col-lg-6 analytics-this-week\"},[_c('h5',{staticClass:\"title\"},[_vm._v(\"Today\")]),_c('p',[_c('span',{staticClass:\"amount\"},[_vm._v(_vm._s(_vm.todayTodos.length))]),(_vm.todayTodos.length === 1)?_c('span',{staticClass:\"unit\"},[_vm._v(\"/tomato\")]):_c('span',{staticClass:\"unit\"},[_vm._v(\"/tomatos\")])])]),_c('div',{staticClass:\"col-12 col-lg-6 analytics-this-week\"},[_c('h5',{staticClass:\"title\"},[_vm._v(\"Week\")]),_c('p',[_c('span',{staticClass:\"amount\"},[_vm._v(_vm._s(_vm.weekTodos.length))]),(_vm.todayTodos.length === 1)?_c('span',{staticClass:\"unit\"},[_vm._v(\"/tomato\")]):_c('span',{staticClass:\"unit\"},[_vm._v(\"/tomatos\")])])])])])]),_c('section',{staticClass:\"analytics-group content-group\"},[_c('header',{staticClass:\"headerline group-title\"},[_c('div',{staticClass:\"row\"},[_vm._m(1),_c('div',{staticClass:\"col week-switcher\"},[_c('a',{staticClass:\"btn btn-week-switcher\",attrs:{\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();return _vm.setPrevWeek($event)}}},[_c('i',{staticClass:\"material-icons\"},[_vm._v(\"chevron_left\")])]),_c('time',[_vm._v(_vm._s(_vm.weekDayTodos.start))]),_c('span',[_vm._v(\"-\")]),_c('time',[_vm._v(_vm._s(_vm.weekDayTodos.end))]),_c('a',{staticClass:\"btn btn-week-switcher\",class:{'disabled': _vm.weekDayTodos.todayInWeek},attrs:{\"href\":\"#\"},on:{\"click\":function($event){$event.preventDefault();return _vm.setNextWeek($event)}}},[_c('i',{staticClass:\"material-icons\"},[_vm._v(\"chevron_right\")])])])])]),_c('div',{staticClass:\"group-content\"},[_c('div',{staticClass:\"analytics-chart\"},[_c('chart',{attrs:{\"chart-data\":_vm.chartData}})],1)])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('header',{staticClass:\"headerline group-title\"},[_c('h4',{staticClass:\"title\"},[_vm._v(\"Focus Time\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"col-auto\"},[_c('h4',{staticClass:\"title\"},[_vm._v(\"Chart\")])])}]\n\nexport { render, staticRenderFns }","function dataHandler(newData, oldData) {\n  if (oldData) {\n    var chart = this.$data._chart;\n    var newDatasetLabels = newData.datasets.map(function (dataset) {\n      return dataset.label;\n    });\n    var oldDatasetLabels = oldData.datasets.map(function (dataset) {\n      return dataset.label;\n    });\n    var oldLabels = JSON.stringify(oldDatasetLabels);\n    var newLabels = JSON.stringify(newDatasetLabels);\n\n    if (newLabels === oldLabels && oldData.datasets.length === newData.datasets.length) {\n      newData.datasets.forEach(function (dataset, i) {\n        var oldDatasetKeys = Object.keys(oldData.datasets[i]);\n        var newDatasetKeys = Object.keys(dataset);\n        var deletionKeys = oldDatasetKeys.filter(function (key) {\n          return key !== '_meta' && newDatasetKeys.indexOf(key) === -1;\n        });\n        deletionKeys.forEach(function (deletionKey) {\n          delete chart.data.datasets[i][deletionKey];\n        });\n\n        for (var attribute in dataset) {\n          if (dataset.hasOwnProperty(attribute)) {\n            chart.data.datasets[i][attribute] = dataset[attribute];\n          }\n        }\n      });\n\n      if (newData.hasOwnProperty('labels')) {\n        chart.data.labels = newData.labels;\n        this.$emit('labels:update');\n      }\n\n      if (newData.hasOwnProperty('xLabels')) {\n        chart.data.xLabels = newData.xLabels;\n        this.$emit('xlabels:update');\n      }\n\n      if (newData.hasOwnProperty('yLabels')) {\n        chart.data.yLabels = newData.yLabels;\n        this.$emit('ylabels:update');\n      }\n\n      chart.update();\n      this.$emit('chart:update');\n    } else {\n      if (chart) {\n        chart.destroy();\n        this.$emit('chart:destroy');\n      }\n\n      this.renderChart(this.chartData, this.options);\n      this.$emit('chart:render');\n    }\n  } else {\n    if (this.$data._chart) {\n      this.$data._chart.destroy();\n\n      this.$emit('chart:destroy');\n    }\n\n    this.renderChart(this.chartData, this.options);\n    this.$emit('chart:render');\n  }\n}\n\nexport var reactiveData = {\n  data: function data() {\n    return {\n      chartData: null\n    };\n  },\n  watch: {\n    'chartData': dataHandler\n  }\n};\nexport var reactiveProp = {\n  props: {\n    chartData: {\n      type: Object,\n      required: true,\n      default: function _default() {}\n    }\n  },\n  watch: {\n    'chartData': dataHandler\n  }\n};\nexport default {\n  reactiveData: reactiveData,\n  reactiveProp: reactiveProp\n};","import Chart from 'chart.js';\nexport function generateChart(chartId, chartType) {\n  return {\n    render: function render(createElement) {\n      return createElement('div', {\n        style: this.styles,\n        class: this.cssClasses\n      }, [createElement('canvas', {\n        attrs: {\n          id: this.chartId,\n          width: this.width,\n          height: this.height\n        },\n        ref: 'canvas'\n      })]);\n    },\n    props: {\n      chartId: {\n        default: chartId,\n        type: String\n      },\n      width: {\n        default: 400,\n        type: Number\n      },\n      height: {\n        default: 400,\n        type: Number\n      },\n      cssClasses: {\n        type: String,\n        default: ''\n      },\n      styles: {\n        type: Object\n      },\n      plugins: {\n        type: Array,\n        default: function _default() {\n          return [];\n        }\n      }\n    },\n    data: function data() {\n      return {\n        _chart: null,\n        _plugins: this.plugins\n      };\n    },\n    methods: {\n      addPlugin: function addPlugin(plugin) {\n        this.$data._plugins.push(plugin);\n      },\n      generateLegend: function generateLegend() {\n        if (this.$data._chart) {\n          return this.$data._chart.generateLegend();\n        }\n      },\n      renderChart: function renderChart(data, options) {\n        if (this.$data._chart) this.$data._chart.destroy();\n        this.$data._chart = new Chart(this.$refs.canvas.getContext('2d'), {\n          type: chartType,\n          data: data,\n          options: options,\n          plugins: this.$data._plugins\n        });\n      }\n    },\n    beforeDestroy: function beforeDestroy() {\n      if (this.$data._chart) {\n        this.$data._chart.destroy();\n      }\n    }\n  };\n}\nexport var Bar = generateChart('bar-chart', 'bar');\nexport var HorizontalBar = generateChart('horizontalbar-chart', 'horizontalBar');\nexport var Doughnut = generateChart('doughnut-chart', 'doughnut');\nexport var Line = generateChart('line-chart', 'line');\nexport var Pie = generateChart('pie-chart', 'pie');\nexport var PolarArea = generateChart('polar-chart', 'polarArea');\nexport var Radar = generateChart('radar-chart', 'radar');\nexport var Bubble = generateChart('bubble-chart', 'bubble');\nexport var Scatter = generateChart('scatter-chart', 'scatter');\nexport default {\n  Bar: Bar,\n  HorizontalBar: HorizontalBar,\n  Doughnut: Doughnut,\n  Line: Line,\n  Pie: Pie,\n  PolarArea: PolarArea,\n  Radar: Radar,\n  Bubble: Bubble,\n  Scatter: Scatter\n};","var render, staticRenderFns\nimport script from \"./Chart.vue?vue&type=script&lang=js&\"\nexport * from \"./Chart.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<script>\nimport { Bar, mixins } from 'vue-chartjs';\n\nexport default {\n  extends: Bar,\n\n  mixins: [mixins.reactiveProp],\n\n  props: {\n    chartData: {\n      type: Object,\n      default: null,\n    },\n    // options: {\n    //   type: Object,\n    //   default: null,\n    // },\n  },\n\n  data() {\n    return {\n      options: {\n        // scales: {\n        //   xAxes: [{\n        //     display: true,\n        //     gridLines: {\n        //       display: false\n        //     },\n        //     scaleLabel: {\n        //       display: true,\n        //       labelString: 'Month'\n        //     }\n        //   }],\n        //   yAxes: [{\n        //     display: true,\n        //     gridLines: {\n        //       display: false\n        //     },\n        //     scaleLabel: {\n        //       display: true,\n        //       labelString: 'Value'\n        //     }\n        //   }]\n        // },\n        scales: {\n          yAxes: [{\n            ticks: {\n              stepSize: 1,\n              beginAtZero: true,\n              fontStyle: 'bold',\n              fontSize: 16,\n              fontColor: '#FFFFFF',\n            },\n            gridLines: {\n              color: '#FFFFFF',\n              display: false,\n            },\n          }],\n          xAxes: [{\n            ticks: {\n              beginAtZero: true,\n              fontStyle: 'bold',\n              fontSize: 16,\n              fontColor: '#FFFFFF',\n            },\n            gridLines: {\n              color: '#FFFFFF',\n              display: false,\n            },\n          }],\n        },\n        legend: {\n          display: false,\n        },\n        title: {\n          display: false,\n        },\n        tooltips: {\n          enabled: false,\n        },\n        responsive: true,\n        maintainAspectRatio: false,\n      },\n    };\n  },\n\n  mounted() {\n    this.renderChart(this.chartData, this.options);\n  },\n};\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Chart.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Chart.vue?vue&type=script&lang=js&\"","<template>\n  <div class=\"page page-analytics\">\n    <section class=\"analytics-group content-group\">\n      <header class=\"headerline group-title\">\n        <h4 class=\"title\">Focus Time</h4>\n      </header>\n      <div class=\"group-content\">\n        <div class=\"row\">\n          <div class=\"col-12 col-lg-6 analytics-this-week\">\n            <h5 class=\"title\">Today</h5>\n            <p>\n              <span class=\"amount\">{{ todayTodos.length }}</span>\n              <span class=\"unit\"\n                v-if=\"todayTodos.length === 1\"\n              >/tomato</span>\n              <span class=\"unit\"\n                v-else\n              >/tomatos</span>\n            </p>\n          </div>\n          <div class=\"col-12 col-lg-6 analytics-this-week\">\n            <h5 class=\"title\">Week</h5>\n            <p>\n              <span class=\"amount\">{{ weekTodos.length }}</span>\n              <span class=\"unit\"\n                v-if=\"todayTodos.length === 1\"\n              >/tomato</span>\n              <span class=\"unit\"\n                v-else\n              >/tomatos</span>\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n\n    <section class=\"analytics-group content-group\">\n      <header class=\"headerline group-title\">\n        <div class=\"row\">\n          <div class=\"col-auto\">\n            <h4 class=\"title\">Chart</h4>\n          </div>\n          <div class=\"col week-switcher\">\n            <a\n              href=\"#\"\n              class=\"btn btn-week-switcher\"\n              @click.prevent=\"setPrevWeek\"\n            ><i class=\"material-icons\">chevron_left</i></a>\n            <time>{{ weekDayTodos.start }}</time>\n            <span>-</span>\n            <time>{{ weekDayTodos.end }}</time>\n            <a\n              href=\"#\"\n              class=\"btn btn-week-switcher\"\n              :class=\"{'disabled': weekDayTodos.todayInWeek}\"\n              @click.prevent=\"setNextWeek\"\n            ><i class=\"material-icons\">chevron_right</i></a>\n            <!-- <div class=\"row week-switcher\">\n              <div class=\"col-auto\">\n                <a\n                  href=\"#\"\n                  class=\"btn btn-link btn-week-switcher\"\n                  @click.prevent=\"setPrevWeek\"\n                >&lt;&lt;</a>\n              </div>\n              <div class=\"col-auto\">\n                <time>{{ weekDayTodos.start }}</time>\n              </div>\n              <div class=\"col-auto\">\n                -\n              </div>\n              <div class=\"col-auto\">\n                <time>{{ weekDayTodos.end }}</time>\n              </div>\n              <div class=\"col-auto\">\n                <a\n                  href=\"#\"\n                  class=\"btn btn-link btn-week-switcher\"\n                  :class=\"{'disabled': weekDayTodos.todayInWeek}\"\n                  @click.prevent=\"setNextWeek\"\n                >&gt;&gt;</a>\n              </div>\n            </div> -->\n          </div>\n        </div>\n      </header>\n      <div class=\"group-content\">\n        <div\n          class=\"analytics-chart\"\n        >\n          <chart :chart-data=\"chartData\"></chart>\n          <!-- <canvas ref=\"analyticsChart\"></canvas> -->\n        </div>\n      </div>\n    </section>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapMutations } from 'vuex';\nimport moment from 'moment';\n\nimport Chart from '../components/Chart.vue';\n\nexport default {\n  name: 'analytics',\n\n  components: {\n    Chart,\n  },\n\n  data() {\n    return {\n      barChart: null,\n    };\n  },\n\n  computed: {\n    weekDayTodosDates() {\n      return this.weekDayTodos.days.map(day => moment(day.date, 'YYYY-MM-DD').format('M/D'));\n    },\n    weekDayTodosAmount() {\n      return this.weekDayTodos.days.map(day => day.todos.length);\n    },\n\n    chartData() {\n      return {\n        labels: this.weekDayTodosDates,\n        datasets: [\n          {\n            label: false,\n            backgroundColor: '#FFFFFF',\n            hoverBackgroundColor: '#FF4384',\n            data: this.weekDayTodosAmount,\n          },\n        ],\n      };\n    },\n\n    ...mapGetters('todos', {\n      todayTodos: 'todayDone',\n      weekTodos: 'weekDone',\n      weekDayTodos: 'weekDayDone',\n    }),\n  },\n\n  mounted() {\n    // this.initChart();\n  },\n\n  methods: {\n    // initChart() {\n    //   this.barChart = new Chart(this.$refs.analyticsChart, {\n    //     type: 'bar',\n    //     data: this.weekDayTodosFormated,\n    //     // options: options,\n    //   });\n    // },\n\n    ...mapMutations('todos', {\n      setPrevWeek: 'TODO_SET_PREV_WEEK',\n      setNextWeek: 'TODO_SET_NEXT_WEEK',\n    }),\n  },\n};\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Analytics.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Analytics.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Analytics.vue?vue&type=template&id=75d24496&\"\nimport script from \"./Analytics.vue?vue&type=script&lang=js&\"\nexport * from \"./Analytics.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"page page-todos\"},[_c('todo-editor',{ref:\"todoEditor\"}),_c('div',{staticClass:\"todo-list-wrapper\"},[_c('todo-list',{staticClass:\"mb-5\",attrs:{\"theme\":\"light\",\"title\":\"TO-DO\",\"list\":_vm.activeTodos,\"show-more\":false,\"show-date\":true},on:{\"click-check\":_vm.doneTodo,\"click-delete\":_vm.deleteTodo}}),_c('todo-list',{staticClass:\"mb-5\",attrs:{\"theme\":\"light\",\"title\":\"DONE\",\"list\":_vm.finishedTodos,\"show-more\":false,\"show-date\":true,\"show-delete\":true},on:{\"click-delete\":_vm.deleteTodo}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"page page-todos\">\n    <todo-editor\n      ref=\"todoEditor\"\n    />\n\n    <div class=\"todo-list-wrapper\">\n      <todo-list\n        theme=\"light\"\n        title=\"TO-DO\"\n        :list=\"activeTodos\"\n        :show-more=\"false\"\n        :show-date=\"true\"\n        v-on:click-check=\"doneTodo\"\n        v-on:click-delete=\"deleteTodo\"\n        class=\"mb-5\"\n      />\n\n      <todo-list\n        theme=\"light\"\n        title=\"DONE\"\n        :list=\"finishedTodos\"\n        :show-more=\"false\"\n        :show-date=\"true\"\n        :show-delete=\"true\"\n        v-on:click-delete=\"deleteTodo\"\n        class=\"mb-5\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapMutations } from 'vuex';\nimport TodoEditor from '@/components/TodoEditor.vue';\nimport TodoList from '@/components/TodoList.vue';\n\nexport default {\n  name: 'PageTodo',\n\n  components: {\n    TodoEditor,\n    TodoList,\n  },\n\n  data() {\n    return {\n    };\n  },\n\n  computed: {\n    ...mapGetters('todos', [\n      'activeTodos',\n      'finishedTodos',\n    ]),\n  },\n\n  methods: {\n    doneTodo(todo) {\n      // TODO: stop timer.\n      console.log('doneTodo');\n      console.log(todo);\n      const data = todo;\n      data.finishedAt = new Date().getTime();\n      console.log(data);\n      this.todoUpdate(todo, data);\n    },\n\n    deleteTodo(todo) {\n      this.todoDeleteOne(todo);\n    },\n\n    ...mapMutations('todos', {\n      todoUpdate: 'TODO_UPDATE',\n      todoDeleteOne: 'TODO_DELETE_ONE',\n    }),\n  },\n};\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Todos.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Todos.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Todos.vue?vue&type=template&id=e2366a70&\"\nimport script from \"./Todos.vue?vue&type=script&lang=js&\"\nexport * from \"./Todos.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"about\"},[_c('h1',[_vm._v(\"This is an about page\")])])}]\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"about\">\n    <h1>This is an about page</h1>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'About',\n};\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./About.vue?vue&type=template&id=cf2873d0&\"\nimport script from \"./About.vue?vue&type=script&lang=js&\"\nexport * from \"./About.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}